%!PS-Adobe-3.0
%%Title: contrat-1.pdf
%%Creator: LEXPSNT3 Version 1.0
%%CreationDate: 19:28 5/10/2011
%%Pages: (atend)
%%BoundingBox: 10 13 588 829
%%LanguageLevel: 3
%%DocumentNeededFonts: (atend)
%%DocumentSuppliedFonts: (atend)
%%LXDrvModelName: LEBESGUE
%%LXOSVersion: 5, 1
%%EndComments
%%BeginProlog

%%BeginResource: procset NTPSOct95
/NTPSOct95 100 dict dup begin/bd{bind def}bind def/ld{load def}bd/ed{exch def}
bd/a{currentpoint}bd/c/curveto ld/d/dup ld/e/eofill ld/f/fill ld/tr/translate
ld/gr/grestore ld/gs/gsave ld/j/setlinejoin ld/L/lineto ld/M/moveto ld/n
/newpath ld/cp/closepath ld/rm/rmoveto ld/sl/setlinewidth ld/sd/setdash ld/g
/setgray ld/r/setrgbcolor ld/scmyk/setcmykcolor ld/s/stroke ld/t/show ld/aw
/awidthshow ld/im/imagemask ld/MS{moveto 0 eq{show}{false charpath 2
setlinewidth stroke}ifelse}bd/SF{findfont exch scalefont setfont}bd/SM{cmtx
setmatrix}bd/SCF{findfont CurrentFM makefont setfont}bd/SHF{dup cvn exch dup 0
72 put cvn dup FontDirectory exch known{SCF pop}{MHF SCF}ifelse}bd/MHF{exch
findfont dup length dict begin{def}forall dup/FontName exch def/WMode 0 def
/FontMatrix[1 0 0 1 0 0]def currentdict end 2 copy definefont pop pop}bd/MF
{exch/CurrentFM exch def exch/BoldWidth exch def exch/BoldShiftMax exch def
SCF}bd/CM{/cmtx matrix currentmatrix def}bd/B{M exch dup 0 rlt exch 0 exch rlt
neg 0 rlt}bd/CB{B cp eoclip}bd/EA{256 array 5 string 0 1 255{3 copy 6 index add
exch cvs cvn 3 -1 roll exch put}for pop exch pop}bd/MCS{5 string 0 1 255{3 copy
exch cvs cvn 3 -1 roll put}for pop dup/.notdef 0 put}bd/rlt/rlineto ld/X/xshow
ld/XY/xyshow ld/rvs{-1 2{1 roll}for}def/RMS{rm 0 eq{show}{false charpath 2
setlinewidth stroke}ifelse}bd/MSB{BoldWidth BoldShiftMax lt{4 copy 4 copy 4
copy gs moveto BoldWidth 0 RMS gr gs moveto 0 BoldWidth RMS gr gs moveto
BoldWidth BoldWidth RMS gr MS}{4 copy gs CS gr MS}ifelse}def/CS{n moveto pop
{pop pop 1 string dup 0 4 -1 roll put false charpath}exch cshow BoldWidth
setlinewidth a stroke M}def/XB{BoldWidth BoldShiftMax lt{2 copy 2 copy 2 copy
gs BoldWidth 0 rm X gr gs 0 BoldWidth rm X gr gs BoldWidth BoldWidth rm X gr X}
{2 copy gs CX gr X}ifelse}def/CX{a n M aload length 1 add rvs{/CPy exch def/CPx
exch def 1 string dup 0 4 -1 roll put false charpath CPx sub CPy neg rm}exch
cshow BoldWidth setlinewidth a stroke M}def/XYB{BoldWidth BoldShiftMax lt{2
copy 2 copy 2 copy gs BoldWidth 0 rm XY gr gs 0 BoldWidth rm XY gr gs BoldWidth
BoldWidth rm XY gr XY}{2 copy gs CXY gr XY}ifelse}def/CXY{a n M aload length 1
add rvs{/CPy exch def/CPx exch def 1 string dup 0 4 -1 roll put false charpath
CPx sub exch CPy sub rm}exch cshow BoldWidth setlinewidth a stroke M}def/L2?
/languagelevel where{pop languagelevel 2 ge}{false}ifelse def/AddT42Glyph
{GlyphDirectory 3 1 roll put dup 3 add 1 exch sfnts dup length 1 sub get 4 1
roll{exch dup 4 2 roll exch put}for pop}def end def 
%%EndResource
%%EndProlog
%%BeginSetup
[{0
/languagelevel where{pop languagelevel 2 ge}{false}ifelse
{1 dict dup/JobTimeout 4 -1 roll put setuserparams}
{statusdict/setjobtimeout get exec}ifelse
}stopped cleartomark
[{240
/languagelevel where{pop languagelevel 2 ge}{false}ifelse
{1 dict dup/WaitTimeout 4 -1 roll put setuserparams}
{statusdict/waittimeout 3 -1 roll put}ifelse
}stopped cleartomark
/#copies 1 def
[{
<< currentpagedevice /InputAttributes get 0 get /PageSize get /PageSize exch /Policies << /PageSize 2 >> >> setpagedevice
} stopped cleartomark

%%BeginFeature: *PageSize A4

 << /PageSize [595 842] /ImagingBBox null /ManualFeed false >> setpagedevice
%%EndFeature
[{
%%BeginFeature: *Duplex DuplexNoTumble

 statusdict /duplexer get exec
  { << /Duplex true /Tumble false >> setpagedevice }
  { << /Duplex false >> setpagedevice }
  ifelse
 
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *Resolution 600dpi2

<< /HWResolution [600 600] >> setpagedevice  
<< /DeviceRenderingInfo << /ImageEnhancement 1 >> >> setpagedevice << /DeviceRenderingInfo << /ImageEnhancementType 2 >> >> setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *Collate False
 << /Collate false >> setpagedevice

%%EndFeature
} stopped cleartomark

%%LXBeginCompatibilityModeSetup
statusdict dup /PS3fonts known {begin PS3fonts end}{pop}ifelse
%%LXEndCompatibilityModeSetup

%%LXBeginNUPSetup
<< /Nup false >> setpagedevice
%%LXEndNUPSetup
%%EndSetup
NTPSOct95 begin
%%Page: 1 1
%%PageBoundingBox: 10 13 588 829
%%BeginPageSetup
NTPSOct95 /PageSV save put
%%EndPageSetup
10 829 translate 72 600 div dup neg scale
0 0 transform .25 add round .25 sub exch .25 add round .25 sub exch itransform translate
userdict/Adobe_AGM_pgsv known {userdict/Adobe_AGM_pgsv get restore}if
userdict/Adobe_AGM_pgsv save put
%ADO_BeginApplicationHeaderComments
%ADO_DSC_Encoding: Windows Roman
%%Title: contrat-1.pdf
%%Creator: Adobe Acrobat 9.1.0
%%For: MYUV6263
%%CreationDate: 10/05/2011, 19:28:29
%%BoundingBox: -1 0 595 842
%%HiResBoundingBox: -0.0199 0.4601 594.9800 841.4600
%%CropBox: -0.0199 0.4601 594.9800 841.4600
%%LanguageLevel: 3
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%PageOrder: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%ADO_EndApplicationHeaderComments
%%EndComments
%%BeginDefaults
%ADO_BeginApplicationDefaultsComments
%%ViewingOrientation: 1 0 0 1
%ADO_EndApplicationDefaultsComments
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
3 3010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 898 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.1-c043 52.372728, 2009/01/18-15:08:04        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   pdf:Producer="GPL Ghostscript 8.62"
   xmp:ModifyDate="2011-05-10T14:15:28+02:00"
   xmp:CreateDate="2011-05-10T14:15:28+02:00"
   xmp:CreatorTool="UnknownApplication"
   xmpMM:DocumentID="bdb311b9-b31b-11eb-0000-77ea3ad492d2"
   xmpMM:InstanceID="bdb311b9-b31b-11eb-0000-77ea3ad492d2"
   dc:format="application/pdf">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Untitled</rdf:li>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[{Catalog} {Doc_Metadata} /Metadata pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%ADO_BeginApplicationPageHeaderComments
%%Page: 1 1
%ADO_EndApplicationPageHeaderComments
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
[
[/Label (1)]
[/TrimBox [0 .46002197265625 594.96002197266 841.4599609375]]
[/BleedBox [0 .46002197265625 594.96002197266 841.4599609375]]
[/ArtBox [0 .459991 594.96 841.46 ]]
]xpdfm
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
gsave
8.33333 8.33333 scale
-9.96 -12.84 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
-.019989 .459991 mo
-.019989 841.46 li
594.98 841.46 li
594.98 .459991 li
cp
clp
[1 0 0 1 -.019989 .459991 ]ct
false sop
/0 
[/DeviceCMYK] /CSA add_res
.0202945 .6206 1 .0015259 cmyk
%ADOBeginSubsetFont: PBAAAA+HelveticaNeue-Bold Initial
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /PBAAAA+HelveticaNeue-Bold def
/FontInfo 6 dict dup begin
/Notice (Copyright (c) 1988 Adobe Systems Incorporated.  All Rights Reserved.Helvetica is a registered trademark of Linotype AG and/or its subsidiaries.) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 116 /t put
def
/UniqueID 20087 def
/FontBBox {-54 -196 848 911} def
end
systemdict begin
dup /Private
8 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-17 -0 714 731 517 531 700 700] def
/OtherBlues [264 273 375 384 -196 -182] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
11 dict dup begin
/space <1C60D8A8C9B854D00D> |-
/a <1C60D8A8C9B7FD84E67BC3275E92651FF2F5DD326632CDCE3F3964C07781
03F5CA8E528C35F6BD6C4E42EE248437AA94374698881EABC6072D5284E30BAE
A4F21AC5B0C222AF9BD3BDB4A7550C9CBEB6457FD2F36EBC3D44537791656BEF
417D1C47B42F79BF5709D572CAA6155EDE66F294CAA3C621DF07EA262EC5C2F3
CEDF63BBAFCBF8C10D3FD2CC724EFBF27FA18429F90942794E1FE6DA289FDBE1
126CD31814745EA0243365C61914AC03C1107A> |-
/c <1C60D8A8C9B7FD8410E1EFEAD08A079AEEBA5F2AA1068B5D1B248B7051B8
110EBF4C5B1493AD5ADEA84C25CAD930238BD3AC0F2262A93D2A55ABFB97680D
A126E4F186E18DD983AA769D8C6D1D9BAD339A7B8E1EE02D0FD2> |-
/e <1C60D8A8C9B7FD8410E1EFE59764D0AC9E879756152A1DD4802F5562912C
BF475362BD26F5B8652E7F5234AC8A293F4976FDE356CD1F67B94D390DA42D68
63927587611E87759056EEF34E9C0464162DB6A2B6A4CFC070FCD6E465C68095
EBA999FEFA> |-
/i <1C60D8A8C9B868F3ECECA4B25ECB91DCC989E8B91A8521428F7B060BDE6A
CB4AF79EB6B4C7DDD5DD22784139231196DF9F2522C0BA8FED45173B2AB429B8
7E> |-
/l <1C60D8A8C9B868F3ECECA4B3CB4DF347EFB2E6322F61960A8BB3D0C58102
E4D4> |-
/n <1C60D8A8C9B7CA647DE1C48038EFEE476BDAE630F301E1676AF4E3A1AB1C
49A575B7BA5CD8F02EE542749553B0B6D1E55A249C7D38643C1F4A0B1E5C607E
923532BC981331E54D772F5A5440891CF1D5FEC685700D1724F2638384802FE7
C5CC815A008DC76BF0> |-
/o <1C60D8A8C9B7D8BE9CC7CDFCDBD8490BBD923B76E31CAF311C220AC2D63B
3AAA206FE895019E9EED8463BA7DE21064C063A878151F26C5E7BE883CF15C84
DEE66F706A44C82F703603DF963C3CB4866F976872F39AA2> |-
/p <1C60D8A8C9B7D8BE1A68BECA012E6F309A00C1C496E5ED552A184BF82F7C
BE6254E55F0B4FF4FD30F7FECC9944605E5B23BCFEF698D13119F0760ED0EB73
462CC4C778211C5DACF9C6F869FD0F3A42BAE74F478791F70A3E56E582C8786C
56F551BF21DC02F4602B22A4C80B1D62072EA2C87F30DDD1F596736BC2224E5B
0F756B291F2716AAFEF22A95D2631BEBEEC2ADE73C0A471D3D92D0D662F34E8E
FFB31298692A7C0D26CA5388A7> |-
/t <1C60D8A8C9B80A3FF00F87B10EEDA4C3E970DF679E1D082F67BAF82A4E54
69F93D34ACB1C5BF554E5B1092198D2B741E95F833764B436467EB3E914295F5
09D2DA26FC8F4B8E45FE1EF79A8FDB20> |-
/.notdef <1C60D8A8C9B854D00D> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/RPTEAA+HelveticaNeue-Bold /PBAAAA+HelveticaNeue-Bold findfont ct_VMDictPut
/RPTEAA+HelveticaNeue-Bold*1 
[32{/.notdef}rp /space 64{/.notdef}rp /a /.notdef /c /.notdef /e 
3{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n /o /p 
3{/.notdef}rp /t 139{/.notdef}rp]
RPTEAA+HelveticaNeue-Bold nf
RPTEAA+HelveticaNeue-Bold*1 [12 0 0 -12 0 0 ]msf
471.454 782.789 mo
(copia cliente)
[6.88828 7.33212 7.33212 3.09616 6.88828 3.33621 6.88828 3.09613 3.09619 6.88824 7.11627 4.22424 
0 ]xsh
/1 
[/DeviceCMYK] /CSA add_res
0 0 0 1 cmyk
%ADOBeginSubsetFont: HIBBAA+HelveticaNeue-Light Initial
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /HIBBAA+HelveticaNeue-Light def
/FontInfo 6 dict dup begin
/Notice (Copyright (c) 1988 Adobe Systems Incorporated.  All Rights Reserved.Helvetica is a registered trademark of Linotype AG and/or its subsidiaries.) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 44 /comma put
dup 46 /period put
dup 47 /slash put
dup 65 /A put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 77 /M put
dup 79 /O put
dup 80 /P put
dup 83 /S put
dup 84 /T put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 120 /x put
dup 121 /y put
dup 135 /aacute put
dup 146 /iacute put
dup 151 /oacute put
def
/UniqueID 20081 def
/FontBBox {-65 -206 773 729} def
end
systemdict begin
dup /Private
8 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-15 -0 714 729 516 531 691 706] def
/OtherBlues [265 274 368 377 -206 -191] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
45 dict dup begin
/space <1C60D8A8C9C4A637> |-
/parenleft <1C60D8A8C9B87B5D352C386837DAA27FB85C9E3720216F7422AB
E01C1CF06674DA4E9DEDFB8D48A0979E9C6627F48FB8EB7484170D1E38765E10
AC472EB3E83EBFE5848A> |-
/parenright <1C60D8A8C9B87B5D352C386837DAA27FF19FCF32D0CE68B968C
C98518EEC34A42AB8AB2A131C15500B464B30FAD2F877531ED95B17C019AB528
490FE9C0B204CD4FEC119> |-
/asterisk <1C60D8A8C9B80A3F8D637FC6DB8DCBE9D53FF992BC6AAD6C54EAA
C4C28F6FC11D11AAAFB81D63AD0BA39B3A34AA240703844B54A136EF07C573B5
B8C98AEC06BC45FEA87> |-
/comma <1C60D8A8C9B854D088E8E1BAEF395E7F9F60484962ECFB0A650F5342
9FF2EC416192E58115DEC4CD8F> |-
/period <1C60D8A8C9B854D088E8E1BAEF394528599D3BC235255CEE4A> |-
/slash <1C60D8A8C9B81F2C5C509250DC22F276378FF5EB7264DCE54634489B
6E2938FC65B89697> |-
/A <1C60D8A8C9B66B39070D84F34F867623639D7BF6F99D0285697EBBDF64E8
8371738A417B241C7155363ED29B9F86A26CE73BD157D953FB2DAEFD93C83F> |-
/C <1C60D8A8C9B635A4209ADC2B34436AA31BC9472F72A4741A2F1EF5A80F56
33E9BF0F1920F9DA5E4DC823A02C4EC26B699ED128010A3622F4B96340F47049
47EBFCF5DB20E466E279BDC5BFF98177F27F863EAE8AB6AE15B73BADA9B3E5B9
ABBB40F791> |-
/D <1C60D8A8C9B620B78F9E1EA23627969B38E7B2E3ABFE0BBFEF8915EB25C9
188616128E5305946CFA6D49202EF7CD57CA7FED657903D12B45D5E18E3077B8
DDDEAC50985C911FF26614CDE099092C0CF8E99757F51B> |-
/E <1C60D8A8C9B7CA6456E13EDCE7919984214238DE4738278B18EF2C292EE8
B6815CE3E77487DC7C0601AF8A1CA2D05E1287100330D9B97CFC> |-
/F <1C60D8A8C9B7825685F30FF52E6511772EBFE11A7D0FAF853D30C4E57A98
14FECB63C736F0D0518BD26923F0C04BD3452D34> |-
/G <1C60D8A8C9B6184A30D995F55E9D4D206C2B6FAE4B4EAF162AB2C9370A83
A9A097819F4CCF42325B939E4286430D0FC73A780494C384F6B45FCF2AEC3DC9
8FB9931A62279E7E87BD8775D8285B8991F758980C657D29EEECDB78991E2A22
DEC58B6458EF78738589A831480D0ED06B36006C2C1BA644420DD6E30957DAA4
8157E5> |-
/M <1C60D8A8C9B6B41CEC82591545F77E1132A7724B3C810C973922BC686D06
7F5F31E23720456FBF3BD2F4B64AAB3259C37BEC16848686869B5289CCE1B84E
848DACF3E318439F0FB9025BA998097F80BA146BE99E16> |-
/O <1C60D8A8C9B6184A30D995FB4151F35B966BB3C93C1EF8691DE626151E1A
F1A9AC1475CAE41E301B7BF401A77E3C516CDA3554265816A91255663916BD35
0E98D321413DBFF588698ADD58947DA516C1D2168197742B805961CA448AF3AD
C8AC59DA81> |-
/P <1C60D8A8C9B66B39070D84F3FB31AD412A1DEA66A69E55302D404107A123
7CF0341885DAD260EF241BC6B2529024D862421BB6DA0A3C5588447B687FBFD6
B6E55E37AB3D32C42CD9ADA853> |-
/S <1C60D8A8C9B66B39DBA8612108CE6650FCC9806D47F1445DFB5F83898DF4
22515A145B2E0D0933CF629D96AA9991FD322646CE967555A7CD77582ABF1038
1D5E5E39E97091ED066A077F610FC549163BF4F2DE4D3832694D329DF57A7233
02EAB57F42944210553F36B7B0024D0027A8F5ED4DE7E765A0677B373693F8FA
E64ED64BABB8DFE81F7656C931F4A1FEF2DC24BFCB2160FADA> |-
/T <1C60D8A8C9B7EF327C10274B0822670DAC46C07DCA02D9A4BF69022B5C5C
2A6352FC25659563CA5210E1AA90> |-
/a <1C60D8A8C9B7B4A1B444E4481F557DBEE3697BD69078FA816653C5D21562
5712624EEFA71832D594F0C6ADF257D43C275D556DD4E8AF208F7D3C20A124A7
AF79FEF50A2C8DF3BECA47746F637FE061E2F5BFB2A3A7286146F68BF27CCD53
D4A9484A99D41D7BAFE22F7DF84FC0F937237F2A6B4125EA6B0B214427C3F04F
BD4CEC21057B03647597851A86584E4BC44139730C61BD0F477795E51B99E2D4
61B06CA0BF1683C509829012FC74F51BFA7D1C52064D20FF78B3425CFA7FE9D2
F1> |-
/b <1C60D8A8C9B7FD841126BEF9EF1FC02E629FDB9239D81B154A71894F382E
65C949FF68CD4F7135D38F6889DFB5694C8C075DE2AB9E7BFBF48C0B4B242C67
CD4F29DE79377FC85CD1853EA23C6343B3F5F923D84E8876A7E6D727C14C0D9B
5B03683AAE8BCD812201960523BF8B1A7E1C5BA3C178803F97E457CF41DC8669
C41164415A2CF3C7E0103012> |-
/c <1C60D8A8C9B7B4A1B444E4481F557DB89851785F0D4FA9B48EAE6ED59DE7
E8C26004779FBC1217E3CCDFD267E90A5C37D98558F63BC2A475CC0DD50952AE
22FDB6EE090024D04059AF98395BB6E2D02409BA054AB9C67BC89AB747> |-
/d <1C60D8A8C9B7FD841126BEF9EF1FC02E629FDBE4D885B7CD9CE79DCAD738
9DD3C0165A10BD452B557CA39E6697562A05119E645249A7266C29DC0CF93790
F4E4A534C6241BA0665C09128B074BAEA07AC68C11470D1E2FB6D5E650C2847B
6BD8A5D12802CF3E8BE39463282D4CC64A7A43A02DBDF5ED> |-
/e <1C60D8A8C9B7B4A1B444E4471B004D524159C603E0780895C525A997A34E
16B580C00262B5820253D1663BDC5EC4E90F4A586BF2228BA0536D8D49CF6B5F
6CA1F7F35B1021AC3C6EE5FB3E5F8AAEF3F1EDE2972D926E5A2E330E146B199C
D37F4C11FD513971CB> |-
/f <1C60D8A8C9B869C13569449713703284CC671A831B5B2331103FCD202AA0
1F84B29CA4A83FD7B37E9D3997AF3DAEA626C19607584794576E0C1566E37E6A
C8D2C40AAD0D50E864A2036F65D4A71C21F7E7> |-
/g <1C60D8A8C9B7EF3227BEEFC2449EF41459689EAF428BC3F9E9B3D508F281
103DE1E6307F75F79EF9F68ED1229EAA92AB9F71A917600979896BDE5F3F43F0
9A063ED4D0BA4DD287D605238759154EA6AA090C23876962B797187E2E0A5672
AFBB9C2A855D3B92287B78279C46ECD47E1E1F96225EE64E7AEA5D7AA5B8E8FC
C08EEF725FD6CE8443998878D5BE0CA2FC1CCED488D32382FB40E47CA1235040
04DAC376F86DD284> |-
/h <1C60D8A8C9B7825685F30FFABCE44FB7D04B43E2E4607FE9B677F7160B9C
A6191B69E6120559B831535990DC4C5E690D2526B92A072F1C4C045802F8E9FB
74CF0C304E78B43F9BF0960B4940> |-
/i <1C60D8A8C9B8B3754FBD64C2A1D7787BD1964AB5BBD25E3D9A5930D2FBA3
5BA129191D42208D094ADB0645648A5178D35D9CA1> |-
/j <1C60D8A8C9B8B375146B70755C123EEB9EA89592AC3AD2B892DB10EBB309
8AB0FC8F10E4D388301B8251B9F77B5893E7EC5A6D56A039F6CB5E2F469C8440
8B79993E837D90BC7E5A00AA5BF2B7> |-
/l <1C60D8A8C9B8B3754FBD64C3595B4DB0530F094C83288633A3509762F2> |-
/m <1C60D8A8C9B6B41CEC8259143FCF62E7A34D36F7F900CED51F7A268CA732
A877BD770A1F0FE438C0F780253D1B16AEAA6EB75DE7646F14ED0630BF8D6093
EB5C9173AB74D098E966CE3FC3D05F9686DDFE9C7300758668C42CC0BD580A25
6C52F2AF54D6386D4F35C536EFAA19F1AEDD5EC6002B1D335BC17C16D28725C5
6087BB> |-
/n <1C60D8A8C9B7825685F30FFABCE44F8862339115153B66BF441F38CAF9F2
81CCFE6CC3D7AAB132B8DD3995615CC60E8769840B8FA20BB76FA3E16AB30E25
866F57B368F2568C2B7B00A26FE48FEDC1B7> |-
/o <1C60D8A8C9B7EF32A0AD7788C4984B0C749D08D554070E2E7E806C507160
8978931BC94E9F0DE22015F974079FEAE120C7BC9FF56BC131704D3ABDAF27D9
369C38B4A513106B4D166D20E68E2494086B91A48E91610A0BAA0162B8641C11
B6FE> |-
/p <1C60D8A8C9B7FD84961B6E67761716F52D23C34A97EBDC8F07E25312FB90
CD09BCB29DA2AF3D0D9FAFE45ADE31FC7A30680497A83AE0FA953D9F0A6673BE
4309CBA757E63336E008F3ACFAA37F3647FD9B72FF37C855A122D188D632A39A
273380825AEC7AB9137BFA2AA43BAF539B007CD1F4CDCD8FF9> |-
/q <1C60D8A8C9B7FD84961B6E67761716F52D23C33CD9AC2D2E2C4336755962
C8226C87CA9599652F4F86C24E0197CA7C3434C0CBB975FCD2B1F0D370AB9E0A
67CCEE484EA081F0920EF7B46F3AECFF9736C1EC54F2745425AD9EBCCCAEDB9B
F367204C06879976004F87DF1EF5CBA40FDE634DA45088662544AED4791341B1
8883E6C7EC6610C15BFB377CB2> |-
/r <1C60D8A8C9B831A9D4E5ACEC9CEF0F9CE58F46CB18B38F6B60148A3AC67E
0C9B65AC3E9AFC0BCB92CBC28EBBFC56FA5F9A5BCCCBA4611C58C57B1BCDFEBE
D83E03A03CB95E> |-
/s <1C60D8A8C9B75A17C0EE110BE33EDFDAB609CE591A3B5B077A8E621CF899
DDBD22CC6DCD8AD651FD0B24C7C0F1660C799EEE9896DFA867C34259110FB699
C985A8B3AF502322B531904DE956124D1CCA082150A25FCC2DDC5C1D8A033123
BCBFCDE8021D6C846E8443EE109400BF57223AFA28BABAF074F0C344D70F8CE7
36A01595596B470BABF804CB183A> |-
/t <1C60D8A8C9B8425713453F7A330745C2377B31B27932ADA45EB2392FC9B2
976214C0FB6FC5489B4706888BC42CE00476E7F3BAB5F7A6EB40900F45A44FB9
782C0F0356D9601ABC1D71D0ED948BC4> |-
/u <1C60D8A8C9B7825659CB426AB9C6112E6DF39063BE12B063CF226E59BF3E
70F72135B31E614B1D5A7B438E36D8683FB901FBC028500110D3B759004FFFAB
8515B07B75CBBA8D29729A6F232A0F5E9F5D67C10F64> |-
/v <1C60D8A8C9B74CDDE5440F05E883DB8DB87A9C7AF63F938821E4D15EBCDB
180C60F1B83C32673204D819A0AEF0D8FB> |-
/x <1C60D8A8C9B75A17982D11D3B3BA9F118D038B46FBBE256A6F84388E2CAB
82E13130AF71601390E62850B0BADED0283E7BF52EE90D265CF40D5223078576
B4CAE681320455D1> |-
/y <1C60D8A8C9B74CDD95582E15EB22B0A73C670A8F1061CDD6EBD4E918A2D5
3195A8AD1D4DB99CD8EBB9A9D18F01149D26BA9AA6AD696AE862B245F3D4E467
310C93F0059AC1D6972943537D1BAA51> |-
/aacute <1C60D8A8C9B7B4A1439299FD6041261156E9D4> |-
/iacute <1C60D8A8C9B8B3756431A73D147FB32639DA9D> |-
/oacute <1C60D8A8C9B7EF325767B2F0A46892B41C8D9DFB> |-
/acute <1C60D8A8C9B8B3751743C9EFB2BD129635C72F0AF69BAB23CD6479F0
BAC32310> |-
/dotlessi <1C60D8A8C9B8B3754FBD64C2A1D7784BBE234FC396D5E9263E281
EC45BD224> |-
/.notdef <1C60D8A8C9B854D00D> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/RPTEAB+HelveticaNeue-Light /HIBBAA+HelveticaNeue-Light findfont ct_VMDictPut
/RPTEAB+HelveticaNeue-Light*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /asterisk /.notdef /comma 
/.notdef /period /slash 17{/.notdef}rp /A /.notdef /C /D 
/E /F /G 5{/.notdef}rp /M /.notdef /O /P 
2{/.notdef}rp /S /T 12{/.notdef}rp /a /b /c /d 
/e /f /g /h /i /j /.notdef /l 
/m /n /o /p /q /r /s /t 
/u /v /.notdef /x /y 13{/.notdef}rp /aacute 10{/.notdef}rp 
/iacute 4{/.notdef}rp /oacute 104{/.notdef}rp]
RPTEAB+HelveticaNeue-Light nf
RPTEAB+HelveticaNeue-Light*1 [6 0 0 -6 0 0 ]msf
55.023 663.994 mo
(\(*Datos de cumplimiento opcional\))
[1.44619 2.11224 4.1102 3.11419 1.77625 3.3362 2.88622 1.66821 3.44424 3.11419 1.66821 3.1142 
3.22221 4.99817 3.44424 1.11019 1.11019 4.99817 1.1102 3.1142 3.22223 1.77624 3.3362 1.66821 
3.33621 3.44424 3.1142 1.1102 3.33621 3.22221 3.1142 1.1102 0 ]xsh
55.023 675.994 mo
(El Cliente acepta el pliego de Condiciones Generales del Servici)
[3.62982 1.18179 3.1011 4.29578 1.18179 1.18179 3.18579 3.29382 1.84784 3.18579 3.1011 3.18579 
3.18579 3.18579 3.51584 1.84784 3.18579 3.1011 3.18579 1.18179 3.1011 3.51584 1.18179 1.18179 
3.18578 3.40781 3.40781 3.1011 3.51584 3.18579 3.1011 4.29578 3.40781 3.29382 3.51584 1.18179 
3.18581 1.18179 3.40781 3.29382 3.18581 2.95782 3.1011 4.51779 3.18581 3.29382 3.18579 1.96182 
3.18579 1.18181 3.18579 2.95782 3.10112 3.51584 3.18579 1.18179 3.1011 3.85185 3.18579 1.96182 
2.84981 1.18179 3.18579 0 ]xsh
235.802 675.994 mo
(o de T)
[3.40773 3.10103 3.51575 3.18571 3.10103 0 ]xsh
254.855 675.994 mo
(elefon\222a M\227vil )
[3.18579 1.18176 3.18579 1.62579 3.40781 3.29382 1.18176 3.18579 3.10107 5.06976 3.40781 2.84976 
1.18179 1.18179 0 ]xsh
55.0237 681.994 mo
(pospago de Orange y tarifas que le han sido entr)
[3.4479 3.33987 2.88988 3.44791 3.11785 3.33987 3.33987 1.74246 3.44791 3.11785 1.74247 4.44986 
1.89388 3.11785 3.22589 3.33987 3.11785 1.74247 2.78185 1.74248 1.77989 3.11786 1.89388 1.11386 
1.55788 3.11786 2.88988 1.74248 3.44791 3.22588 3.11786 1.74248 1.11385 3.11786 1.74248 3.22588 
3.11786 3.22588 1.74246 2.88989 1.11386 3.44789 3.33986 1.74248 3.11784 3.22589 1.77989 0 
]xsh
181.879 681.994 mo
(egadas, junto con la informaci\227n r)
[3.11784 3.33987 3.11784 3.44789 3.11786 2.88988 1.67186 1.74248 1.11385 3.22588 3.22589 1.77989 
3.33986 1.74246 3.11786 3.33986 3.22588 1.74246 1.11386 3.11786 1.74246 1.11386 3.22588 1.55788 
3.33987 1.89389 5.00182 3.11784 3.11786 1.11386 3.33984 3.22589 1.74246 0 ]xsh
269.728 681.994 mo
(elativa al )
[3.11792 1.11392 3.11792 1.77997 1.11389 2.78192 3.11792 1.74252 3.11792 1.11392 0 ]xsh
55.0233 687.994 mo
(Servicio, pr)
[3.79323 3.12718 1.90321 2.79118 1.12318 3.12718 1.12318 3.3492 1.6812 1.9295 3.45723 0 
]xsh
84.2237 687.994 mo
(eviamente a la firma del pr)
[3.1272 2.7912 1.12321 3.1272 5.01117 3.1272 3.23524 1.78925 3.1272 1.92952 3.1272 1.92952 
1.1232 3.1272 1.92952 1.56724 1.12321 1.90323 5.01117 3.1272 1.92953 3.45724 3.1272 1.1232 
1.92952 3.45726 0 ]xsh
153.4 687.994 mo
(esente contrato, de las cuales ha tenido oportunidad )
[3.12717 2.89919 3.12717 3.2352 1.78922 3.12715 1.92949 3.12715 3.34918 3.2352 1.78922 1.9032 
3.12715 1.78922 3.34917 1.68118 1.92949 3.4572 3.12717 1.92947 1.12317 3.12717 2.8992 1.92947 
3.12717 3.23518 3.12717 1.12315 3.12717 2.8992 1.92947 3.2352 3.12715 1.92949 1.7892 3.12717 
3.23518 1.12317 3.45721 3.34918 1.92947 3.34918 3.45721 3.34918 1.9032 1.78922 3.2352 3.2352 
1.12317 3.45721 3.12717 3.45721 0 ]xsh
55.0233 693.994 mo
(de tomar conocimiento.)
[3.44422 3.11418 1.66819 1.77623 3.33619 4.99815 3.11417 1.89021 1.6682 3.11417 3.3362 3.22221 
3.33619 3.11417 1.11018 4.99815 1.11017 3.11418 3.22221 1.77622 3.33619 0 ]xsh
55.0233 705.994 mo
(En caso de que el Cliente haya solicitado la contrataci\227n de la modalidad Fusi\227n de )
[3.6203 3.28431 2.91099 3.17627 3.17628 2.9483 3.39828 2.911 3.50632 3.17627 2.911 3.50632 
3.2843 3.17628 2.91099 3.17627 1.17228 2.91099 4.28625 1.17228 1.17227 3.17628 3.2843 1.83833 
3.17626 2.911 3.28432 3.17627 2.84027 3.17627 2.91098 2.94832 3.39827 1.17229 1.17229 3.17627 
1.17227 1.83832 3.17627 3.50632 3.39828 2.91101 1.17227 3.17627 2.91098 3.17627 3.39828 3.28433 
1.83832 1.9523 3.17627 1.83832 3.17627 3.17627 1.17227 3.39832 3.2843 2.91098 3.50632 3.17627 
2.91098 1.1723 3.17627 2.91098 5.06024 3.39828 3.50632 3.17627 1.17227 1.17227 3.50629 3.17627 
3.50632 2.91098 3.2843 3.2843 2.94827 1.17227 3.39828 3.2843 2.91098 3.50632 3.17624 0 
]xsh
55.0233 711.994 mo
(Orange, el Cliente conoce y acepta que le ser\207n de aplicaci\227n las Condiciones Generales )
[4.46698 1.91101 3.13498 3.24302 3.35699 3.13498 1.689 2.08479 3.13498 1.13098 2.0848 4.24496 
1.13098 1.13098 3.13499 3.24301 1.79703 3.13498 2.08479 3.13499 3.357 3.24301 3.35699 3.13499 
3.13498 2.0848 2.79898 2.08479 3.13498 3.13498 3.13498 3.46504 1.79704 3.13498 2.08479 3.46501 
3.24303 3.13499 2.08478 1.13098 3.13498 2.08481 2.90701 3.13498 1.91101 3.13498 3.24304 2.08478 
3.46503 3.13498 2.08481 3.13498 3.46503 1.13098 1.13098 3.13498 3.13501 3.13498 1.13098 3.35699 
3.24301 2.08481 1.13098 3.13498 2.90701 2.08478 4.245 3.35699 3.24301 3.46503 1.13098 3.13498 
1.13098 3.35696 3.24301 3.13498 2.90701 2.08478 4.46698 3.13498 3.24298 3.13498 1.91101 3.13498 
1.13095 3.13498 2.90701 0 ]xsh
55.0233 717.994 mo
(del Servicio de T)
[3.48693 3.15689 1.15289 2.5227 3.82294 3.15688 1.93292 2.82089 1.15289 3.15688 1.15289 3.37891 
2.5227 3.48694 3.15688 2.52271 0 ]xsh
100.32 717.994 mo
(elefon\222a Pr)
[3.15688 1.15289 3.15688 1.59692 3.3789 3.26492 1.15289 3.15688 2.5227 3.82294 0 ]xsh
128.507 717.994 mo
(epago de Orange, as\222 como las condiciones particular)
[3.15688 3.48691 3.15688 3.37889 3.37888 2.52269 3.48692 3.15686 2.52269 4.48888 1.93289 3.15688 
3.26489 3.37889 3.15686 1.71089 2.52269 3.15686 2.92891 1.15288 2.52267 3.15688 3.37889 5.04083 
3.37888 2.52269 1.15288 3.15686 2.92891 2.52269 3.15686 3.37889 3.26491 3.48692 1.15286 3.15688 
1.15286 3.37888 3.26491 3.15688 2.92889 2.52269 3.48692 3.15686 1.93292 1.81891 1.15283 3.15686 
3.26495 1.15283 3.15686 0 ]xsh
275.468 717.994 mo
(es del )
[3.15686 2.92889 2.52267 3.48691 3.15689 1.15286 0 ]xsh
55.0233 723.994 mo
(m\227dulo que apar)
[4.99815 3.33619 3.44422 3.22221 1.11018 3.33619 1.6682 3.44422 3.22221 3.11417 1.6682 3.11417 
3.44423 3.11417 0 ]xsh
99.0417 723.994 mo
(ecen al dorso, y las tarifas que le han sido pr)
[3.11415 3.11414 3.11415 3.22218 1.66816 3.11415 1.11015 1.66817 3.4442 3.33616 1.89018 2.88618 
3.33617 1.66817 1.66817 2.77815 1.66817 1.11015 3.11414 2.88618 1.66817 1.7762 3.11415 1.89017 
1.11017 1.55417 3.11415 2.88618 1.66817 3.4442 3.22218 3.11415 1.66815 1.11017 3.11414 1.66817 
3.22218 3.11415 3.22218 1.66815 2.88618 1.11014 3.4442 3.33615 1.66817 3.44418 0 ]xsh
213.966 723.994 mo
(eviamente entr)
[3.11423 2.77821 1.11023 3.11423 4.9982 3.11421 3.22226 1.77628 3.11423 1.66823 3.11423 3.22226 
1.77626 0 ]xsh
251.87 723.994 mo
(egadas.)
[3.11418 3.3362 3.1142 3.44421 3.1142 2.8862 0 ]xsh
55.0234 736 mo
(Asimismo, el Cliente se obliga al cumplimiento de las condicione)
[3.80202 2.90801 1.13198 5.01995 1.13198 2.90801 5.01995 3.35799 1.68999 2.10569 3.13598 1.13198 
2.10569 4.24596 1.13197 1.13197 3.13598 3.24401 1.79803 3.13598 2.1057 2.90801 3.13598 2.1057 
3.35799 3.46603 1.13198 1.13198 3.358 3.13597 2.1057 3.13597 1.13199 2.1057 3.13597 3.244 
5.01996 3.46602 1.13199 1.13197 5.01996 1.13197 3.13599 3.244 1.79803 3.35799 2.1057 3.46602 
3.13599 2.10568 1.13199 3.13597 2.90802 2.10568 3.13599 3.35799 3.24402 3.46602 1.13199 3.13597 
1.13199 3.35799 3.24402 0 ]xsh
225.86 736 mo
(s, en su caso, r)
[2.90793 1.68991 2.10562 3.13589 3.24393 2.10562 2.90793 3.24393 2.10561 3.13591 3.13589 2.90794 
3.35791 1.68991 2.10559 0 ]xsh
267.443 736 mo
(elativas a )
[3.13599 1.13202 3.13599 1.79807 1.13199 2.80002 3.13599 2.90805 2.10571 3.13599 0 ]xsh
55.0232 742.006 mo
(compr)
[3.12841 3.35043 5.01238 3.45846 0 ]xsh
71.7693 742.006 mo
(omisos de permanencia en tarifa, y por la adquisici\227n a pr)
[3.35038 5.01234 1.12437 2.90041 3.35038 2.90041 1.95338 3.45841 3.12837 1.95338 3.45842 3.12836 
1.9044 5.01234 3.12837 3.2364 3.12836 3.2364 3.12837 1.12436 3.12837 1.95338 3.12837 3.2364 
1.95338 1.79042 3.12836 1.90442 1.12436 1.56839 3.12839 1.68237 1.9534 2.79236 1.9534 3.4584 
3.35037 1.90442 1.95337 1.12437 3.12837 1.95337 3.12839 3.4584 3.4584 3.23642 1.12436 2.90042 
1.12436 3.12836 1.12439 3.35037 3.23639 1.9534 3.12836 1.9534 3.4584 0 ]xsh
224.237 742.006 mo
(ecio pr)
[3.12839 3.12837 1.12439 3.35039 1.9534 3.45844 0 ]xsh
242.177 742.006 mo
(omocional r)
[3.35037 5.01234 3.35037 3.12836 1.12436 3.3504 3.23639 3.12836 1.12436 1.95337 0 ]xsh
272.732 742.006 mo
(elativas )
[3.12842 1.12439 3.12842 1.79047 1.12439 2.79242 3.12842 2.90045 0 ]xsh
55.0229 748.012 mo
(al terminal m\227vil que est\207 asociado en exclusiva al servicio telef\227nico asociado de Orange y )
[3.11838 1.11438 1.75309 1.78042 3.11837 1.89441 5.00235 1.11438 3.22641 3.11838 1.11437 1.75309 
5.00235 3.34039 2.78237 1.11438 1.11437 1.7531 3.44842 3.22641 3.11838 1.75309 3.11838 2.89041 
1.78043 3.11838 1.7531 3.11838 2.89041 3.34039 3.11838 1.11438 3.11838 3.44843 3.34039 1.75308 
3.11838 3.22641 1.75311 3.11838 2.89041 3.11838 1.11438 3.22641 2.89041 1.11438 2.78238 3.11838 
1.75308 3.11839 1.11438 1.75308 2.89041 3.11838 1.89441 2.78238 1.11438 3.11838 1.11438 3.34039 
1.75311 1.78043 3.11838 1.11438 3.11838 1.55841 3.34039 3.22641 1.11438 3.11838 3.34039 1.75308 
3.11838 2.89041 3.34039 3.11838 1.11438 3.11838 3.44843 3.34038 1.75311 3.44843 3.11841 1.75305 
4.45038 1.89441 3.11841 3.22638 3.34039 3.11841 1.75311 2.78235 0 ]xsh
55.0229 754.018 mo
(que figuran al dorso/hoja siguiente.)
[3.44419 3.22218 3.11415 1.66817 1.55418 1.11015 3.33617 3.22218 1.89018 3.11414 3.22218 1.66816 
3.11415 1.11015 1.66817 3.4442 3.33617 1.89017 2.88618 3.33617 1.99812 3.22218 3.33617 1.11015 
3.11415 1.66817 2.88618 1.11015 3.33617 3.22218 1.11015 3.11414 3.2222 1.77618 3.11415 0 
]xsh
.2 setflat
.11 lw
0 lc
0 lj
3.864 ml
[] 0 dsh
true sadj
303.055 755.283 mo
308.246 755.283 li
308.246 750.068 li
303.055 750.068 li
cp
@
303.055 745.994 mo
308.246 745.994 li
308.246 740.778 li
303.055 740.778 li
cp
@
303.055 736.993 mo
308.246 736.993 li
308.246 731.777 li
303.055 731.777 li
cp
@
303.055 727.894 mo
308.246 727.894 li
308.246 722.678 li
303.055 722.678 li
cp
@
%ADOBeginSubsetFont: HIBBAA+HelveticaNeue-Light AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
RPTEAB+HelveticaNeue-Light dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/hyphen <1C60D8A8C9B7299ABB739836B45CCF84178EE4F9F243B3E8A552832
D857B> |-
/zero <1C60D8A8C9B7EF32A0AD7789A4E550A9495F3F487C8B6C812CF53150C
9FE396CBC70026F50D53F04196E77BF285B063EC2C6C497EB9B1BA2083A39C92
680B0A1C69CCEBD41A9084CDAE0FAD84B6569F7A622E35B1036B335613398744
48E80AA> |-
/one <1C60D8A8C9B7EF327C10274AC2F074AB971756F571CA1CA6BC65700D3E
CFD99162C3A41B3CBD601600095433291366C5A1E595> |-
/two <1C60D8A8C9B7EF32575579508822BE904A0ECF49B1327FF8F1A8437786
E8E9A769C1DE403A5B6C47455A7E7AA54EC0D00992D9B446CA99ADFE3115F0DF
85160B9D0E7F5F2C7EBEB8CB72F8CE5927039D5CF4DB8D47FCFE7DBF46AD8FA0
676E91533977> |-
/three <1C60D8A8C9B7EF32A0AD7787014148F9F7B01B8718CF86E6C97715D6
B6A6366BA9B95A2396A693DDA225C80E4397FC914524C2C1B7CCF1E0CEFA5485
482766B25191789C24EF3EB80A349C2B7D2303AE0632FCFABC4AE8926AB2D667
2CAF89737ACD8A4E64B51ECEC4731892F7AE0914743C5F666925B1879CD745D5
2F40ADB675B3DB62D4EA0E95D592F36A582EDFB139D9F610CA262E59918ACAF5
C3C1FD51DE85E775481717131C24988FEAEA39C564FBADBA> |-
/five <1C60D8A8C9B7EF32A0AD7788996CE1209CCDC70144CADC8C2A5A53D6B
FC44764EA4104F137D2244F65A1E4732B2776FA0CD19618B6E7578D5EAF4FD8E
9CA54A5BDF11D304577D869DE4C419B1CD625F892C623470005E460EDE3292DB
76A28CBEF70216C6DCFDE8BFAC7EBF182> |-
/six <1C60D8A8C9B7EF32A0AD778891F9BE3FCA80F203F1AEC906C2D8CC7592
53C40B4235731CAAEA81D16A1AFE049BAE6225150841D599F6575E107CB70D3C
45128EBB96CB9BC9D94817CFDA0F335E9E78E038EE20A5830BF2479C037E8086
B90E1E26855ABD5CD9FCBFA56930B33B86F993098D4065CBFFF8B4279DC18ADA
C1169A398CEA2B451E8C0A867D62B0CCBE9FC686F6B431E349630BA3884C0590
7CCA54C60BE2F2299D1D1F> |-
/seven <1C60D8A8C9B7EF327C10274B21CAF3D79DA4E4FC75EEC6072FAF23F4
AF8DD719A92464A4A96BB061022CD3B67663B97702756DB9C4B45E32> |-
/eight <1C60D8A8C9B7EF32A0AD778718CD0DABD97006096D921013013E3815
0052AE811DB6A3F26EDB6A392C9C923A6273A830894AC11FA864F0B5E5FB3FD2
44117593040E850657D05A8ED409E2C7743EEC8BF048C82A3762047FAFC3C2D2
FF7A67251E90CC4337279E53BE7039A8B230FD9DE38CD9CFDFEA1D2220DC51E3
5ED6052D7263A0F2D07B401F0F6494CDEAA5E42FF9D1AC572648444ED8404F35
0BE070495FF53874587071FD512DB8DC1089A8C7DAAEFF0201ADF00128E5AA02
B697F06DB7C27AC6E30FDAA97BE0BD8E276D5E15C61A1C9EC729B1157119F1D1
7645C5> |-
/nine <1C60D8A8C9B7EF32A0AD778797B54ADF28F8686EEFCC387BEF399794A
EAEBF267000F58396CB8FF4A2B20F029EF1440F30DB77121AC14D5525DAD9D73
F3BBC6A7313CBB3DB128CEC311A5A8459CEC059880FB85AFC5FC6F6228B56C2C
635D09B7ECE7112F9FA1617B9C122AC25D06588570170A18A93ABF874AF809B6
8579950F07688FA5CA6EFCC470724A3F3F7EAFA0FFBC794465C0892CA6692DFF
EDC8A9843460B76CCED> |-
/colon <1C60D8A8C9B854D0FBC6271FE40937CFF5C15882BD6649B46C9DADCF
340C99455619947A400D5717C51D901F5B2DFB> |-
/H <1C60D8A8C9B635A4FCB3B92E9933EE222F284899E363474C64135ACFF80C
BCAA72400ED0A0B2041AEBD9FB40E2D7A4A2A72B27427FE9A67E80A203> |-
/I <1C60D8A8C9B88C082599D5E8A418F1D4DF74F5840FBFB4FDAD11DA3543> |-
/L <1C60D8A8C9B78256AE5058BE79108D7797212E9D9618BFFDADC6ABAECBB0
D5449B2AA6> |-
/N <1C60D8A8C9B635A4FCB3B9207397550562D0A82F3408230B9D0EF0DC5787
85956E12B9EEBBC858D16C1C1BF44DFB306B761892B4381BBC5924> |-
/R <1C60D8A8C9B64EDFA3F30AE4B9D1D4BB3211B6AFD40148C2E8908E43D850
802746D004DD3E1F42340B560D3C7EC270BF1FBA5ADB63F38C1AFEF400E547B1
174B0ED97770A28C473C3CAA140C9BEFF643A43D7FDC7F3CC02D049AC6047F23
A1351FEF4FF61A9497DDA47444221C2F12679A650416551F7E5A790F360B3A18> |-
/X <1C60D8A8C9B7FD84CD08F2924198E748858C1B118201B362CEB64741E1E4
631EA25F54D06723591D04B587681AB273053185BFDBEB0FCC674D057A9BF96A
4F93AEC3B3D4DB> |-
/k <1C60D8A8C9B7A73DC524B0AE81B9DE667AA00CEC8EF17DA44653075F0AF2
EF47CDBFAD5981D91B63C8EA1F0B4EB26AB26D9D1A985121FCF3A6D69B6A4A5A
E45A8E55A1EF7AE578F625> |-
/z <1C60D8A8C9B74CDD96B1F4A6FE2FAF1A8CDA424C478457AB803FDE63032C
24E0D1F7728CFB3B20F79923E490B1AC902F4D0B830781> |-
/eacute <1C60D8A8C9B7B4A1439299FD7CBD06B2255C8C> |-
/ntilde <1C60D8A8C9B78256AE629907E64137BCD2E35CC8> |-
/uacute <1C60D8A8C9B78256AE629907E64AF60304F0807B> |-
/ordmasculine <1C60D8A8C9B81CBBB570C90C670163AB42D2D7D1F56DDC117
A5E59E77E2D14B2D847CD1B92E6AAFAA65B3E73CC2DEA453B1C6B287E330FB4D
858C89C2C83BF13EF6B7ABBDB67EEF17F7FF1BD> |-
/tilde <1C60D8A8C9B8B3751757B0B480DD077A7365DAEB6A2C1C54590FB2B1
57BB9FEDA80A8CAA58BEF3E66D0DD2AA5111A12DD4AC6183904B66A6AF7E2E60
1F6F0A3341FDE8B3B4A151A72B5D924E8FFA85> |-
systemdict /gcheck known {setglobal} if end {end} if
end
RPTEAB+HelveticaNeue-Light /Encoding get
dup 45 /hyphen put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 72 /H put
dup 73 /I put
dup 76 /L put
dup 78 /N put
dup 82 /R put
dup 88 /X put
dup 107 /k put
dup 122 /z put
dup 142 /eacute put
dup 150 /ntilde put
dup 156 /uacute put
dup 188 /ordmasculine put
pop
%ADOEndSubsetFont
/RPTEAB+HelveticaNeue-Light*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /asterisk /.notdef /comma 
/hyphen /period /slash /zero /one /two /three /.notdef 
/five /six /seven /eight /nine /colon 6{/.notdef}rp /A 
/.notdef /C /D /E /F /G /H /I 
2{/.notdef}rp /L /M /N /O /P /.notdef /R 
/S /T 3{/.notdef}rp /X 8{/.notdef}rp /a /b /c 
/d /e /f /g /h /i /j /k 
/l /m /n /o /p /q /r /s 
/t /u /v /.notdef /x /y /z 12{/.notdef}rp 
/aacute 6{/.notdef}rp /eacute 3{/.notdef}rp /iacute 3{/.notdef}rp /ntilde /oacute 
4{/.notdef}rp /uacute 31{/.notdef}rp /ordmasculine 67{/.notdef}rp]
RPTEAB+HelveticaNeue-Light nf
RPTEAB+HelveticaNeue-Light*1 [6 0 0 -6 0 0 ]msf
303.055 676.045 mo
(El Cliente consiente el tratamiento de sus datos personales de a)
[3.58371 1.13565 2.1799 4.24966 1.13565 1.13568 3.13968 3.24768 1.80173 3.13968 2.17987 3.13968 
3.36166 3.24771 2.91171 1.13568 3.13965 3.24771 1.80173 3.13965 2.1799 3.13968 1.13565 2.1799 
1.8017 1.91571 3.13968 1.80173 3.13965 5.02365 1.13565 3.13968 3.24771 1.80173 3.36166 2.1799 
3.4697 3.13968 2.1799 2.91168 3.24768 2.91171 2.1799 3.4697 3.13968 1.8017 3.36169 2.91168 
2.17987 3.46973 3.13965 1.91571 2.91168 3.36169 3.24768 3.13968 1.13565 3.13968 2.91168 2.1799 
3.4697 3.13968 2.17987 0 ]xsh
474.811 676.045 mo
(cuer)
[3.13971 3.24777 3.13971 0 ]xsh
486.146 676.045 mo
(do con la Condici\227n )
[3.4697 3.36163 2.17987 3.13965 3.36163 3.24768 2.17984 1.13565 3.13965 2.17987 4.24957 3.36169 
3.24768 3.46967 1.13562 3.13965 1.13562 3.36169 3.24768 0 ]xsh
303.055 682.045 mo
(General 10. Los datos aportados se incluir\207n en un ficher)
[4.51624 3.18427 3.29227 3.18427 1.96027 3.18427 1.18024 3.07156 3.40625 3.40628 1.73825 3.07156 
3.2923 3.40625 2.95627 3.07156 3.51431 3.18423 1.84631 3.40625 2.9563 3.07156 3.18423 3.51431 
3.40628 1.96027 1.84631 3.18423 3.51431 3.40625 2.9563 3.07153 2.9563 3.18427 3.07153 1.18027 
3.29227 3.18427 1.18024 3.2923 1.18024 1.9603 3.18423 3.2923 3.07156 3.18423 3.2923 3.07153 
3.2923 3.2923 3.07153 1.6243 1.18027 3.18423 3.29227 3.18427 0 ]xsh
466.536 682.045 mo
(o automatizado de France )
[3.40628 3.07162 3.18427 3.2923 1.84634 3.40628 5.06827 3.18427 1.84634 1.18027 2.8483 3.18427 
3.51434 3.40628 3.07162 3.51428 3.18433 3.07159 3.2923 1.96027 3.18433 3.2923 3.18427 3.18427 
0 ]xsh
303.055 688.045 mo
(T)sh
305.741 688.045 mo
(elecom Espa\226a S.A. \(Orange\) y el Cliente podr\207 ejer)
[3.13028 1.12628 3.13031 3.13028 3.35229 5.01425 1.9917 3.57431 2.90234 3.46033 3.13028 3.23831 
3.13028 1.9917 3.79636 1.6843 3.79633 1.6843 1.9917 1.46228 4.46228 1.90634 3.13028 3.23831 
3.35229 3.13028 1.46231 1.9917 2.79428 1.9917 3.13028 1.12631 1.9917 4.24023 1.12631 1.12628 
3.13028 3.23831 1.79233 3.13028 1.9917 3.46033 3.35229 3.46033 1.90631 3.13028 1.9917 3.13031 
1.12628 3.13025 0 ]xsh
442.422 688.045 mo
(citar conforme a la Ley sus der)
[3.13025 1.12628 1.7923 3.13028 1.90628 1.99167 3.13028 3.35226 3.23831 1.57028 3.35229 1.90628 
5.01425 3.13025 1.99167 3.13028 1.99167 1.12625 3.13028 1.99167 3.23828 3.13028 2.79425 1.9917 
2.90228 3.23831 2.90228 1.9917 3.46027 3.13031 0 ]xsh
524.126 688.045 mo
(echos )
[3.13025 3.13025 3.23828 3.35223 2.90228 0 ]xsh
303.055 694.045 mo
(de acceso, r)
[3.46933 3.13925 2.17068 3.13928 3.13928 3.13925 3.13928 2.91132 3.36127 1.6933 2.17068 0 
]xsh
336.335 694.045 mo
(ectificaci\227n, cancelaci\227n y oposici\227n dirigiendo escrito a Orange, Ref. Datos, )
[3.13925 3.13928 1.8013 1.13525 1.57932 1.13525 3.13925 3.13925 3.13928 1.13525 3.36127 3.24731 
1.69327 2.17068 3.13925 3.13925 3.24728 3.13928 3.13925 1.13528 3.13925 3.13925 1.13528 3.36127 
3.24728 2.17068 2.80325 2.17068 3.3613 3.4693 3.36127 2.91132 1.13525 3.13928 1.13525 3.36127 
3.24731 2.17065 3.46933 1.13525 1.91531 1.13525 3.36127 1.13525 3.13928 3.24731 3.4693 3.36127 
2.17068 3.13925 2.91132 3.13925 1.91531 1.13525 1.8013 3.3613 2.17065 3.13928 2.17068 4.47125 
1.91531 3.13925 3.24728 3.36127 3.13928 1.6933 2.17065 4.02734 3.13922 1.57935 1.69324 2.17072 
4.13525 3.13922 1.80133 3.36127 2.91125 1.6933 0 ]xsh
303.055 700.045 mo
(Par)
[3.81738 3.15137 0 ]xsh
311.843 700.045 mo
(que empr)
[3.48135 3.25934 3.15131 2.41165 3.15131 5.03528 3.48135 0 ]xsh
337.633 700.045 mo
(esarial La Finca, Paseo del Club Deportivo, 1 Edificio 8, 28223-Pozuelo de )
[3.15125 2.92328 3.15125 1.92728 1.14725 3.15125 1.14728 2.41156 3.25928 3.15125 2.41156 3.25928 
1.14725 3.25928 3.15128 3.15125 1.70526 2.41156 3.81729 3.15125 2.92328 3.15125 3.37326 2.41156 
3.48129 3.15125 1.14725 2.41156 4.26123 1.14725 3.25928 3.48129 2.41156 4.14725 3.15125 3.48129 
3.37326 1.92728 1.81329 1.14725 2.81525 3.37326 1.70526 2.41156 3.37329 2.41156 3.59528 3.48129 
1.14725 1.59128 1.14725 3.15125 1.14725 3.37326 2.41156 3.37326 1.70526 2.41156 3.37326 3.37326 
3.37326 3.37326 3.37326 2.25723 3.81729 3.37329 2.81519 3.25928 3.15125 1.14728 3.37323 2.41162 
3.48126 3.15125 0 ]xsh
303.055 706.045 mo
(Alar)
[3.78027 1.11026 3.11423 0 ]xsh
312.842 706.045 mo
(c\227n, Madrid.)
[3.11417 3.33618 3.2222 1.66818 1.66818 4.99814 3.11414 3.44421 1.8902 1.11017 3.44421 0 
]xsh
303.055 718.051 mo
(Opcional: )
[4.44617 3.44424 3.11417 1.11017 3.33618 3.22223 3.11417 1.11017 1.66821 0 ]xsh
303.055 727.252 mo
(     No r)
[1.66806 1.66806 1.66806 1.66806 1.66809 4.22403 3.33606 1.66806 0 ]xsh
322.405 727.252 mo
(ecepci\227n publicidad de ter)
[3.1142 3.11423 3.1142 3.44424 3.11423 1.1102 3.33624 3.22223 1.66821 3.44427 3.22223 3.44427 
1.1102 1.1102 3.11423 1.1102 3.44427 3.1142 3.44424 1.66824 3.44424 3.1142 1.66824 1.77625 
3.1142 0 ]xsh
390.768 727.252 mo
(cer)
[3.11426 3.11426 0 ]xsh
398.779 727.252 mo
(os)
[3.33606 0 ]xsh
303.055 736.453 mo
(     No tratamiento datos facturaci\227n/tr\207fico con fines comer)
[1.66818 1.66818 1.66815 1.66818 1.66818 4.22415 3.33615 1.66818 1.77621 1.8902 3.11414 1.77621 
3.11417 4.99814 1.11017 3.11417 3.22217 1.77621 3.33618 1.66818 3.44421 3.11414 1.77621 3.33618 
2.8862 1.66815 1.5542 3.11417 3.11417 1.77621 3.2222 1.8902 3.11414 3.11417 1.11017 3.33618 
3.2222 1.99811 1.77621 1.8902 3.11417 1.55417 1.11014 3.11417 3.33618 1.66818 3.11414 3.33618 
3.22217 1.66818 1.55417 1.11017 3.2222 3.11417 2.88617 1.66818 3.11417 3.33615 4.99814 3.11414 
0 ]xsh
457.108 736.453 mo
(ciales!)
[3.1142 1.1102 3.11423 1.1102 3.1142 2.88623 0 ]xsh
303.055 745.654 mo
(     No r)
[1.66806 1.66806 1.66806 1.66806 1.66809 4.22403 3.33606 1.66806 0 ]xsh
322.405 745.654 mo
(ecepci\227n publicidad de Orange)
[3.1142 3.11423 3.1142 3.44424 3.1142 1.11023 3.33621 3.22223 1.66821 3.44427 3.22223 3.44424 
1.11023 1.1102 3.1142 1.11023 3.44424 3.1142 3.44427 1.66821 3.44424 3.11423 1.66821 4.4462 
1.89023 3.11423 3.22223 3.33621 0 ]xsh
303.055 754.855 mo
(   !)
[1.60812 1.60812 1.60815 0 ]xsh
311.759 754.855 mo
(No comunicaci\227n datos a empr)
[4.16425 3.27631 1.60828 3.05429 3.27628 4.93823 3.16232 3.16229 1.05029 3.05426 3.05429 3.05426 
1.05029 3.27628 3.16232 1.60828 3.38431 3.05429 1.71631 3.27631 2.82629 1.60828 3.05429 1.60828 
3.05429 4.93823 3.38434 0 ]xsh
391.338 754.855 mo
(esas del Grupo Societario al que pertenece Orange)
[3.05429 2.82632 3.05426 2.82632 1.60831 3.38434 3.05429 1.05029 1.60828 4.38629 1.83032 3.16232 
3.38434 3.27631 1.60828 3.72034 3.27631 3.05429 1.05029 3.05429 1.71631 3.05429 1.83032 1.05029 
3.27628 1.60831 3.05429 1.05029 1.60831 3.38431 3.16235 3.05426 1.60831 3.38434 3.05429 1.83032 
1.71631 3.05429 3.16232 3.05429 3.05429 3.05429 1.60831 4.38629 1.83032 3.05429 3.16232 3.27631 
0 ]xsh
RPTEAB+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
55.0243 358.317 mo
(n\274 de tel\216fono Orange!!)
[3.7592 2.33818 1.94618 4.01822 3.63316 1.94617 2.07222 3.63316 1.29517 3.63316 1.8132 3.89217 
3.75919 3.89218 1.94618 5.18716 2.20519 3.63316 3.75919 3.89218 3.63316 1.94618 0 ]xsh
55.0243 376.317 mo
(n\274 tarjeta SIM!)
[3.7592 2.33818 1.94618 2.07222 3.63316 2.2052 1.29516 3.63316 2.07221 3.63316 1.94618 4.41022 
1.55418 5.83112 0 ]xsh
%ADOBeginSubsetFont: PBAAAA+HelveticaNeue-Bold AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
RPTEAA+HelveticaNeue-Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/period <1C60D8A8C9B854D088EA530B20E3B0DEE3CA00DEF27483AD4E92322
9DB> |-
/slash <1C60D8A8C9B728C5D24E1BE6883F8E70459C44AB40B2AEFF9B813954
EDB7A660C8FB29> |-
/zero <1C60D8A8C9B7EF32A1CB48DEAA21709CC50DCA8C1EC1ABD4E7EB557E2
CDD0F6DE60B49FACB4CB8874F51128AFB43D4F5EA072546CDF8C15C60681D530
A7A36D335C35F801FAD4327B2D61364B3F8A9BC23F682E0555A2BB5EF89BDF56
928A96D> |-
/one <1C60D8A8C9B7EF327C10274A04E5FCB2D9895617BC7F34D9E114D9FCD9
D31908F21A140D13E77FA0CC46276F81D2C850A798D540> |-
/two <1C60D8A8C9B7EF325767F2170BB2E147AE30CDCDCD8345D5F0FD0C9311
672852791EE54A7202D78E2180B10262EF9A254BFE10B9C6FCF355FEBE2FBEC1
A088105AF7394DBC2821BEBCAE54DB4BB6238F0778F445CE42EEB8D38B1E0BF3
A92A96024DB24C> |-
/three <1C60D8A8C9B7EF32A1CB48DEA511732BD6FFE1D4F60543CB0C044FA3
ADAD24E62F2164F6A0B9A9B93202DD96D9532FF1CFF13140A48E10B88EC6B175
BF7530781BE7E79FEDB4C49161015917B19D8ABA2217A77D740752B8DFAAFBE8
A4D866AF4119347407B58296791095686FD08E556B4FE3EA89AA5CA6ADC940FD
5A997AB09A47556E8BBE0B0B9C97621CA04DC40355C9A60065D22A1EEB8A2405
7864FB6EE125CC5963BA4E8B42AD76> |-
/four <1C60D8A8C9B7EF327C10274560C9BEBE172155A7D278E733811D9A19B
96BF6E498600B139262EF956B7082FF89E4FE9B1C1F2DD7DB2DF011E97EFD1F8
19FB1006365841372EBFF2585C8> |-
/five <1C60D8A8C9B7EF32A1CB48DEAACDCE1E5E912AFA02E3D131937ECEE40
F6B86A8E08F7B68783F01F5ABFB17625300FD4DF0E5FFCC6C57DBBFD22A1C348
B58600BE82DF50DC9F3741ACF0CC8CB768958C774B7AD44AE3E9A56A8A6C3930
4BDF34065640DF71D190F6290E4FB42EC12772DCF8297> |-
/six <1C60D8A8C9B7EF32A1CB48DEA53F45D09C37EA7450C2C2CEFA7F7C878E
833CE6BC4657DEB6EA7AA044EB678EF5B8609B793B31AC0F8597734240238BCF
7BBE7BBF8A0FDA8307B31DECEC1010396D25B6785765456D8E0C21EE03F2C6CA
8A2BA713EED19C9755045F4EB2EC1508C3A61FECE9E3FC98E6DCBB752E3A501D
A76492463692DFE9> |-
/seven <1C60D8A8C9B7EF327C10274A92648603D2C6D5D5FCD38A20F06AA979
84AB92BDCAB8A6567F6D41C9FBF59484016F13FA25D12105FF018803399F03D1
EB39220582FA49BD9EC0CB5BA665> |-
/eight <1C60D8A8C9B7EF32A1CA72DBF2CA945BD7876F6F548324A9E35E9E8C
39362FA988EAE23E07949A6B59F5AB294AD19F47EA82EB4390BB05B3E8E18946
3D3D2C2A73D84BA1D153A07071BE3C6729426C30C79DC94B2246F1E908CD63FF
6830B1AE10A5D16B255312C74D8AE8F95A8BA8FC0FF9BA9984C065939580CF8C
7B9794139274863D13B02195A1FEC9DF4C820FE95AD387D737CBEC6AA44E57F3
97ADDED5B407D9B0C7E26D7A04EDC5EC0E732EA02C9259936EA4FDA29A53DCA6
792394BC04644493C0DE3F1ACDB06FAC2A9D34DFF7D29BF66C749DFA344FB181
6A487989BC48882384F5176B97BC011E70FBA7B5E9BD17ABAB6AEFBEE13C70DD
6F32DE62C638F43621DFBD0D3B3630D3D4B04400B6> |-
/nine <1C60D8A8C9B7EF32A1CA72D420198944AE95BBEAA3C89FD8DA128E4FE
8FC5D461A996DAD4D42D71D9F07A84B305DA5EB6983B6F0755A6A95E98BA48A6
6999F6378B2A7743D8FC40A092CD51F0B4086A0DF827E165838FD80162FE1F9F
90CCE9029345523917FE0B853AFA6685328B76E7FDBF9A651FB1AE29E02C9832
8B17D1D20542C69> |-
/at <1C60D8A8C9B6D5A0DEC092BD5070A8FFE0EE35034E88293F380474562B6
C5030915E1DC5FC8D25DE3C592917B0E9195D5ACAADF0DEBF8A917967F20D086
77F74A8037DEB6CE1C36D6AF807D224719EE39230240B8065D6F721EC10BC258
08891F709277276E6673C14091BAE0E1052CB5F4BD1DEEA7BEEDA8E8F121FE56
D5451A94FAC39EBD1BB001F886E7F062B2FC51D7DBB2A70F6B4347D0AB03356E
0C2C4BA2906A92CB6B78C9CD14801B18476BAA3283530523C3F01350B67A78B9
05CAA1655F4C4C96706EC228AFD7DE8B111EA1216151B80DC0CD5CB0F90E8259
84B2191A6> |-
/A <1C60D8A8C9B620B7A43CC51579C8D121C58BBE933C07AB94D996447A678F
4949EA32ACEE213F8A4439C799E8BE68DF3C6CD527046F55ABAEC874FA31DFA2
2A9238967C> |-
/B <1C60D8A8C9B635A4D71865DBDA3FC777F96778AD46ADBA8C30C5EE87A666
3EE6FBC13BE79FEB91764B7E8E6DF7F3D12799AC2E5D4810DADEF55AE2F604EB
8D3FCAEB958ED1928305996B548FBFCF46A33EC4EFA4AE70DCAA25C5973CB19A
1B65F43306323CF5B63D0EF81F66A976C855AB57514C8651995449183B81DCE9
591F1CE04DF95A6A507F> |-
/C <1C60D8A8C9B6184A36046A485CC32551579D6D08B181C8223B6A468F99CE
9ECB396E0A60E664886DD7FDFE4B7E8976D6FDDAF89D222084E6E7178536CDA2
18425BEE56E793A5046315BACBEDE5F7EEC9AF390DD5A823C1CFBAF894F213C2
302DC1F8B273> |-
/D <1C60D8A8C9B6184AC728F715EA440622B8039708F04AF96E41DE1A58EA80
BC41BEB10657585AC4DC6E49D03D22B772630F66660AABD8DB8908344D75CE98
0D442B8743124A0CBA0CF6B5F1E69DB7> |-
/E <1C60D8A8C9B67DB5F4526A7E94FABE07028B57E65A9AF78EF96609CDB235
DFD7B75910D70BC0B14BEA79534BD3B17C069550E4D1F4DA03EF7FB66E8D54DE
A6> |-
/F <1C60D8A8C9B7CA647DE1C48F9C4687B08955F8336BCF8715F08A41E17834
59E98373110F13BFFA77A936A46DA97E534097ADD083017D12EC> |-
/G <1C60D8A8C9B6EA91968DE5AA117AB1A67F349296AE4C849796FB6469D044
844B8501E917503B1B525E30272F800BCCD92491A14578F1D33BB6D481E2A996
6883B88A7F83FCF22D550B39818AD93434712FD29AE27F00128F44DDB9DA4E4E
9BE1D2303CB163AF4DDB4EDAA9AA0DF60535B3035B2F2C97B4C9163DC6E4CE0B
C93C> |-
/I <1C60D8A8C9B845C8233CEACBA01AA3521650A1EAFE358A2C4AF7C59726DE
306E> |-
/J <1C60D8A8C9B7EF32A6B3F3793681A02C77519FF9C3107479374C44CEA12C
70D3759BCF7530D18C7F3788B6159194E2DE182FF31B554C1B6C0ECDBA616850
79BC0448C479E53E> |-
/L <1C60D8A8C9B7CA6456D3EEA4470DB08988F3EDC4FE20F001483F1FED1ED6
AE9A06A09E7DED4695> |-
/M <1C60D8A8C9B58D099743A044C25BCB009F954079D06977A10F9CB9BD761E
C0E5547BA094A73350FF542E475232D6589B232B34A29B5CF5CE74D7D154E1B4
EE5C164B5856D9D719912C98F81FC4425481714591EE2598A4F20AD081A21006
9F8FE819> |-
/N <1C60D8A8C9B6184AECC26C51215199BB99023F3D7D4A172ED01B7B8B7B36
300294556101613158F5EA09C4A48339F2AB4D70B72F9EB7B2E16B4ACD0E316E
BA> |-
/O <1C60D8A8C9B6FF8678D4C46F3D07688C9986455395FECA2D5B7259815DD4
12294EA296BF7058CC05B9028E8B3694102B4FB7F7F9E65D9F13FA90AB83C598
D6B4972E78F7D8BB0706EEE068C941B02EEBE673B21999E67C5954A670771FAE
DA738F2BFACF0BC13F4E> |-
/P <1C60D8A8C9B64EDFA3F30AE4FCEDDC7CF99B0D740AB78A4CD5837380F302
A57BF14EE63914ACD62253B2A55E7694E8F54EF4B8326A6F2E6DA1FCA78582C7
390480E76DC6FC9FF5CC3CDDAAD0A185AE0E323E7768> |-
/R <1C60D8A8C9B6079F3517E07A620C16A5BE4108A83ED4226ED84956C8270F
EE62702CD72ED48A2C6E8C9AF1970C9884B4C039F7BCD79947F4CFF592A82230
04B8DE1296C9CD26C2121DB83C858B048C9ED3EC53E361860DBB53758D03A3C6
137B9FFE5F5A59603B57A493995EBE5758CDB7F0F451D2556A1C7D6D4B8A7437
679D51AD3A0EF9D50AD9> |-
/S <1C60D8A8C9B67CE74CEE4AFD7E12E3DCC0B35C3C9B5DCF7DEED7AB92E30E
48D46B442DFB12851F0928A343F92B2C544E76EAD732DEBABD6B848927D51266
AC800469E7E87AF2F893C1C75A3F15CA4430FCBD6CC3DCAF2F75DD94CFD911D3
9796EC179AA7305BADE59CCCF89B18AE4244516FF2AD1454149473E35BB709C2
DCA1A1B9CC2C637AA06337BEE7F1B0C3704DD922028B> |-
/T <1C60D8A8C9B7D8BE41A64DAA4F1C36A5BC537C07513FCF51433853C1AF3B
A4DB1654B144F15BC7FC3B2AEB0BBD2E66> |-
/U <1C60D8A8C9B6184A36046A485DA901D1E722F51F3C90B732E50A1E25B657
36DB5183353A5677307ED66B6E8C525AA3DAC816F8F259F9C3E7C9C16C89EC87
761EA2527D8B468B049CC0A170> |-
/X <1C60D8A8C9B64EDFA3F30AEA61CA89298099CC6D1EE832578706C7CF41EB
5A3B5B196E10546DE765BF61DD8E724025ED77723B5994BD27AFF69083E18BA4
0BBB0E8D34128BAF> |-
/b <1C60D8A8C9B7D8BE6A378724B759608062B4370718AA5B42BACE0E914BF3
33138BBECE610A89E1B39047BA4D1237632E4FAF357D89158FE235F86D884574
6D11CC371CA56AB6E8C8235CD36888719FA1C26503AE0C04CC61A9A2E0ABC49D
2088BCB61EBC04F9AFF05BB1657595529D54D313EDAAD335ED521F1B52> |-
/d <1C60D8A8C9B7D8BE6A378724B759608062B4376DD8C2B27C37AE3D584C98
1DEBB72D38A97CE09220DD22D4BD95320F550F774A1860418C6AE83B8BE5BD7C
C56A149A0F03D0369EA036867C2FAB67624D431A3A7CEFB08D1BA6C6D4F1B428
6EC2C420EE794BD990BA47F37C8A79003BDB9E0129F7268CCCCF40262758> |-
/g <1C60D8A8C9B7D8BE1A051E11C984AE1B2AD6C7DFFCFD4019259F0541286E
615037C3AE44917E9ED178875F5BD55D2A7417CD87B57ED7C3C988A28DE0F1E4
749444691A00F0B3560785F3237DB7EB959DFAE6DC66A7B0382451183DD0B88E
A766EC079FDB987878A106F602A389D44126E0093378C70BB8352D5C4825D76C
E87969812B3D2998DBD6378FAD2BAD9A05778F5286DF582B5E684A4F4732> |-
/m <1C60D8A8C9B58C3B4E324163F858184A4BB952E315A55076FC27B9FDAD82
9C9C306041CAAFA5E19A094D736F2E502021F38C5DDE86610AF836E0E705D30E
5E209DC74B14A2C90E93C773BBB039540F42A99320A5AD28748C35D16AE17234
9CE4CF1B8B7D92E2E7544AB1AF356272C5C88697FC4541C7A6E0AF703E7E9812
C6DABA23B8612308CD28C152726F4A96AC8D09E677E55BF9414B5224C9E7> |-
/r <1C60D8A8C9B7361F55E947F9518BA077ED25D8A0260FAA9DD8FE1D9EF13C
9CC7BE8CD55CB4DD46EEE4EF135F64C08448A8413218AEC4C5159A80C50B9E46
1D647AEABB270179E9A50EFB12159EEF4D0F843ECC8D84FCE1A8> |-
/s <1C60D8A8C9B7825658D68665CE72D01D4C81E84F5B6EC0671B809A5FD9F3
E7763929BDC53AFECC698BE0FD5B7AF63EE162DA3CB6FE8249CDBCE1D8264FCB
C5DCAEF1F039F6F5619E9DF9A3298DEE2A714D9D9485837E923E04FC91C28745
01AB5CC8ACD51304AC8FCB580C28129369D2061A5BDB2579A04090B7A81E748C
302745C5FEEB86C271F8F3CCDB76306C2FE979> |-
/u <1C60D8A8C9B7CA6456C9E4743B2B917583BCD5C99D622FDDD011672A1D6B
B5862C90A95CCCD5931B4EE631EC64E8CD7909BF0FA0BFECEB88D41C04C0B7E6
8F457835584D28BCB2E5301207CE43786D544DE3A54B5015105BA86FE158A577
F36A20E71D824117C3B2B7F0> |-
/x <1C60D8A8C9B78256AE62EADC5AA916620003B826CECE780B7A4E49A257DF
FA38006819FF981067231A5EBDBA5C442CD8F55D98F9F75C5214BDF78E0F0289
91ED8A38C00ECCBD35F98BA7A93C> |-
/Euro <1C60D8A8C9B7EF3224692FA87F0B8CD50E7FA575E0C59172B503E41AE
D3E63A047F7691B8B0AFA73B66018CF382368ECABE23359FF58E65BA7A99F586
F13F48BC36DE92677EDEC2203575C8772DB9D5A08D68551F3D998B51AE0652F2
A52EDD9F4A1F98C6B128F598736D5AA5F9CAEC4C9ED0A40C32E3C502E4FE27C0
932AD4E39D90EFD6E192EA8146483C9364C4793F878B295661291FD6945BCE78
5666A4F292B274E9DF0E702AA244E79> |-
/Ntilde <1C60D8A8C9B6184AC7286A95648F01BF3273DE53> |-
/udieresis <1C60D8A8C9B7CA6456D3CD829BB098E64951FBF5> |-
/tilde <1C60D8A8C9B869C16DA3268C078FEAE39696C20FD8911CB87F47E931
55B08B39D7077A7431B99D5EBAF04929E8AB36F24EDB6423D6D7AB441ABAE395
1B867F2F3911420E16257C0B1F3F22482977310999987F7B43B7418577> |-
/dieresis <1C60D8A8C9B869C16DAE47C8EAA91392D8A3A9FC6C94FB2950CB4
B5F1B452B06D5FF7720CA9D7C7A3A35218F1B190B4B95DC673CC20E056A7CB80
B40> |-
systemdict /gcheck known {setglobal} if end {end} if
end
RPTEAA+HelveticaNeue-Bold /Encoding get
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 64 /at put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 73 /I put
dup 74 /J put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 88 /X put
dup 98 /b put
dup 100 /d put
dup 103 /g put
dup 109 /m put
dup 114 /r put
dup 115 /s put
dup 117 /u put
dup 120 /x put
dup 127 /Euro put
dup 132 /Ntilde put
dup 159 /udieresis put
pop
%ADOEndSubsetFont
/RPTEAA+HelveticaNeue-Bold*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /slash /zero /one /two 
/three /four /five /six /seven /eight /nine 6{/.notdef}rp 
/at /A /B /C /D /E /F /G 
/.notdef /I /J /.notdef /L /M /N /O 
/P /.notdef /R /S /T /U 2{/.notdef}rp /X 
8{/.notdef}rp /a /b /c /d /e /.notdef /g 
/.notdef /i 2{/.notdef}rp /l /m /n /o /p 
/.notdef /r /s /t /u 2{/.notdef}rp /x 6{/.notdef}rp /Euro 4{/.notdef}rp 
/Ntilde 26{/.notdef}rp /udieresis 96{/.notdef}rp]
RPTEAA+HelveticaNeue-Bold nf
RPTEAA+HelveticaNeue-Bold*1 [7 0 0 -7 0 0 ]msf
97.3001 376.317 mo
(! !! )
[30.4557 30.4557 30.4557 30.4557 0 ]xsh
RPTEAB+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
261.445 376.317 mo
(tarjeta ECO!)
[2.07227 3.63318 2.20523 1.2952 3.63318 2.07227 3.63318 1.94623 4.15125 4.92816 5.18719 0 
]xsh
344.188 376.317 mo
(n\274 tarjeta ECO!!)
[3.75922 2.3382 1.94623 2.07224 3.63318 2.20523 1.29517 3.63321 2.07224 3.63318 1.9462 4.15125 
4.92816 5.18716 1.94623 0 ]xsh
55.0251 389.317 mo
(tarifa!)
[2.07222 3.63316 2.2052 1.29517 1.8132 3.63317 0 ]xsh
RPTEAA+HelveticaNeue-Bold*1 [7 0 0 -7 0 0 ]msf
71.6235 389.317 mo
(!Ping\237ino recarga mensual de 10\177 )
[2.31142 5.03448 2.17139 4.51644 4.64237 4.51644 2.17139 4.51644 4.64237 2.31142 3.08848 4.38346 
4.38347 4.38345 3.08849 4.64236 4.38347 2.3114 6.70747 4.38347 4.51642 4.12445 4.51643 4.38347 
2.17139 2.31142 4.64238 4.38345 2.31142 4.25743 4.25742 4.9014 4.51645 3.08849 0 ]xsh
RPTEAB+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
208.343 389.317 mo
(horario elegido!!)
[3.7592 3.89218 2.20522 3.63316 2.2052 1.29517 3.8922 1.94618 3.63316 1.29517 3.63316 3.8922 
1.29517 4.01822 3.8922 1.94618 0 ]xsh
RPTEAA+HelveticaNeue-Bold*1 [7 0 0 -7 0 0 ]msf
256.724 389.317 mo
(! !! !  )
[5.15991 5.15991 5.15994 5.15991 5.15991 5.15991 5.15994 0 ]xsh
RPTEAB+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
367.026 389.317 mo
(tarifa GPRS)
[2.0726 3.63358 2.20557 1.29556 1.8136 3.63354 1.94656 5.18756 4.41061 4.66962 0 ]xsh
RPTEAA+HelveticaNeue-Bold*1 [7 0 0 -7 0 0 ]msf
420.001 388 mo
(! !! !  )
[11.4099 11.4099 11.4099 11.4099 11.4099 11.4099 11.4099 0 ]xsh
RPTEAB+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
55.0256 402.317 mo
(compr)
[3.63316 3.89217 5.83112 4.01821 0 ]xsh
74.4764 402.316 mo
(omiso adicional en tarifa de voz!)
[3.89218 5.83113 1.29517 3.3672 3.89218 1.94618 3.63316 4.01822 1.29517 3.63316 1.29517 3.89218 
3.7592 3.63316 1.29517 1.94618 3.63316 3.75921 1.94617 2.07222 3.63316 2.2052 1.29517 1.8132 
3.63315 1.94618 4.01822 3.63316 1.94617 3.24118 3.89217 3.24117 0 ]xsh
RPTEAA+HelveticaNeue-Bold*1 [7 0 0 -7 0 0 ]msf
170.956 402.316 mo
(  )
[10.6388 0 ]xsh
RPTEAB+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
197.84 402.316 mo
(meses!)
[5.83115 3.63319 3.36722 3.63318 3.36723 0 ]xsh
225.225 402.316 mo
(compr)
[3.63315 3.89218 5.83112 4.01822 0 ]xsh
244.679 402.316 mo
(omiso adicional en tarifa de datos  !)
[3.89217 5.83113 1.29515 3.36719 3.89218 1.94617 3.63315 4.01822 1.29517 3.63315 1.29514 3.89218 
3.75919 3.63318 1.29514 1.9462 3.63315 3.75919 1.94617 2.0722 3.63318 2.20517 1.29517 1.8132 
3.63315 1.94617 4.01822 3.63315 1.94617 4.01822 3.63315 2.0722 3.89218 3.36719 1.94617 1.94617 
0 ]xsh
396.27 401 mo
(meses)
[5.83115 3.63315 3.36722 3.63315 0 ]xsh
55.0248 415.316 mo
(compr)
[3.63316 3.89217 5.83112 4.01821 0 ]xsh
74.4783 415.316 mo
(omiso permanencia en operador!)
[3.89217 5.83112 1.29516 3.36719 3.89217 1.94617 4.0182 3.63316 2.20519 5.83112 3.63316 3.75919 
3.63316 3.75919 3.63315 1.29517 3.63315 1.94618 3.63315 3.75919 1.94618 3.89217 4.01822 3.63315 
2.2052 3.63315 4.0182 3.89217 2.2052 0 ]xsh
RPTEAA+HelveticaNeue-Bold*1 [7 0 0 -7 0 0 ]msf
178.001 413 mo
(  24      )
[1.73877 1.73878 3.68478 3.68477 1.73878 1.73877 1.73878 1.73877 1.73877 0 ]xsh
RPTEAB+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
204.887 413 mo
(meses)
[5.83113 3.63316 3.3672 3.63316 0 ]xsh
55.0248 428.316 mo
( Mi Pr)
[1.94622 5.83117 1.29521 1.94622 4.41026 0 ]xsh
72.533 428.316 mo
(eferido!!)
[3.63317 1.81321 3.63317 2.2052 1.29517 4.01823 3.89219 1.94619 0 ]xsh
RPTEAA+HelveticaNeue-Bold*1 [7 0 0 -7 0 0 ]msf
96.9158 428.316 mo
(  )
[20.6388 0 ]xsh
RPTEAB+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
254.025 428.316 mo
(N\234mer)
[4.92816 3.75919 5.83115 3.63315 0 ]xsh
274.255 428.316 mo
(os Fr)
[3.89221 3.36722 1.9462 3.75925 0 ]xsh
289.299 428.316 mo
(ecuentes)
[3.63312 3.63312 3.75916 3.63312 3.75916 2.07217 3.63312 0 ]xsh
55.025 454.316 mo
(otr)
[3.89221 2.07225 0 ]xsh
63.0683 454.316 mo
(os m\227dulos de ahorr)
[3.89218 3.3672 1.94618 5.83113 3.89217 4.01822 3.75919 1.29517 3.89218 3.3672 1.94618 4.01821 
3.63316 1.94618 3.63316 3.75919 3.89217 2.2052 0 ]xsh
RPTEAA+HelveticaNeue-Bold*1 [7 0 0 -7 0 0 ]msf
142.875 455 mo
( )sh
RPTEAB+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
55.025 467.316 mo
(pr)
[4.01821 0 ]xsh
61.1223 467.316 mo
(omociones)
[3.89215 5.83111 3.89216 3.63314 1.29514 3.89216 3.75918 3.63313 0 ]xsh
55.025 480.316 mo
(otr)
[3.89221 2.07225 0 ]xsh
63.0684 480.316 mo
(os servicios!!!!)
[3.89223 3.36726 1.94624 3.36725 3.63321 2.20525 3.24121 1.29522 3.63321 1.29521 3.89223 3.36726 
1.94623 1.94623 1.94624 0 ]xsh
284.514 480.316 mo
(cambio tarjeta contrato!!!)
[3.63318 3.63315 5.83115 4.01822 1.29517 3.89218 1.9462 2.07224 3.63315 2.2052 1.2952 3.63315 
2.07224 3.63315 1.9462 3.63318 3.89218 3.75919 2.07224 2.2052 3.63318 2.07224 3.89215 1.9462 
1.9462 0 ]xsh
55.0254 493.316 mo
(r)sh
57.1047 493.316 mo
(oaming:!)
[3.89218 3.63316 5.83112 1.29516 3.75919 3.89218 1.94617 0 ]xsh
167.353 493.316 mo
(desactivado!)
[4.0182 3.63316 3.36719 3.63316 3.63315 2.07222 1.29515 3.24115 3.63316 4.0182 3.89218 0 
]xsh
284.632 493.316 mo
(llamada inter)
[1.29514 1.29514 3.63312 5.83109 3.63315 4.01816 3.63315 1.94614 1.29514 3.75916 2.0722 3.63312 
0 ]xsh
323.007 493.316 mo
(nacional:!)
[3.75919 3.63312 3.63315 1.29514 3.89215 3.75916 3.63315 1.29514 1.94617 0 ]xsh
411.459 493.316 mo
(desactivado)
[4.01819 3.63315 3.36719 3.63315 3.63315 2.0722 1.29514 3.24115 3.63315 4.01819 0 ]xsh
55.0254 506.316 mo
(servicios suplementarios:!)
[3.3672 3.63316 2.2052 3.24117 1.29516 3.63316 1.29517 3.89217 3.3672 1.94617 3.3672 3.7592 
4.01822 1.29516 3.63316 5.83112 3.63316 3.7592 2.07222 3.63316 2.20519 1.29517 3.89217 3.3672 
1.94618 0 ]xsh
167.358 506.316 mo
(datos!!)
[4.01823 3.63316 2.07224 3.89218 3.36722 1.9462 0 ]xsh
284.631 506.316 mo
(fax)
[1.81317 3.63315 0 ]xsh
55.0254 519.316 mo
(acceso pr)
[3.63318 3.63318 3.63318 3.63318 3.36723 3.8922 1.9462 4.01824 0 ]xsh
84.8609 519.316 mo
(efijos 907 y 803 / 806 / 807 \(seguidos de 6 a 9\)!)
[3.63319 1.81322 1.2952 1.29519 3.89221 3.36723 1.94621 3.89221 3.8922 3.89221 1.94621 3.2412 
1.94621 3.89221 3.89221 3.8922 1.94621 2.33116 1.94621 3.89221 3.89221 3.89221 1.9462 2.33118 
1.9462 3.89221 3.89221 3.89221 1.94623 1.68719 3.36722 3.63321 3.89221 3.75922 1.2952 4.01825 
3.89221 3.36723 1.94621 4.01825 3.63319 1.94621 3.89221 1.94623 3.63318 1.94623 3.89221 1.68719 
0 ]xsh
284.632 519.316 mo
(bloqueo acceso prefijos 905 y 803/806/807 \(seguidos de 0 o 5\))
[3.87833 1.15527 3.75229 3.87833 3.61932 3.49326 3.75229 1.8063 3.49326 3.49329 3.49329 3.49326 
3.22733 3.75226 1.8063 3.87833 2.06531 3.49329 1.67328 1.15527 1.15527 3.75232 3.22729 1.80627 
3.75232 3.75226 3.75232 1.80627 3.10126 1.8063 3.75229 3.75229 3.75229 2.19122 3.75232 3.75226 
3.75232 2.19122 3.75229 3.75229 3.75229 1.8063 1.54724 3.22733 3.49326 3.75232 3.61929 1.15527 
3.87833 3.75229 3.22733 1.80627 3.87833 3.49326 1.8063 3.75229 1.80627 3.75232 1.80627 3.75229 
0 ]xsh
55.0259 532.316 mo
(factura:!)
[1.81321 3.63317 3.63317 2.07223 3.75921 2.20521 3.63317 1.94619 0 ]xsh
167.718 532.316 mo
(on-line!)
[3.89212 3.75916 2.59009 1.29512 1.2951 3.75916 3.6331 0 ]xsh
285.526 532.316 mo
(papel!)
[4.01816 3.63312 4.01819 3.63312 1.2951 0 ]xsh
436.446 532.316 mo
(electr\227nica)
[3.63315 1.29514 3.63315 3.63312 2.0722 2.20517 3.89215 3.75919 1.29514 3.63315 0 ]xsh
RPTEAA+HelveticaNeue-Bold*1 [7 0 0 -7 0 0 ]msf
478.002 534 mo
(X)sh
RPTEAB+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
55.0261 545.316 mo
(idioma de su factura:!)
[1.29515 4.01821 1.29515 3.89217 5.83112 3.63316 1.94617 4.0182 3.63315 1.94617 3.36719 3.75919 
1.94617 1.81319 3.63315 3.63316 2.0722 3.75919 2.20518 3.63316 1.94617 0 ]xsh
167.353 545.316 mo
(castellano!)
[3.63313 3.63315 3.36717 2.0722 3.63313 1.29515 1.29514 3.63315 3.75917 3.89217 0 ]xsh
RPTEAA+HelveticaNeue-Bold*1 [7 0 0 -7 0 0 ]msf
239.002 548 mo
(X)sh
RPTEAB+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
284.632 545.316 mo
(catal\207n!)
[3.63315 3.63312 2.0722 3.63315 1.29514 3.63315 3.75916 0 ]xsh
374.361 545.316 mo
(euskera!)
[3.63315 3.75919 3.36722 3.50015 3.63318 2.20517 3.63315 0 ]xsh
451.835 545.316 mo
(ingl\216s)
[1.2951 3.75916 3.89212 1.2951 3.63312 0 ]xsh
55.2901 179.413 mo
(nombr)
[3.75916 3.89214 5.83109 4.01818 0 ]xsh
74.8694 179.413 mo
(e!)
[3.63322 0 ]xsh
RPTEAA+HelveticaNeue-Bold*1 [7 0 0 -7 0 0 ]msf
92.0022 179 mo
(Mapping)
[6.34898 4.01804 4.27695 4.27695 1.80597 4.15102 0 ]xsh
RPTEAB+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
223.29 179.413 mo
(apellidos!!)
[3.63313 4.01819 3.63313 1.29514 1.29514 1.29514 4.01819 3.89215 3.36717 1.94615 0 ]xsh
RPTEAA+HelveticaNeue-Bold*1 [7 0 0 -7 0 0 ]msf
264.002 179 mo
(Ping\237ino)
[4.66907 1.80597 4.151 4.27695 4.15103 1.80597 4.151 0 ]xsh
RPTEAB+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
55.2903 189.413 mo
(dir)
[4.01818 1.29512 0 ]xsh
62.6821 189.413 mo
(ecci\227n!)
[3.63315 3.63314 3.63315 1.29515 3.89216 3.75919 0 ]xsh
RPTEAA+HelveticaNeue-Bold*1 [7 0 0 -7 0 0 ]msf
92.0024 188 mo
(JULIA   \204 \237  \177      BOUTAN)
[3.892 5.18698 4.15102 2.06499 4.79498 1.946 5.31302 4.79498 5.054 5.18698 2.06499 4.79498 
1.946 4.92796 5.446 5.18698 4.27695 4.79498 0 ]xsh
RPTEAB+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
359.764 189.413 mo
(n\274!)
[3.75916 2.33813 0 ]xsh
RPTEAA+HelveticaNeue-Bold*1 [7 0 0 -7 0 0 ]msf
372.003 188 mo
(29)
[3.892 0 ]xsh
RPTEAB+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
406.922 189.413 mo
(escalera !)
[3.63318 3.36725 3.63318 3.63321 1.2952 3.63318 2.20523 3.63321 1.9462 0 ]xsh
455.945 188 mo
(piso!)
[4.01819 1.29517 3.36716 3.89218 0 ]xsh
493.234 188 mo
(puerta)
[4.01819 3.75916 3.63312 2.20517 2.07217 0 ]xsh
55.2913 199.413 mo
(localidad !)
[1.29513 3.89215 3.63313 3.63313 1.29514 1.29513 4.01819 3.63313 4.01819 1.94614 0 ]xsh
RPTEAA+HelveticaNeue-Bold*1 [7 0 0 -7 0 0 ]msf
92.0026 199 mo
(MADRID)
[6.34898 4.79498 5.18698 5.054 2.06499 0 ]xsh
RPTEAB+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
285.112 199.413 mo
(pr)
[4.01822 0 ]xsh
291.209 199.413 mo
(ovincia !!)
[3.89221 3.24118 1.29517 3.75922 3.63321 1.29517 3.63318 1.9462 1.94623 0 ]xsh
RPTEAA+HelveticaNeue-Bold*1 [7 0 0 -7 0 0 ]msf
318.003 199 mo
(Madrid)
[6.349 4.01801 4.27698 2.72302 1.80597 0 ]xsh
RPTEAB+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
440.66 199.413 mo
(c\227digo postal)
[3.63315 3.89215 4.01819 1.29514 3.89215 3.89215 1.94617 4.01819 3.89215 3.36719 2.0722 3.63312 
0 ]xsh
RPTEAA+HelveticaNeue-Bold*1 [7 0 0 -7 0 0 ]msf
490.003 199 mo
(28022)
[3.892 3.892 3.892 3.892 0 ]xsh
RPTEAB+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
55.2924 209.413 mo
(tipo documento \(D.N.I./t. r)
[2.07222 1.29517 4.01822 3.89218 1.94618 4.01821 3.89218 3.63316 3.7592 5.83113 3.63316 3.7592 
2.07222 3.89218 1.94618 1.68716 4.79517 1.94617 4.92815 1.94618 1.55418 1.94618 2.33113 2.07221 
1.94618 1.94618 0 ]xsh
134.13 209.413 mo
(esid./pasap.\)!)
[3.63315 3.3672 1.29515 4.01822 1.94617 2.33113 4.0182 3.63316 3.36719 3.63316 4.01822 1.94617 
1.68715 0 ]xsh
RPTEAA+HelveticaNeue-Bold*1 [7 0 0 -7 0 0 ]msf
185.004 210 mo
(NIF)
[5.18698 2.06499 0 ]xsh
RPTEAB+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
335.773 209.413 mo
(n\274!!!)
[3.75922 2.3382 1.9462 1.94623 0 ]xsh
RPTEAA+HelveticaNeue-Bold*1 [7 0 0 -7 0 0 ]msf
351.004 210 mo
(51085346T)
[3.892 3.892 3.892 3.892 3.892 3.892 3.892 3.892 0 ]xsh
RPTEAB+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
55.2928 219.413 mo
(fecha nacimiento!)
[1.81317 3.63313 3.63313 3.75916 3.63313 1.94615 3.75916 3.63313 3.63313 1.29513 5.83109 1.29514 
3.63312 3.75917 2.07218 3.89214 0 ]xsh
RPTEAA+HelveticaNeue-Bold*1 [7 0 0 -7 0 0 ]msf
108.46 219.413 mo
( 01)
[1.4619 3.4079 0 ]xsh
140.825 219.413 mo
(/!  )
[1.55777 .906738 .906754 0 ]xsh
145.103 219.413 mo
(01 )
[3.4079 3.4079 0 ]xsh
174.352 219.413 mo
(/!  )
[1.55777 .906738 .906754 0 ]xsh
178.63 219.413 mo
(1993 )
[6.44482 6.44481 6.44482 6.44481 0 ]xsh
RPTEAB+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
205.293 219.413 mo
(nacionalidad!!)
[3.75916 3.63312 3.6331 1.29512 3.89214 3.75916 3.6331 1.29512 1.29512 4.01817 3.6331 4.01817 
1.94614 0 ]xsh
RPTEAA+HelveticaNeue-Bold*1 [7 0 0 -7 0 0 ]msf
249.004 219 mo
(ESPA\204A)
[4.53596 4.54301 4.66904 4.79498 5.18701 0 ]xsh
RPTEAB+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
470.314 219.413 mo
(sexo)
[3.36722 3.63318 3.36722 0 ]xsh
484.573 220.413 mo
( H X)
[3.08133 6.06326 3.08133 0 ]xsh
498.812 219.413 mo
( )sh
506.596 220.413 mo
(M    )
[5.96994 2.08496 2.08496 2.08496 0 ]xsh
512.357 219.413 mo
( !)
[1.94629 0 ]xsh
55.2929 229.413 mo
(tel\216fono de contacto!)
[2.2122 3.77315 1.43515 3.77315 1.95319 4.03216 3.89919 4.03217 2.08617 4.1582 3.77315 2.08616 
3.77315 4.03217 3.89918 2.2122 3.77315 3.77315 2.2122 4.03217 0 ]xsh
RPTEAA+HelveticaNeue-Bold*1 [7 0 0 -7 0 0 ]msf
122.3 229.413 mo
(675756727)
[7.25842 7.25844 7.25842 7.25842 7.25844 7.25844 7.25842 7.25842 0 ]xsh
RPTEAB+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
231.293 229.413 mo
(e-mail)
[3.77312 2.7301 5.97108 3.77312 1.43513 0 ]xsh
RPTEAA+HelveticaNeue-Bold*1 [7 0 0 -7 0 0 ]msf
255.005 229 mo
(natxoribas@msn.com)
[4.151 4.01807 2.46402 3.759 4.27698 2.72302 1.80597 4.27698 4.01801 3.75903 5.60004 6.34204 
3.759 4.15103 1.94598 4.01804 4.27695 0 ]xsh
.0202945 .6206 1 .0015259 cmyk
%ADOBeginSubsetFont: PBAAAA+HelveticaNeue-Bold AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
RPTEAA+HelveticaNeue-Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/ntilde <1C60D8A8C9B7CA6456D3CD829BBBB9A129324CE3> |-
systemdict /gcheck known {setglobal} if end {end} if
end
RPTEAA+HelveticaNeue-Bold /Encoding get
dup 150 /ntilde put
pop
%ADOEndSubsetFont
/RPTEAA+HelveticaNeue-Bold*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /slash /zero /one /two 
/three /four /five /six /seven /eight /nine 6{/.notdef}rp 
/at /A /B /C /D /E /F /G 
/.notdef /I /J /.notdef /L /M /N /O 
/P /.notdef /R /S /T /U 2{/.notdef}rp /X 
8{/.notdef}rp /a /b /c /d /e /.notdef /g 
/.notdef /i 2{/.notdef}rp /l /m /n /o /p 
/.notdef /r /s /t /u 2{/.notdef}rp /x 6{/.notdef}rp /Euro 4{/.notdef}rp 
/Ntilde 17{/.notdef}rp /ntilde 8{/.notdef}rp /udieresis 96{/.notdef}rp]
RPTEAA+HelveticaNeue-Bold nf
RPTEAA+HelveticaNeue-Bold*1 [8 0 0 -8 0 0 ]msf
243.432 793.44 mo
(France T)
[4.74423 3.11226 4.59225 4.74422 4.59225 4.59225 2.22421 0 ]xsh
276.033 793.44 mo
(elecom Espa\226a S.A.)
[4.59225 2.06415 4.59225 4.59225 4.88812 7.24826 2.22421 5.18417 4.2962 4.88815 4.59225 4.7442 
4.59225 2.22421 5.1922 2.22421 5.48019 0 ]xsh
51.0168 89.8181 mo
110.544 89.8181 li
110.544 30.2903 li
51.0168 30.2903 li
cp
ef
74.3695 84.054 mo
73.5266 84.609 72.6125 84.879 71.6293 84.879 cv
70.0836 84.879 69.1695 83.8491 69.1695 82.471 cv
69.1695 80.616 70.8734 79.6331 74.3863 79.238 cv
74.3863 78.777 li
74.3863 78.1741 73.9305 77.825 73.0863 77.825 cv
72.2434 77.825 71.5586 78.158 71.0664 78.777 cv
69.5914 77.936 li
70.3645 76.858 71.5414 76.3201 73.1223 76.3201 cv
75.2824 76.3201 76.4953 77.254 76.4953 78.777 cv
76.4953 78.777 76.4914 84.767 76.4973 84.783 cv
74.5625 84.783 li
74.3695 84.054 li
cp
71.3125 82.312 mo
71.3125 82.867 71.6645 83.388 72.2965 83.388 cv
72.9812 83.388 73.6492 83.104 74.3164 82.5161 cv
74.3164 80.554 li
72.2793 80.807 71.3125 81.33 71.3125 82.312 cv
0 0 0 0 cmyk
f
78.2191 76.7141 mo
80.023 76.465 li
80.2219 77.448 li
81.2398 76.704 82.0488 76.306 83.068 76.306 cv
84.7719 76.306 85.65 77.211 85.65 79.002 cv
85.65 84.77 li
83.4719 84.77 li
83.4719 79.381 li
83.4719 78.367 83.209 77.907 82.418 77.907 cv
81.768 77.907 81.118 78.208 80.3801 78.827 cv
80.3801 84.77 li
78.2191 84.77 li
78.2191 76.7141 li
f
100.091 84.929 mo
97.65 84.929 96.1906 83.36 96.1906 80.634 cv
96.1906 77.876 97.6668 76.307 100.056 76.307 cv
102.445 76.307 103.868 77.829 103.868 80.524 cv
103.868 80.666 103.85 80.809 103.85 80.951 cv
98.334 80.951 li
98.352 82.52 99.002 83.312 100.285 83.312 cv
101.11 83.312 101.655 82.979 102.164 82.251 cv
103.762 83.138 li
103.06 84.311 101.795 84.929 100.091 84.929 cv
cp
101.725 79.54 mo
101.725 78.431 101.092 77.781 100.056 77.781 cv
99.0719 77.781 98.4566 78.415 98.3699 79.54 cv
101.725 79.54 li
f
58.3426 85.019 mo
56.1879 85.019 54.2438 83.645 54.2438 80.647 cv
54.2438 77.649 56.1879 76.275 58.3426 76.275 cv
60.4977 76.275 62.4418 77.649 62.4418 80.647 cv
62.4418 83.645 60.4977 85.019 58.3426 85.019 cv
cp
58.3426 78.118 mo
56.7156 78.118 56.4148 79.585 56.4148 80.647 cv
56.4148 81.709 56.7156 83.176 58.3426 83.176 cv
59.9707 83.176 60.2727 81.709 60.2727 80.647 cv
60.2727 79.585 59.9707 78.118 58.3426 78.118 cv
f
63.9367 76.493 mo
66.0098 76.493 li
66.0098 77.468 li
66.4039 76.9431 67.3801 76.323 68.293 76.323 cv
68.3809 76.323 68.4859 76.323 68.5738 76.3391 cv
68.5738 78.3831 li
68.5391 78.3831 68.5039 78.3831 68.4688 78.3831 cv
67.5199 78.3831 66.484 78.5291 66.15 79.267 cv
66.15 84.777 li
63.9367 84.777 li
63.9367 76.493 li
f
90.9883 82.998 mo
92.6434 82.985 92.782 81.303 92.782 80.204 cv
92.782 78.91 92.1492 77.856 90.973 77.856 cv
90.1891 77.856 89.3164 78.428 89.3164 80.294 cv
89.3164 81.3181 89.3883 83.01 90.9883 82.998 cv
cp
94.8762 76.463 mo
94.8762 84.308 li
94.8762 85.6931 94.7711 87.971 90.8223 87.996 cv
89.1934 88.006 87.6844 87.355 87.382 85.933 cv
89.5344 85.587 li
89.6242 85.994 89.873 86.4 91.0941 86.4 cv
92.2242 86.4 92.7664 85.858 92.7664 84.564 cv
92.7664 83.6 li
92.7363 83.5701 li
92.3902 84.187 91.8621 84.774 90.5973 84.774 cv
88.6684 84.774 87.1461 83.4351 87.1461 80.635 cv
87.1461 77.865 88.7121 76.314 90.4762 76.311 cv
92.1273 76.309 92.7422 77.062 92.882 77.458 cv
92.857 77.454 li
93.0363 76.463 li
94.8762 76.463 li
f
104.723 73.7161 mo
103.867 73.7161 li
103.867 76.0891 li
103.414 76.0891 li
103.414 73.7161 li
102.557 73.7161 li
102.557 73.3521 li
104.723 73.3521 li
104.723 73.7161 li
cp
108.293 76.0891 mo
107.839 76.0891 li
107.839 73.802 li
107.827 73.802 li
106.93 76.0891 li
106.644 76.0891 li
105.746 73.802 li
105.734 73.802 li
105.734 76.0891 li
105.282 76.0891 li
105.282 73.3521 li
105.98 73.3521 li
106.796 75.43 li
107.601 73.3521 li
108.293 73.3521 li
108.293 76.0891 li
f
0 0 0 1 cmyk
%ADOBeginSubsetFont: QJJAAA+HelveticaNeue-Thin Initial
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /QJJAAA+HelveticaNeue-Thin def
/FontInfo 6 dict dup begin
/Notice (Copyright (c) 1988 Adobe Systems Incorporated.  All Rights Reserved.Helvetica is a registered trademark of Linotype AG and/or its subsidiaries.) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 54 /six put
dup 56 /eight put
dup 57 /nine put
dup 65 /A put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 105 /i put
dup 106 /j put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 122 /z put
dup 127 /Euro put
dup 132 /Ntilde put
dup 151 /oacute put
def
/UniqueID 20079 def
/FontBBox {-61 -203 746 865} def
end
systemdict begin
dup /Private
9 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-17 -0 714 731 514 526 690 702] def
/OtherBlues [266 275 366 375 -196 -184] def
/BlueScale 0.0479583 def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
52 dict dup begin
/space <1C60D8A8C9C4A637> |-
/comma <1C60D8A8C9B854D088EF846600FA8CBAE72F6B0A27C450BBC961FF32
D1876DD214A35A91D15EE9EC5672D2> |-
/hyphen <1C60D8A8C9B80A3F82D4B218757BB19CD0AB4A05D72645CE7F47C96
4952C> |-
/period <1C60D8A8C9B854D088EF846600FA8CA2F951E1BE1CC7BF242974> |-
/zero <1C60D8A8C9B7EF32A3751C0604BA2346149589F6C97E800255AD09DA0
F06140105C9E49DE063C3EA2139759E81F4EF044F7CCDADF2A8156F1F34F2062
637F482FFC2D3C0044F3B03259D58EEF3D9840D247C5A5289FA17E78F77E0054
66B21> |-
/one <1C60D8A8C9B7EF327C10274AA2AFBEC5ADBCB469D9CF8743EC2B6ECB8E
298A0B22E23AFA67E5441C59E643310DFA4560F2> |-
/two <1C60D8A8C9B7EF3257218B298CA76A23F21F6210D0F7E10B85EA273253
2EAB142CF60D059B12D3BB59640FD116C3EE9B146C0E59381366B935C9999BFD
5ADE4D99820BF0E2FA389BCCE36D43D679F0AB3163FCE9B675F38FFA9D210061
F6209983950BCF528A221536BA0CA3483B38C8FD50> |-
/three <1C60D8A8C9B7EF32A3751C07028C13EF974D48E6574562E2806BC841
AB0A792E8502CDE61520ACFFC58D7B37F04EBB38E774924A72C864094892CA39
510B7F849112DAC7F9C5E17FAB338727AF0D37FED6E59780D09B9FBE0610C7F6
E0CD5A8052A09D74BF071556F9B73D3C84D9CC88CB4B1E2751D3F0433532958C
58851EA6B0EC8C0B627872A5003623A88DF09A2E2B5A64E921B607B0FE3560E7
A75431AEF61DD2BA87E391A63951DFC492> |-
/four <1C60D8A8C9B7EF327C10274512F527F1A00E328499502CCD3A84D566C
21F1E3CF2B8AA670E9CFA412CD6349235BC438CEE59720B4D5477B69E9680E8F
C622FB4A4D897E9CD7FE7E2B701> |-
/six <1C60D8A8C9B7EF32A3751C073FE80DA6F3C663A0402F3F73BDDFDD9654
3E6BFE9F2C5EBFE9ECD0B55CF48646E9C4ECB2A78FD5F9970B8796865DC6617D
C5FB801881182D09F07D11360F0C0756A36F3CD06EE81CAE3B2603B7CCE1A988
13BB8C82C9A502281F5D0D94DD7AC7F2F9D029FADDA0404371E3C5B1CC83B48B
95723C488194EE04E57B98190D135B59672D1BD87DAB7141F5CFE0D63A659563
F46CCAC4792A93C7727834A3D95E84D5685734> |-
/eight <1C60D8A8C9B7EF32A3751C08298DA210C76F2B213845A204470C57E8
2EE4EFD866ADD1E844A2BB6F15FA52F9F4622ACCA9AFAE58D5486E28FB235AE7
110D6585B77FCA9E8585E5FF8D744096D839D00BB427417C1969F66B6B7647E4
D6C5149AAADD37B98CB4CD46E6A17849FE6F8BDAD94A398F5114CB4B36F33884
D28AA1F111AD8CE214FD62F4749955AA938C72E9CAC9F7F390AE40AF97C18335
3A28FEB7B1C97AB40EE5095B9740969CC64595956B3ABB106790B9C6730436DB
40B82BEC77C012B25070747EDA5541F7BEF8DC959B19D12F619E0795ECC3D20D> |-
/nine <1C60D8A8C9B7EF32A3751C08AC6EA91409C37CB3D520E65B92EDD8BB7
D5B805EF75F123A2D84F7C73B5083CDB0C42C916BDED1257EC3157FB2C7DF527
2FC8F4BD3EE71D501C3D698C80406EB629E38B7ABEED8F58D3C4B668F48238D7
EB370B21AD838012754A555A9C531B8BC1D5B5CCFEA103A51A9ECBCDEF8E6645
E0A11341556B083C9EB2FBEC26C4FD8A3A42199120B3102CDA5DE9A4F245CE09
0F0F8BE9411DC5320DD104BE46038680E189E2008> |-
/A <1C60D8A8C9B7CA647DE1C48F5E031CB575E4AA0E9C5FB162C78622BFD3DB
741B2A033291B3B24E21AC791F4B48569AFE8D1DD3F1CAFCD136AFAF414A9908
C0AE56F3B11366C62DA06A> |-
/C <1C60D8A8C9B635A42684BF6E1A6F917696E309CF86A9ABFE23BE505DD248
E2CC8EE6B19858630F211E782BEB38E30AA9A6CF2A279FC12F6C8CF708FA7416
0A9E1CFED20CAFBAA98ABE8EA4463D2FC061E29D8B20498B071DC3735F96119D
311B46DF3894540FEA76B9033B> |-
/D <1C60D8A8C9B64EDF880E1A8BAE3845B8F5BAE5D56D56B26F643C2BF5A87C
D5AAB8EDCB9E306D8A35E6F6A8996119A5BF4D8452129723432D719208A1237D
92CB44875E9C50E85720FE38DD> |-
/E <1C60D8A8C9B7EB081EE3A71ECAB4A39AF07AFBE4B6615EFE9ABC037071AD
D342F1B189500EF9CA16B7DB228A1B97265FC8956B7DC75095A264> |-
/F <1C60D8A8C9B7B9B9866350011E108614C16031FAD008896F8347436A56F3
67AC3CF6906B29D60693BA0A1D4151923F4911EC42DEF0> |-
/G <1C60D8A8C9B6184A364271A40C2289B09ED1ACE26885C6EEF762BD7EE478
40DA665DF281B7CCE48CA9E229F6E419C54C1D0B7512ED36E927BE7B21243B34
AA0F5CF169411F567BDFC58C7626D040FDED1C1E686CF9CFA5989CECC56E8911
3382296C552A83C4CC5CAE0A7D840E636AE4137F7D3B743CFA00726754859508
E85F002EFDB7D5E473> |-
/H <1C60D8A8C9B653D7341678E089561ADD2DB374E4CE12BD900809909F2EA0
B6E2E37FB0087B538BCC8B4E45060A39F642C943F5F2E49627DD6612070C7515> |-
/I <1C60D8A8C9B8C0FE9F721CEAC701AAEF710D18D1FC72E1B71DACDFE476> |-
/L <1C60D8A8C9B7A73DC5622D8A7C60D1CCCAF5C66318534126CCF4DFD5884D
44A191F0FD> |-
/M <1C60D8A8C9B6DC5FF83B12C55015131E824E745C70808D11CD7CAED77D71
0EB3EA49A67BD35E858A11D572BAECD559009FEA338D05CF6D85A506752A4C9E
F8FA492481823EB8DE> |-
/N <1C60D8A8C9B65B439BC8001308AC137F402632DFBB9D73466FC532C63E39
9AC6EEC3796D39CC99765686486FA4C53FE67182B74026E509D39A> |-
/O <1C60D8A8C9B6184A364271AADFE4A619B7B9C999880977069672F78CCFEB
A4EC22A212DA6E02A7DD798C0B9A66D8F560E4A5763B2557FFD9FA875D1389E8
B77D94F4A27CF31755D2C30402C41E030B662BDEEAD0BE44CF614F32F4819E19
3A615A9C38CF535E3B2D38> |-
/P <1C60D8A8C9B7CC0BEEF6C110C6AF903D6B3ECDBC32E46F233292760D2887
837CFCF6CD3EE1E7B02FDCB25CB0AF26B025EFCA72FCC69705E666F93E87A440
17FAD0C95243E3678DC87CF95954B930DCC6DF> |-
/R <1C60D8A8C9B66B39070D84F3E4D94545C171911EEAF236C3081129BA1FEC
D77E9BF9290CC83C7366C249F6EF74C20DD17CB669A8E71F2EBE77FE6366DDEC
6BA972FC586CC04E9505E38A42FF135038B464952FD3094B779D03414B305E29
5053497065DF8C065AC2914BA9301F687525AE0909102510A8F35FF41F3A6E7E
A5AEAC0BB8340E5D6DF652F2DB35337B1E02> |-
/S <1C60D8A8C9B66B395EEBB006473EC003766368C55928AC6AB0A432C48A48
93C76DDF526FCFE991E898198435BA452199966656A57FD00BE9338937B2EC02
6A5E4D83D4CAF1C1E4FFEDF3A4DBEF2AC023C0891C28B97891606D4A02F86BB9
424CD6FC5FC68753A7AAEE0E5B56B42C44064019FD121E2A871178B2EF8A4F3C
7F5918009AF5C859F02A530F289A836025ACB1207B631FC3C3CAA7B34AD5190F
547693FF> |-
/T <1C60D8A8C9B7B4A1684D51767B1DB1AE27193194A713EBC49050DA55EB33
EAB51736492F759FC521B1CFF307> |-
/a <1C60D8A8C9B7A73D31D09B91506D33A06630869568129027110C1339692F
D52B82E53D497450496279396D88974BE190022C3109B9E19D540F1CBC587BF9
3F2C9BD4B59AB7496F7381E4070C3B4DDB3E056110FD663A03D494395D1D41AB
28005099CAAA7140EA0B990CCF07514D273CFA05C10608AAA772A8A098E2C8FA
B4F3254790CD20DEEE4D7B07A39FCAD8193EF6923BF0B5A968ED7A4E8C2C1270
2C6637E1446A7CAEC776A9E8A13FE0BBFA39569AAC270852E4F6DD949FE19CA6
56C5E9> |-
/b <1C60D8A8C9B7EF32A3751C0785195ACCDEDCD53F6979A68CA120E3FD4C78
EEA142517C42F8AF8FDAD45A478BEEA16DD324F0582DD91C7AB30A28E929117D
B4925B18B3F005AF13BE910DC23827512D22E3CC79BCC547B80F9387060D448E
5426DC814BFAA48F2C374C6566534B16EFD725A8B33B2030C1D9F0C037865470
7A703F788E2B7FD05749C602A9AF> |-
/c <1C60D8A8C9B7B4A1B743E7CFD9217EB101EFA2F90F86F381EAD68D41F07F
2388E7E37F1763C8106056BAA0ED3D338E3068EC60348BE73AE28CE2DBA0F38E
737BF14761BA576ABAC0B9F21C73C15EB138DC1092CA2797F6180F5F75D94369
9A4694401A03666FD47DFE5FE038DE89BF460E385EDC7C1BC802> |-
/d <1C60D8A8C9B7EF32A3751C0785195ACCDEDCD558B0CD22372F7513E54E48
AC44EF7F90944BD443CF74A223EA2D44A4AE53BD7228C403D594629538FBA1BF
9DC3B6FCB296A1A2AD7413C2370184531B38C77CCD3B7AD0F6B1F224FBDA3450
CEA18CBFB77312FF5DC379B1EFE2C95985D937EA30D102E369E51D58C051B619
8A0C816152E3DAC296E7D5431802281DBD30A6> |-
/e <1C60D8A8C9B7B4A1B743E7C0D0936E9D3FDE10008FB5C8BED388A99DB0F0
6D0F4DDDE0C2CB65B6A9B483E1A35BA49F566915B85A2172D38594032EA4A5B8
C3CDB5CB1257040680E6E6E385D3C0F375CD429EB16CF79E1B858DAB5202680C
722F67F80CF7511D2A5DEDD7F1A7619493> |-
/f <1C60D8A8C9B87B5D6E7F9C5847DAD49D07D8AAC14A816D0D7CF693B22C1A
E9F056F661E19416335BAFE3261A5BB6316884EFFC95C63021CE6DE0D8553FEE
A5111C3D5FFB3FE557BEA0F1955A> |-
/g <1C60D8A8C9B78256DE112C2FAF24B71EE55535E3FF98CCA2D7FB841AA61F
F3EA65BA83ED08347C6AF247D628AC8B9C74229DF28775BAB67357B848B4EADE
139EE2BAB7E1EDAB5A9B9E630C1E6110AAA815F1B3B298A26BDA943216AB6FEE
B49CF34CE9DDF2925D256285AE55DF36CECA33BD4594DA5D71218074D82D4A66
86D5F75D2027DEFE9023DA72BB1D7352E2477B03390A238201B2605B2CA7CD5F
2FD343C0946E52055520BD8A77BB84D0CF2896BDE011E1E6ECC620FB8ACDF4B0> |-
/i <1C60D8A8C9B8C29D9CE7A29F9239DA0B6E0EEB51DFAB3175A3DDA055D2ED
C6838F537B5FDBAD1C1FD337B84AAFCC49CE144692F1995B> |-
/j <1C60D8A8C9B8C29DC771C7424C0D85F390B9C04073F66D3A1E89CF49660D
A8E2AA8E32A81FB986D8A114DF0BAAB3B7D98F242F6F9AC872924E26A007CB5C
7D5C6EC82857B819C39B1E2B9A3B2E2A74> |-
/l <1C60D8A8C9B8C29D9CE7A29E68A124B490999A03E758DA1035CBF7222EF1
7F64> |-
/m <1C60D8A8C9B6D179435EF9FF6EF3300D11E951844048628528FC45594335
5608267738D6E98E448EFBFC1FBBA138F2300C96F4FB794BF2530C29A989EE55
851660D99A0902914F3B8437F239D7B572DFC476BF07E40FD066A3804F92171D
FABE43122A91AAB746BE6904FA8F6FA517E5F69B2306F8885B378D3FFA6E181A
22ABEDF55AE56FA08BF64A2FC63D44554BCB425E2B490A> |-
/n <1C60D8A8C9B7B4A1439DA8301E5D08ED9C1FED5D20989D7CB8C16AF055D9
666B7D3DC5C9AC579BBBF9018BDF713373744713A27D0DF490A3BF688901D719
8AD43451949D504C8E195CD13C4795CFDFDEA2156803> |-
/o <1C60D8A8C9B782565A75850EF46E34A59E3680BD42F16111D459872D7EF3
C83ED544B4BE242C2FC0D85ADEE75485D5AAE0A11F6EA66221593ACAE91E8411
3A49658A3890689650584B63FB78143D6A274D0DA1FB34CDCDC1C896CFD044D3
50> |-
/p <1C60D8A8C9B7EF3227EB0F49AB043B83AA813FC0B6CAB77DE72E92CC130F
12289FCE7FA069B023121A2A6001E871402892B2B981636BD037A4A41DAEBFEA
FE48338A055ADE38430CE1E42797C5FEFC59C5E58DC9A1363F570FFF05071710
3C6CD515795FB9A50E4338833D4E6C857752C648AA4D0CB740B2367402CC6942
006C655CD1CB39963043A1B7DA9FB77E771D04B4A165> |-
/q <1C60D8A8C9B7EF3227EB0F49AB043B83AA813FA76F762A30CCB757F5DB25
4527ABB1EF18FED85EB125C117150C6DF3F563559C8D9B7942CDF08D34017919
FC1DD11C65CAC769E5966663DDE306726F2F42A4F6EE155FD1767B79BABA10BA
E150AC6A179F312FB16A3723A4EDFBF09A47C6D3E12841CC5777D17729837110
A354E1E11038987B3CD6AF00CC65> |-
/r <1C60D8A8C9B854D0A3953AFC1523943FDE94C7331D32F412C96CFC19DC40
A8262A18CF65755800579EED31713594AA2E08782F6C586EED45DB8A6F> |-
/s <1C60D8A8C9B75A1747A79488F87595D6AA4867BCB357832F3713B7AEB682
A42B8227D982B3282A6185E22F716AA4F9F46B539C77C3F456EB3A8FE3CE27F9
F37F79CEE7A30A82DDAE9FB06B5E16656A5CC0B2DCF3F9BC9CA029EFC9BDD91D
416809865326CCECB45635C5CC2E60B706763E4E0067D9AD92886EC54EC47B4B
0F3033C6D8D0> |-
/t <1C60D8A8C9B869C11E3F89B1D0E7D12DBFA5D8A09338D41D45FB2AEF629C
21A045F10BEB8C235D8675177F74D9331ADAAC16E71428DBD9CFDB16930A4297
BDCF95D23AAA> |-
/u <1C60D8A8C9B7B4A1B743E7C042469AC3ED603D05BF36B707579140E8D9E1
1050486F7C63F3EA8CDDA06FF342E0E1A80BEE65C7DB95BA5140541BB4A92004
2AE0DF44E72DB4E9D658C98E7431D594D78EF6A57AE1634BF5> |-
/v <1C60D8A8C9B77FE2B23D266FA998E8B3528C99166F414A2AC5216CC5F266
10D4991A1CBE461215ADD8BA7B580EDC034411> |-
/z <1C60D8A8C9B71131AC77BB9F2FDDD4F328A47E11974CD1F2F2EAA8915552
B15EE049BD30E3A8CAE90F17F324DC8CF2C1986798> |-
/Ntilde <1C60D8A8C9B65B439BF910A8CA00096FF4BA3054> |-
/oacute <1C60D8A8C9B78256AE6290C16985246C6C580136> |-
/acute <1C60D8A8C9B8C5F13F17CCECB1AA0C125DEB2F6D2967ACBECCDD5313
6C67FDD1> |-
/tilde <1C60D8A8C9B8C5F13F1A4322ACC649AF243B10918502C5AD3B972C1A
E94966BEC373BBA58403C571CFB66D17928824D71019A34F9BCF97F1449BE9EE
CEFCC00C4D340BEF2AE2277DA70B00BAE05A964D910323D58E03DC> |-
/.notdef <1C60D8A8C9B854D00D> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/RPTEAC+HelveticaNeue-Thin /QJJAAA+HelveticaNeue-Thin findfont ct_VMDictPut
/RPTEAC+HelveticaNeue-Thin*1 
[32{/.notdef}rp /space 11{/.notdef}rp /comma /hyphen /period /.notdef /zero 
/one /two /three /four /.notdef /six /.notdef /eight 
/nine 7{/.notdef}rp /A /.notdef /C /D /E /F 
/G /H /I 2{/.notdef}rp /L /M /N /O 
/P /.notdef /R /S /T 12{/.notdef}rp /a /b 
/c /d /e /f /g /.notdef /i /j 
/.notdef /l /m /n /o /p /q /r 
/s /t /u /v 3{/.notdef}rp /z 9{/.notdef}rp /Ntilde 
18{/.notdef}rp /oacute 104{/.notdef}rp]
RPTEAC+HelveticaNeue-Thin nf
RPTEAC+HelveticaNeue-Thin*1 [6 0 0 -6 0 0 ]msf
55.3121 804.939 mo
(ORANGE es una marca registrada del Grupo France T)
[4.47272 3.80677 3.58476 4.0947 4.47272 3.38673 2.20044 3.14072 2.91276 2.20044 3.14073 3.14072 
3.02674 2.20044 4.80277 3.02674 1.69473 3.14073 3.02673 2.20044 1.69475 3.14072 3.24875 1.03474 
2.91275 1.58075 1.69475 3.02673 3.36275 3.02673 2.20044 3.36273 3.14073 1.03474 2.20042 4.47273 
1.69475 3.14073 3.36273 3.24876 2.20044 3.11079 1.69473 3.02675 3.14073 3.14073 3.14073 2.20042 
0 ]xsh
195.811 804.939 mo
(elecom, al que pertenece FRANCE T)
[3.14076 1.03479 3.14076 3.14076 3.24879 4.80283 1.69478 2.20049 3.02678 1.03477 2.20049 3.36278 
3.14078 3.14076 2.20049 3.36278 3.14076 1.69479 1.5808 3.14076 3.14078 3.14076 3.14076 3.14078 
2.2005 3.11081 3.80682 3.58481 4.09473 4.25076 3.38675 2.2005 0 ]xsh
290.915 804.939 mo
(ELECOM ESP)
[3.38678 3.02679 3.38678 4.25073 4.47278 4.88083 2.2005 3.38678 3.80682 0 ]xsh
327.4 804.939 mo
(A\204A S.A., domiciliada en Parque Empresarial La Finca, Paseo del Club Deportivo, 1 )
[3.58475 4.0947 3.58472 2.20044 3.80676 1.69473 3.58472 1.69473 1.69473 2.20044 3.36273 3.24872 
4.80276 1.03473 3.14072 1.03473 1.0347 1.03473 3.02673 3.36273 3.02673 2.20041 3.14072 3.14072 
2.20041 3.57275 3.02673 1.69473 3.36273 3.14069 3.14072 2.20041 3.38672 4.80276 3.36273 1.69473 
3.14069 2.91275 3.02673 1.69473 1.0347 3.02673 1.0347 2.20044 3.02673 3.02673 2.20041 3.11078 
1.03473 3.14072 3.14069 3.02673 1.69473 2.20041 3.57275 3.02673 2.91275 3.14072 3.24872 2.20044 
3.36273 3.14072 1.0347 2.20044 4.2507 1.0347 3.14072 3.36273 2.20041 4.02881 3.14069 3.36273 
3.24878 1.6947 1.58075 1.03473 2.69073 3.24878 1.6947 2.20044 3.36273 0 ]xsh
55.3121 812.559 mo
(Edificio 8, 28223 - Pozuelo de Alarc\227n, Madrid, e inscrita en el)
[3.36013 3.33614 1.00813 1.44613 1.00813 3.11412 1.00814 3.22215 1.66814 3.33614 1.66814 1.66814 
3.33614 3.33614 3.33614 3.33614 3.33614 1.66814 2.11217 1.66814 3.54616 3.22215 2.55611 3.11412 
3.11412 1.00813 3.22215 1.66814 3.33614 3.11412 1.66814 3.55815 1.00813 3.00014 1.66814 3.11412 
3.22215 3.11412 1.66814 1.66814 4.85417 3.00014 3.33614 1.66814 1.00813 3.33614 1.66814 1.66814 
3.11412 1.66814 1.00813 3.11412 2.88615 3.11412 1.66814 1.00813 1.55415 3.00014 1.66814 3.11412 
3.11412 1.66814 3.11412 0 ]xsh
211.225 812.559 mo
( Registro Mercantil de Madrid, T)
[1.66814 3.78015 3.11412 3.22214 1.00813 2.88615 1.55414 1.66814 3.22215 1.66812 4.85417 3.11411 
1.66814 3.11411 3.00014 3.11412 1.55414 1.00815 1.00812 1.66812 3.33612 3.11414 1.66812 4.85416 
3.00015 3.33612 1.66812 1.00815 3.33612 1.66812 1.66812 0 ]xsh
290.339 812.559 mo
(omo 13.183, Folio 129, Hoja M-213468, C.I.F)
[3.22211 4.77609 3.22211 1.66806 3.33609 3.33609 1.66806 3.33609 3.33606 3.33609 1.66806 1.66809 
3.08414 3.22208 1.00809 1.00809 3.22208 1.66809 3.33609 3.33606 3.33609 1.66806 1.66809 4.02008 
3.22208 1.00809 3.00006 1.66809 4.85413 2.11212 3.33606 3.33606 3.33609 3.33609 3.33606 3.33609 
1.66809 1.66806 4.22406 1.66809 1.02005 1.66809 0 ]xsh
405.674 812.559 mo
(. A82009812.)
[1.66806 1.66806 3.55807 3.33609 3.33606 3.33606 3.33606 3.33606 3.33606 3.33609 3.33606 0 
]xsh
RPTEAB+HelveticaNeue-Light*1 [10 0 0 -10 0 0 ]msf
55.2878 773.362 mo
(firma)
[2.59015 1.8501 3.15015 8.33006 0 ]xsh
55.2878 789.707 mo
(fecha)
[2.59017 5.19011 5.19011 5.37017 0 ]xsh
%ADOBeginSubsetFont: PBAAAA+HelveticaNeue-Bold AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
RPTEAA+HelveticaNeue-Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/colon <1C60D8A8C9B854D088EA530B2FDB28EC3B4FDD7AC4DCC908E1559B9B
987CF560D1F6EF6D40C6320A1C9A1A3BA4EA32D787EC05E13CA422> |-
/V <1C60D8A8C9B66B39070D84FD139E013B04C4A72ADA231E86FF714AE86E3A
485C1DFAC17E0955C121C593B86DBF52065DB2B5E9F4> |-
systemdict /gcheck known {setglobal} if end {end} if
end
RPTEAA+HelveticaNeue-Bold /Encoding get
dup 58 /colon put
dup 86 /V put
pop
%ADOEndSubsetFont
/RPTEAA+HelveticaNeue-Bold*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /slash /zero /one /two 
/three /four /five /six /seven /eight /nine /colon 
5{/.notdef}rp /at /A /B /C /D /E /F 
/G /.notdef /I /J /.notdef /L /M /N 
/O /P /.notdef /R /S /T /U /V 
/.notdef /X 8{/.notdef}rp /a /b /c /d /e 
/.notdef /g /.notdef /i 2{/.notdef}rp /l /m /n 
/o /p /.notdef /r /s /t /u 2{/.notdef}rp 
/x 11{/.notdef}rp /Ntilde 17{/.notdef}rp /ntilde 8{/.notdef}rp /udieresis 96{/.notdef}rp]
RPTEAA+HelveticaNeue-Bold nf
RPTEAA+HelveticaNeue-Bold*1 [7 0 0 -7 0 0 ]msf
91.9995 790 mo
(28/04/2011 11:06:07)
[3.892 3.892 2.59702 3.892 3.892 2.59702 3.892 3.892 3.892 3.892 1.946 3.892 
3.892 1.946 3.892 3.892 1.946 3.892 0 ]xsh
RPTEAB+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
55.278 131.523 mo
(nombr)
[3.75916 3.89214 5.83109 4.01817 0 ]xsh
74.8573 131.523 mo
(e!!)
[3.63324 1.94626 0 ]xsh
RPTEAA+HelveticaNeue-Bold*1 [7 0 0 -7 0 0 ]msf
91.9995 130.999 mo
(TIENDAMOVIL ORANGE)
[4.27695 2.06499 4.53596 5.18698 5.18698 4.79498 6.34898 5.446 4.41003 2.06499 4.15102 1.946 
5.446 5.054 4.79498 5.18698 5.31302 0 ]xsh
RPTEAB+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
55.278 141.523 mo
(localidad!!!)
[1.29515 3.89216 3.63315 3.63314 1.29514 1.29515 4.0182 3.63314 4.0182 1.94616 1.94616 0 
]xsh
405.6 141.523 mo
(c\227digo distr)
[3.63315 3.89215 4.01819 1.29517 3.89215 3.89218 1.94614 4.01822 1.29514 3.36719 2.0722 0 
]xsh
440.48 141.523 mo
(.!!)
[1.94629 1.94629 0 ]xsh
RPTEAA+HelveticaNeue-Bold*1 [7 0 0 -7 0 0 ]msf
450 139.999 mo
(19440118)
[3.892 3.892 3.892 3.892 3.892 3.892 3.892 0 ]xsh
RPTEAB+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
55.2786 151.522 mo
(n\274 de tel\216fono!)
[3.75917 2.33815 1.94616 4.01819 3.63314 1.94615 2.0722 3.63313 1.29514 3.63313 1.81318 3.89215 
3.75918 3.89216 0 ]xsh
215.618 151.522 mo
(n\274 de fax)
[3.75917 2.33817 1.94615 4.0182 3.63313 1.94617 1.81317 3.63315 0 ]xsh
.567 lw
540.173 132.139 mo
82.7527 132.139 li
@
86.0031 141.811 mo
400.257 141.811 li
@
51.0168 124.025 mo
544.245 124.025 li
544.245 110.232 li
51.0168 110.232 li
cp
0 0 0 .100098 cmyk
ef
.0202945 .6206 1 .0015259 cmyk
%ADOBeginSubsetFont: PBAAAA+HelveticaNeue-Bold AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
RPTEAA+HelveticaNeue-Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/parenleft <1C60D8A8C9B842576D223819C644462CDDF1F163BD7054C684AF
828576A4912E278432BE353B0DC48C0BFE61914D43050BB59F9B9104BFA5B6AC
ECEDFC391998E651FBB0ABCE> |-
/parenright <1C60D8A8C9B842576D223819C644462C93ACAFFEA8070A0D8B1
012359402435E985D9824A39C2A289344E0309DE5FF58EC352C02993BCCA72B6
4302F08A549FC1F242FD794C7> |-
/v <1C60D8A8C9B7B3D0B3A458FB9BFFEF4D40C2203617EEB1DE44C6D0B97969
952A36BB6D391D046C6D5A8C6FE88EAD383E1EA85E30> |-
systemdict /gcheck known {setglobal} if end {end} if
end
RPTEAA+HelveticaNeue-Bold /Encoding get
dup 40 /parenleft put
dup 41 /parenright put
dup 118 /v put
pop
%ADOEndSubsetFont
/RPTEAA+HelveticaNeue-Bold*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon 5{/.notdef}rp /at /A /B /C 
/D /E /F /G /.notdef /I /J /.notdef 
/L /M /N /O /P /.notdef /R /S 
/T /U /V /.notdef /X 8{/.notdef}rp /a /b 
/c /d /e /.notdef /g /.notdef /i 2{/.notdef}rp 
/l /m /n /o /p /.notdef /r /s 
/t /u /v /.notdef /x 11{/.notdef}rp /Ntilde 17{/.notdef}rp 
/ntilde 8{/.notdef}rp /udieresis 96{/.notdef}rp]
RPTEAA+HelveticaNeue-Bold nf
RPTEAA+HelveticaNeue-Bold*1 [9 0 0 -9 0 0 ]msf
55.3121 120.802 mo
(datos del punto de vent)
[5.49912 5.16623 3.16824 5.49911 4.83321 2.50218 5.49911 5.16623 2.32215 2.50218 5.49912 5.3372 
5.3372 3.16823 5.49911 2.50218 5.49911 5.16624 2.50218 4.68022 5.16624 5.3372 0 ]xsh
155.656 120.802 mo
(a \(a r)
[5.16628 2.50223 2.66429 5.16628 2.50223 0 ]xsh
176.996 120.802 mo
(ellenar por el punto de venta\))
[5.16626 2.32217 2.32217 5.16626 5.33723 5.16624 3.50128 2.50221 5.49915 5.49915 3.50128 2.5022 
5.16626 2.32217 2.50221 5.49913 5.33725 5.33722 3.16826 5.49916 2.5022 5.49915 5.16626 2.50223 
4.68024 5.16626 5.33725 3.16827 5.16626 0 ]xsh
472.391 141.811 mo
481.623 141.811 li
0 0 0 1 cmyk
@
484.102 141.811 mo
493.332 141.811 li
@
495.812 141.811 mo
505.043 141.811 li
@
507.521 141.811 mo
516.753 141.811 li
@
519.232 141.811 mo
528.462 141.811 li
@
530.941 141.811 mo
540.173 141.811 li
@
448.971 141.811 mo
458.204 141.811 li
@
460.682 141.811 mo
469.912 141.811 li
@
102.644 152.505 mo
111.875 152.505 li
@
114.354 152.505 mo
123.585 152.505 li
@
126.064 152.505 mo
135.296 152.505 li
@
137.774 152.505 mo
147.006 152.505 li
@
149.484 152.505 mo
158.715 152.505 li
@
161.194 152.505 mo
170.425 152.505 li
@
172.904 152.505 mo
182.136 152.505 li
@
184.614 152.505 mo
193.846 152.505 li
@
196.324 152.505 mo
205.555 152.505 li
@
247.139 152.505 mo
256.37 152.505 li
@
258.849 152.505 mo
268.08 152.505 li
@
270.559 152.505 mo
279.79 152.505 li
@
282.269 152.505 mo
291.5 152.505 li
@
293.979 152.505 mo
303.211 152.505 li
@
305.689 152.505 mo
314.921 152.505 li
@
317.399 152.505 mo
326.63 152.505 li
@
329.109 152.505 mo
338.341 152.505 li
@
340.819 152.505 mo
350.05 152.505 li
@
367.14 189.702 mo
376.372 189.702 li
@
378.85 189.702 mo
388.082 189.702 li
@
390.56 189.702 mo
399.791 189.702 li
@
435.712 189.702 mo
444.943 189.702 li
@
476.059 189.702 mo
485.289 189.702 li
@
519.243 189.702 mo
528.473 189.702 li
@
530.952 189.702 mo
540.184 189.702 li
@
540.184 180.03 mo
252.435 180.03 li
@
51.0273 171.916 mo
544.255 171.916 li
544.255 158.123 li
51.0273 158.123 li
cp
0 0 0 .100098 cmyk
ef
.0202945 .6206 1 .0015259 cmyk
RPTEAA+HelveticaNeue-Bold*1 [9 0 0 -9 0 0 ]msf
55.323 168.693 mo
(datos del cliente)
[5.49913 5.16625 3.16824 5.49913 4.83322 2.5022 5.49913 5.16624 2.32216 2.5022 5.16624 2.32217 
2.32217 5.16624 5.33721 3.16825 0 ]xsh
357.254 189.702 mo
85.0449 189.702 li
0 0 0 1 cmyk
@
332.131 210.978 mo
179.964 210.978 li
@
281.719 200.37 mo
84.6492 200.37 li
@
484.949 200.37 mo
494.181 200.37 li
@
496.407 200.37 mo
505.639 200.37 li
@
507.866 200.37 mo
517.096 200.37 li
@
519.324 200.37 mo
528.555 200.37 li
@
530.782 200.37 mo
540.014 200.37 li
@
463.398 220.65 mo
245.227 220.65 li
@
514.707 223.194 mo
524.628 223.194 li
524.628 213.273 li
514.707 213.273 li
cp
@
494.155 223.194 mo
504.076 223.194 li
504.076 213.273 li
494.155 213.273 li
cp
@
436.599 200.37 mo
313.719 200.37 li
@
220.004 180.03 mo
81.6348 180.03 li
@
391.138 210.978 mo
400.369 210.978 li
@
402.848 210.978 mo
412.08 210.978 li
@
414.558 210.978 mo
423.789 210.978 li
@
426.268 210.978 mo
435.499 210.978 li
@
437.979 210.978 mo
447.21 210.978 li
@
449.688 210.978 mo
458.92 210.978 li
@
461.398 210.978 mo
470.629 210.978 li
@
473.108 210.978 mo
482.34 210.978 li
@
484.818 210.978 mo
494.05 210.978 li
@
496.3 210.978 mo
505.531 210.978 li
@
507.591 210.978 mo
516.822 210.978 li
@
519.302 210.978 mo
528.532 210.978 li
@
530.783 210.978 mo
540.015 210.978 li
@
356.151 210.978 mo
365.382 210.978 li
@
367.861 210.978 mo
377.092 210.978 li
@
379.571 210.978 mo
388.803 210.978 li
@
344.651 210.978 mo
353.882 210.978 li
@
540.184 230.101 mo
254.504 230.101 li
@
123.504 230.101 mo
132.736 230.101 li
@
135.214 230.101 mo
144.446 230.101 li
@
146.925 230.101 mo
156.155 230.101 li
@
158.634 230.101 mo
167.866 230.101 li
@
170.345 230.101 mo
179.576 230.101 li
@
182.055 230.101 mo
191.287 230.101 li
@
193.765 230.101 mo
202.996 230.101 li
@
205.475 230.101 mo
214.706 230.101 li
@
217.185 230.101 mo
226.417 230.101 li
@
.498 lw
104.489 377.625 mo
246.222 377.625 li
246.222 363.452 li
104.489 363.452 li
cp
@
395.329 377.625 mo
537.062 377.625 li
537.062 363.452 li
395.329 363.452 li
cp
@
.567 lw
300.309 377.624 mo
310.23 377.624 li
310.23 367.703 li
300.309 367.703 li
cp
@
121.701 358.933 mo
129.849 358.933 li
@
132.037 358.933 mo
140.185 358.933 li
@
142.373 358.933 mo
150.521 358.933 li
@
152.709 358.933 mo
160.858 358.933 li
@
163.045 358.933 mo
171.193 358.933 li
@
173.381 358.933 mo
181.529 358.933 li
@
183.717 358.933 mo
191.865 358.933 li
@
194.053 358.933 mo
202.201 358.933 li
@
204.389 358.933 mo
212.537 358.933 li
@
51.0285 350.819 mo
544.256 350.819 li
544.256 337.026 li
51.0285 337.026 li
cp
0 0 0 .100098 cmyk
ef
.0202945 .6206 1 .0015259 cmyk
RPTEAA+HelveticaNeue-Bold*1 [9 0 0 -9 0 0 ]msf
55.3238 347.596 mo
(datos de)
[5.49912 5.16624 3.16824 5.49913 4.83321 2.5022 5.49911 0 ]xsh
92.655 347.596 mo
( )sh
95.337 347.596 mo
(los servicios contratados)
[2.32216 5.49914 4.83323 2.5022 4.83323 5.16624 3.50127 4.68025 2.32214 5.16626 2.32216 5.49913 
4.83322 2.50221 5.16624 5.49915 5.33722 3.16824 3.50128 5.16624 3.16826 5.16624 5.49913 5.49915 
0 ]xsh
205.005 390.17 mo
72.1297 390.17 li
0 0 0 1 cmyk
@
540.015 388.499 mo
407.14 388.499 li
@
362.631 390.17 mo
254.855 390.17 li
@
51.0285 280.565 mo
544.256 280.565 li
544.256 266.772 li
51.0285 266.772 li
cp
0 0 0 .100098 cmyk
ef
.0202945 .6206 1 .0015259 cmyk
RPTEAA+HelveticaNeue-Bold*1 [9 0 0 -9 0 0 ]msf
55.3238 277.343 mo
(datos adicionales)
[5.49915 5.16627 3.16826 5.49915 4.83324 2.50221 5.16627 5.49915 2.32217 5.16627 2.32217 5.49915 
5.33723 5.16626 2.32217 5.16626 0 ]xsh
0 0 0 1 cmyk
%ADOBeginSubsetFont: HIBBAA+HelveticaNeue-Light AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
RPTEAB+HelveticaNeue-Light dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/udieresis <1C60D8A8C9B78256AE629907E64AF609D379D2D0> |-
/dieresis <1C60D8A8C9B8B3751752A6A08560ACDB13CBAD5C31B3BF90E4664
97732B80BC705D13CA344280636CDE4EBAF23816290> |-
systemdict /gcheck known {setglobal} if end {end} if
end
RPTEAB+HelveticaNeue-Light /Encoding get
dup 159 /udieresis put
pop
%ADOEndSubsetFont
/RPTEAB+HelveticaNeue-Light*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /asterisk /.notdef /comma 
/hyphen /period /slash /zero /one /two /three /.notdef 
/five /six /seven /eight /nine /colon 6{/.notdef}rp /A 
/.notdef /C /D /E /F /G /H /I 
2{/.notdef}rp /L /M /N /O /P /.notdef /R 
/S /T 3{/.notdef}rp /X 8{/.notdef}rp /a /b /c 
/d /e /f /g /h /i /j /k 
/l /m /n /o /p /q /r /s 
/t /u /v /.notdef /x /y /z 12{/.notdef}rp 
/aacute 6{/.notdef}rp /eacute 3{/.notdef}rp /iacute 3{/.notdef}rp /ntilde /oacute 
4{/.notdef}rp /uacute 2{/.notdef}rp /udieresis 28{/.notdef}rp /ordmasculine 67{/.notdef}rp]
RPTEAB+HelveticaNeue-Light nf
RPTEAB+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
55.1207 290.426 mo
(*situaci\227n de su vivienda actual:!)
[2.4642 3.36719 1.29515 2.0722 3.75919 3.63316 3.63315 1.29515 3.89217 3.75919 1.94617 4.01821 
3.63316 1.94617 3.36719 3.75919 1.94617 3.24116 1.29515 3.24115 1.29515 3.63314 3.75919 4.0182 
3.63315 1.94617 3.63315 3.63315 2.0722 3.75919 3.63315 1.29515 1.94617 0 ]xsh
168.623 290.426 mo
(pr)
[4.0182 0 ]xsh
174.716 290.426 mo
(opiedad !)
[3.89215 4.01819 1.29512 3.63313 4.01819 3.63313 4.01819 1.94614 0 ]xsh
247.12 290.426 mo
(familiar !)
[1.8132 3.63315 5.83113 1.29517 1.29514 1.29517 3.63315 2.2052 1.9462 0 ]xsh
321.12 290.426 mo
(alquiler)
[3.63309 1.2951 4.01816 3.75916 1.2951 1.2951 3.63309 0 ]xsh
55.1204 300.426 mo
(*estado civil !!)
[2.46424 3.63318 3.36723 2.07224 3.63319 4.01824 3.8922 1.94621 3.63319 1.29518 3.24119 1.29519 
1.29518 1.94621 1.94621 0 ]xsh
154.62 300.426 mo
(*n\274 de personas a su cargo !)
[2.46423 3.75922 2.3382 1.9462 4.01823 3.63319 1.9462 4.01823 3.63318 2.20522 3.36722 3.8922 
3.75923 3.63318 3.36722 1.9462 3.63318 1.9462 3.36722 3.75922 1.9462 3.63318 3.63318 2.20523 
3.89218 3.89221 1.9462 0 ]xsh
301.12 300.426 mo
(*a\226os de r)
[2.46423 3.63321 3.75922 3.89221 3.36722 1.9462 4.01825 3.63318 1.9462 0 ]xsh
331.859 300.426 mo
(esidencia en su localidad)
[3.63312 3.36716 1.29514 4.01819 3.63312 3.75916 3.63312 1.29514 3.63312 1.94614 3.63312 3.75916 
1.94614 3.36716 3.75916 1.94617 1.2951 3.89215 3.63312 3.63312 1.2951 1.29514 4.01816 3.63315 
0 ]xsh
55.1201 310.426 mo
(*tarjetas de cr\216dito que posee)
[2.46421 2.07222 3.63316 2.20519 1.29516 3.63316 2.07221 3.63316 3.3672 1.94617 4.01822 3.63315 
1.94618 3.63316 2.20519 3.63316 4.0182 1.29517 2.07221 3.89217 1.94618 4.01822 3.7592 3.63316 
1.94618 4.01821 3.89218 3.3672 3.63316 0 ]xsh
55.1201 320.426 mo
(*situaci\227n laboral:!)
[2.4642 3.36719 1.29515 2.0722 3.75919 3.63316 3.63315 1.29515 3.89217 3.75919 1.94617 1.29516 
3.63315 4.0182 3.89217 2.20518 3.63316 1.29515 1.94617 0 ]xsh
131.122 320.426 mo
(trabajador cuenta pr)
[2.0722 2.20518 3.63315 4.01819 3.63315 1.29515 3.63315 4.0182 3.89215 2.2052 1.94617 3.63315 
3.75917 3.63315 3.75919 2.0722 3.63315 1.94617 4.0182 0 ]xsh
192.206 320.426 mo
(opia!)
[3.89215 4.0182 1.29514 3.63315 0 ]xsh
243.12 320.426 mo
( trabajador cuenta ajena!)
[1.94617 2.0722 2.20518 3.63315 4.0182 3.63315 1.29517 3.63315 4.01819 3.89218 2.20517 1.94617 
3.63318 3.75916 3.63315 3.75919 2.0722 3.63318 1.94617 3.63312 1.29517 3.63315 3.75919 3.63315 
0 ]xsh
352.12 320.426 mo
(pensionista!)
[4.01816 3.63312 3.75916 3.36716 1.29514 3.89212 3.75916 1.29514 3.36713 2.07217 3.63312 0 
]xsh
418.124 320.426 mo
(otr)
[3.89221 2.07224 0 ]xsh
426.167 320.426 mo
(os)
[3.89221 0 ]xsh
55.1194 330.426 mo
(*pr)
[2.46426 4.01826 0 ]xsh
63.6807 330.426 mo
(ofesi\227n !)
[3.89218 1.81319 3.63316 3.3672 1.29516 3.89218 3.75919 1.94617 0 ]xsh
329.12 330.426 mo
(*antig\237edad en el empleo)
[2.46417 3.63315 3.75916 2.0722 1.2951 3.89215 3.75919 3.63312 4.01819 3.63312 4.01819 1.94617 
3.63312 3.75919 1.94614 3.63312 1.29514 1.94617 3.63312 5.83109 4.01819 1.29514 3.63315 0 
]xsh
150.647 300.245 mo
93.6422 300.245 li
@
413.696 300.245 mo
422.927 300.245 li
@
425.154 300.245 mo
434.386 300.245 li
@
436.612 300.245 mo
445.845 300.245 li
@
448.071 300.245 mo
457.303 300.245 li
@
459.529 300.245 mo
468.76 300.245 li
@
470.988 300.245 mo
480.219 300.245 li
@
241.213 300.245 mo
250.445 300.245 li
@
252.672 300.245 mo
261.904 300.245 li
@
264.13 300.245 mo
273.361 300.245 li
@
275.589 300.245 mo
284.82 300.245 li
@
287.047 300.245 mo
296.279 300.245 li
@
205.197 292.952 mo
215.118 292.952 li
215.118 283.031 li
205.197 283.031 li
cp
@
345.362 292.952 mo
355.283 292.952 li
355.283 283.031 li
345.362 283.031 li
cp
@
274.212 292.952 mo
284.133 292.952 li
284.133 283.031 li
274.212 283.031 li
cp
@
207.334 323.452 mo
217.255 323.452 li
217.255 313.531 li
207.334 313.531 li
cp
@
389.334 323.452 mo
399.255 323.452 li
399.255 313.531 li
389.334 313.531 li
cp
@
317.334 323.452 mo
327.255 323.452 li
327.255 313.531 li
317.334 313.531 li
cp
@
540.015 320.459 mo
437.48 320.459 li
@
540.015 330.359 mo
409.136 330.359 li
@
325.505 330.359 mo
88.4047 330.359 li
@
540.015 309.899 mo
147.994 309.899 li
@
.0202945 .6206 1 .0015259 cmyk
%ADOBeginSubsetFont: QJJAAA+HelveticaNeue-Thin AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
RPTEAC+HelveticaNeue-Thin dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/iacute <1C60D8A8C9B8C29DB7DAFB4D6C0D1A44BEB106> |-
/dotlessi <1C60D8A8C9B8C29D9CE7A29F9239DA3F363143DCA413296F7537B
9977E19> |-
systemdict /gcheck known {setglobal} if end {end} if
end
RPTEAC+HelveticaNeue-Thin /Encoding get
dup 146 /iacute put
pop
%ADOEndSubsetFont
/RPTEAC+HelveticaNeue-Thin*1 
[32{/.notdef}rp /space 11{/.notdef}rp /comma /hyphen /period /.notdef /zero 
/one /two /three /four /.notdef /six /.notdef /eight 
/nine 7{/.notdef}rp /A /.notdef /C /D /E /F 
/G /H /I 2{/.notdef}rp /L /M /N /O 
/P /.notdef /R /S /T 12{/.notdef}rp /a /b 
/c /d /e /f /g /.notdef /i /j 
/.notdef /l /m /n /o /p /q /r 
/s /t /u /v 3{/.notdef}rp /z 9{/.notdef}rp /Ntilde 
13{/.notdef}rp /iacute 4{/.notdef}rp /oacute 104{/.notdef}rp]
RPTEAC+HelveticaNeue-Thin nf
RPTEAC+HelveticaNeue-Thin*1 [22.777 0 0 -22.777 0 0 ]msf
141.367 89.806 mo
(contrato clientes particulares telefon\222a m\227vil)
[11.7074 12.1175 11.7074 5.78552 6.21822 11.2747 5.78551 12.1175 6.21822 11.7074 3.71272 3.71272 
11.7074 11.7074 5.78552 11.7074 10.842 6.2182 12.5502 11.2747 6.2182 5.78552 3.71277 11.7074 
11.7075 3.71271 11.2747 6.21823 11.7074 10.842 6.21823 5.78552 11.7074 3.71274 11.7074 5.3754 
12.1176 11.7074 3.71274 11.2747 6.2182 18.0168 12.1175 9.99927 3.71271 0 ]xsh
0 0 0 1 cmyk
RPTEAB+HelveticaNeue-Light*1 [8 0 0 -8 0 0 ]msf
199.93 50.842 mo
(N\274)
[5.55231 0 ]xsh
210.988 52.913 mo
301.697 52.913 li
@
RPTEAB+HelveticaNeue-Light*1 [8 0 0 -8 0 0 ]msf
304.527 50.842 mo
(RNA)
[5.49615 5.79205 0 ]xsh
.750179 .679652 .670191 .901488 cmyk
%ADOBeginSubsetFont: GFNBAA+Helvetica45Light Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /GFNBAA+Helvetica45Light def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 0 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /g19 put
dup 57 /g27 put
def
/FontBBox {-166 -214 1050 967} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
3 dict dup begin
/.notdef <1C60D8A8C9B7BB5C53> |-
/g19 <1C60D8A8C9B790A85A59C99B8CA92410CE7D08A0E9392B5F5FEF3EE895
5AE4E14E659EFB6D50946585D8B17943B64D817A8FCF3044B0B7> |-
/g27 <1C60D8A8C9B790A8087548EE1B4CFD0B8C81703DA43C4073A51D3C5137
10EF3027C9F39133332A59FB80968729300F6528971955B53A5765E10804C3E0
7A0E0D038CF4C3E8DF6B63C0054E2BAAE5447CD40B58CD7418AC2F4021C84CDD
835A580D614A47C37F9D64CC0AF43799BF018855386C8B01261F259585C891E5
E9D9F296AB17131C7EBA2BF07BE26882A7A5EC0ED21AB3F3063989FA5E6DE8F3
A8E85C11A88EAFDD0275F268FD81455D143CEAA851F4A822F881775BD573A040
76C03B17709C82771884D6E4A055ACBCE1CFF798B82FE239E9B14AE97A28D98E
ABB3237B79F8A83A94B8860199752FCA0B248A19646D5DFFE99B7CDAFA1E6BCB
164E2F98558C77D206B27C6543BF59C0C37BC0F0BF60A01D1C7DF02CCF0C230B
EC8BC7E41EA409E6A3CA6F49A2798E6600DFC3E1876CEE634522FB0532AD5788
01DC61A5AA774362E59AE1D8> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/RPTEAD+Helvetica45Light /GFNBAA+Helvetica45Light findfont ct_VMDictPut
/RPTEAD+Helvetica45Light*1 
[49{/.notdef}rp /g19 7{/.notdef}rp /g27 198{/.notdef}rp]
RPTEAD+Helvetica45Light nf
RPTEAD+Helvetica45Light*1 [8 0 0 -8 0 0 ]msf
321.015 50.842 mo
(19)
[4.60825 0 ]xsh
51.0285 249.838 mo
544.256 249.838 li
544.256 236.045 li
51.0285 236.045 li
cp
0 0 0 .100098 cmyk
ef
.0202945 .6206 1 .0015259 cmyk
RPTEAA+HelveticaNeue-Bold*1 [9 0 0 -9 0 0 ]msf
55.3238 246.616 mo
(datos de pago)
[5.49912 5.16624 3.16824 5.49911 4.83321 2.50219 5.49913 5.16623 2.50219 5.49912 5.16623 5.49912 
0 ]xsh
0 0 0 1 cmyk
RPTEAB+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
55.1207 259.699 mo
(forma de pago!)
[1.81321 3.89219 2.20521 5.83114 3.63317 1.9462 4.01822 3.63318 1.94619 4.01823 3.63318 3.8922 
3.89218 0 ]xsh
RPTEAA+HelveticaNeue-Bold*1 [7 0 0 -7 0 0 ]msf
106.002 259 mo
(recibo domiciliado)
[2.72305 4.01804 4.01804 1.80597 4.27695 4.27695 1.946 4.27695 4.27695 6.34204 1.80597 4.01804 
1.80597 1.80597 1.80597 4.01804 4.27695 0 ]xsh
RPTEAB+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
193.621 259.699 mo
(entidad financiera !)
[3.63313 3.75916 2.07219 1.29512 4.01819 3.63312 4.01819 1.94614 1.81317 1.29512 3.75916 3.63313 
3.75917 3.63312 1.29514 3.63313 2.20515 3.63313 1.94615 0 ]xsh
RPTEAA+HelveticaNeue-Bold*1 [7 0 0 -7 0 0 ]msf
256.002 259 mo
(0182)
[3.892 3.892 3.892 0 ]xsh
RPTEAB+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
293.621 259.699 mo
( sucursal !)
[1.9462 3.36719 3.75922 3.63318 3.75922 2.2052 3.36722 3.63315 1.2952 1.94617 0 ]xsh
RPTEAA+HelveticaNeue-Bold*1 [7 0 0 -7 0 0 ]msf
328.002 259 mo
(0060)
[3.892 3.892 3.892 0 ]xsh
RPTEAB+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
369.121 259.699 mo
(DC!)
[4.7952 4.92816 0 ]xsh
RPTEAA+HelveticaNeue-Bold*1 [7 0 0 -7 0 0 ]msf
388.002 259 mo
(20)
[3.892 0 ]xsh
RPTEAB+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
404.116 259 mo
(cuenta    )
[2.90479 3.03079 2.90479 3.03079 1.34384 2.90475 1.2178 1.21777 1.2178 0 ]xsh
RPTEAA+HelveticaNeue-Bold*1 [7 0 0 -7 0 0 ]msf
425.107 259 mo
(1111111111 )
[7.47504 7.47501 7.47504 7.47504 7.47504 7.47501 7.47504 7.47504 7.47504 7.47504 0 ]xsh
191.005 260.099 mo
101.581 260.099 li
@
250.514 260.099 mo
259.746 260.099 li
@
261.973 260.099 mo
271.204 260.099 li
@
273.431 260.099 mo
282.662 260.099 li
@
284.889 260.099 mo
294.121 260.099 li
@
324.014 260.099 mo
333.246 260.099 li
@
335.473 260.099 mo
344.704 260.099 li
@
346.931 260.099 mo
356.162 260.099 li
@
358.39 260.099 mo
367.622 260.099 li
@
380.764 260.099 mo
389.996 260.099 li
@
392.223 260.099 mo
401.454 260.099 li
@
472.234 260.099 mo
481.464 260.099 li
@
483.944 260.099 mo
493.175 260.099 li
@
495.654 260.099 mo
504.885 260.099 li
@
507.364 260.099 mo
516.595 260.099 li
@
519.074 260.099 mo
528.305 260.099 li
@
530.784 260.099 mo
540.016 260.099 li
@
437.246 260.099 mo
446.478 260.099 li
@
448.956 260.099 mo
458.188 260.099 li
@
460.666 260.099 mo
469.898 260.099 li
@
425.746 260.099 mo
434.978 260.099 li
@
351.544 51.7971 mo
352.378 51.7971 li
352.378 18.9521 li
351.544 18.9521 li
cp
f
354.464 51.7971 mo
355.298 51.7971 li
355.298 18.9521 li
354.464 18.9521 li
cp
f
356.132 51.7971 mo
358.217 51.7971 li
358.217 18.9521 li
356.132 18.9521 li
cp
f
359.052 51.7971 mo
361.137 51.7971 li
361.137 18.9521 li
359.052 18.9521 li
cp
f
361.972 51.7971 mo
362.806 51.7971 li
362.806 18.9521 li
361.972 18.9521 li
cp
f
363.641 51.7971 mo
364.475 51.7971 li
364.475 18.9521 li
363.641 18.9521 li
cp
f
365.309 51.7971 mo
366.143 51.7971 li
366.143 18.9521 li
365.309 18.9521 li
cp
f
368.229 51.7971 mo
370.315 51.7971 li
370.315 18.9521 li
368.229 18.9521 li
cp
f
371.149 51.7971 mo
373.235 51.7971 li
373.235 18.9521 li
371.149 18.9521 li
cp
f
374.069 51.7971 mo
374.903 51.7971 li
374.903 18.9521 li
374.069 18.9521 li
cp
f
375.738 51.7971 mo
377.824 51.7971 li
377.824 18.9521 li
375.738 18.9521 li
cp
f
378.657 51.7971 mo
379.491 51.7971 li
379.491 18.9521 li
378.657 18.9521 li
cp
f
381.577 51.7971 mo
382.411 51.7971 li
382.411 18.9521 li
381.577 18.9521 li
cp
f
383.246 51.7971 mo
384.08 51.7971 li
384.08 18.9521 li
383.246 18.9521 li
cp
f
384.914 51.7971 mo
387 51.7971 li
387 18.9521 li
384.914 18.9521 li
cp
f
387.834 51.7971 mo
389.92 51.7971 li
389.92 18.9521 li
387.834 18.9521 li
cp
f
390.754 51.7971 mo
391.588 51.7971 li
391.588 18.9521 li
390.754 18.9521 li
cp
f
393.674 51.7971 mo
394.508 51.7971 li
394.508 18.9521 li
393.674 18.9521 li
cp
f
395.342 51.7971 mo
396.176 51.7971 li
396.176 18.9521 li
395.342 18.9521 li
cp
f
397.011 51.7971 mo
399.097 51.7971 li
399.097 18.9521 li
397.011 18.9521 li
cp
f
399.931 51.7971 mo
400.765 51.7971 li
400.765 18.9521 li
399.931 18.9521 li
cp
f
401.599 51.7971 mo
402.433 51.7971 li
402.433 18.9521 li
401.599 18.9521 li
cp
f
404.519 51.7971 mo
406.605 51.7971 li
406.605 18.9521 li
404.519 18.9521 li
cp
f
407.439 51.7971 mo
409.525 51.7971 li
409.525 18.9521 li
407.439 18.9521 li
cp
f
410.359 51.7971 mo
411.193 51.7971 li
411.193 18.9521 li
410.359 18.9521 li
cp
f
412.027 51.7971 mo
412.862 51.7971 li
412.862 18.9521 li
412.027 18.9521 li
cp
f
413.696 51.7971 mo
415.782 51.7971 li
415.782 18.9521 li
413.696 18.9521 li
cp
f
417.868 51.7971 mo
418.702 51.7971 li
418.702 18.9521 li
417.868 18.9521 li
cp
f
419.536 51.7971 mo
421.622 51.7971 li
421.622 18.9521 li
419.536 18.9521 li
cp
f
422.456 51.7971 mo
423.291 51.7971 li
423.291 18.9521 li
422.456 18.9521 li
cp
f
424.125 51.7971 mo
426.211 51.7971 li
426.211 18.9521 li
424.125 18.9521 li
cp
f
427.045 51.7971 mo
427.879 51.7971 li
427.879 18.9521 li
427.045 18.9521 li
cp
f
429.964 51.7971 mo
430.799 51.7971 li
430.799 18.9521 li
429.964 18.9521 li
cp
f
431.633 51.7971 mo
432.467 51.7971 li
432.467 18.9521 li
431.633 18.9521 li
cp
f
433.301 51.7971 mo
435.387 51.7971 li
435.387 18.9521 li
433.301 18.9521 li
cp
f
436.221 51.7971 mo
437.055 51.7971 li
437.055 18.9521 li
436.221 18.9521 li
cp
f
437.89 51.7971 mo
438.724 51.7971 li
438.724 18.9521 li
437.89 18.9521 li
cp
f
440.81 51.7971 mo
442.896 51.7971 li
442.896 18.9521 li
440.81 18.9521 li
cp
f
443.73 51.7971 mo
445.816 51.7971 li
445.816 18.9521 li
443.73 18.9521 li
cp
f
446.65 51.7971 mo
447.484 51.7971 li
447.484 18.9521 li
446.65 18.9521 li
cp
f
448.318 51.7971 mo
449.152 51.7971 li
449.152 18.9521 li
448.318 18.9521 li
cp
f
449.987 51.7971 mo
450.821 51.7971 li
450.821 18.9521 li
449.987 18.9521 li
cp
f
452.907 51.7971 mo
454.993 51.7971 li
454.993 18.9521 li
452.907 18.9521 li
cp
f
455.827 51.7971 mo
457.913 51.7971 li
457.913 18.9521 li
455.827 18.9521 li
cp
f
458.746 51.7971 mo
459.58 51.7971 li
459.58 18.9521 li
458.746 18.9521 li
cp
f
460.415 51.7971 mo
461.249 51.7971 li
461.249 18.9521 li
460.415 18.9521 li
cp
f
462.083 51.7971 mo
462.917 51.7971 li
462.917 18.9521 li
462.083 18.9521 li
cp
f
465.003 51.7971 mo
467.089 51.7971 li
467.089 18.9521 li
465.003 18.9521 li
cp
f
467.923 51.7971 mo
470.009 51.7971 li
470.009 18.9521 li
467.923 18.9521 li
cp
f
470.843 51.7971 mo
471.677 51.7971 li
471.677 18.9521 li
470.843 18.9521 li
cp
f
472.512 51.7971 mo
473.346 51.7971 li
473.346 18.9521 li
472.512 18.9521 li
cp
f
474.18 51.7971 mo
475.014 51.7971 li
475.014 18.9521 li
474.18 18.9521 li
cp
f
477.1 51.7971 mo
479.185 51.7971 li
479.185 18.9521 li
477.1 18.9521 li
cp
f
480.02 51.7971 mo
482.106 51.7971 li
482.106 18.9521 li
480.02 18.9521 li
cp
f
482.94 51.7971 mo
483.774 51.7971 li
483.774 18.9521 li
482.94 18.9521 li
cp
f
484.609 51.7971 mo
485.443 51.7971 li
485.443 18.9521 li
484.609 18.9521 li
cp
f
486.277 51.7971 mo
487.111 51.7971 li
487.111 18.9521 li
486.277 18.9521 li
cp
f
489.197 51.7971 mo
491.283 51.7971 li
491.283 18.9521 li
489.197 18.9521 li
cp
f
492.117 51.7971 mo
494.202 51.7971 li
494.202 18.9521 li
492.117 18.9521 li
cp
f
495.037 51.7971 mo
495.871 51.7971 li
495.871 18.9521 li
495.037 18.9521 li
cp
f
496.705 51.7971 mo
497.539 51.7971 li
497.539 18.9521 li
496.705 18.9521 li
cp
f
498.374 51.7971 mo
499.208 51.7971 li
499.208 18.9521 li
498.374 18.9521 li
cp
f
501.294 51.7971 mo
503.38 51.7971 li
503.38 18.9521 li
501.294 18.9521 li
cp
f
504.214 51.7971 mo
506.3 51.7971 li
506.3 18.9521 li
504.214 18.9521 li
cp
f
507.134 51.7971 mo
507.968 51.7971 li
507.968 18.9521 li
507.134 18.9521 li
cp
f
508.802 51.7971 mo
509.636 51.7971 li
509.636 18.9521 li
508.802 18.9521 li
cp
f
510.471 51.7971 mo
511.305 51.7971 li
511.305 18.9521 li
510.471 18.9521 li
cp
f
513.391 51.7971 mo
515.477 51.7971 li
515.477 18.9521 li
513.391 18.9521 li
cp
f
516.311 51.7971 mo
518.397 51.7971 li
518.397 18.9521 li
516.311 18.9521 li
cp
f
519.23 51.7971 mo
520.064 51.7971 li
520.064 18.9521 li
519.23 18.9521 li
cp
f
520.899 51.7971 mo
522.985 51.7971 li
522.985 18.9521 li
520.899 18.9521 li
cp
f
523.819 51.7971 mo
525.905 51.7971 li
525.905 18.9521 li
523.819 18.9521 li
cp
f
526.739 51.7971 mo
527.573 51.7971 li
527.573 18.9521 li
526.739 18.9521 li
cp
f
529.659 51.7971 mo
530.493 51.7971 li
530.493 18.9521 li
529.659 18.9521 li
cp
f
531.327 51.7971 mo
532.161 51.7971 li
532.161 18.9521 li
531.327 18.9521 li
cp
f
532.996 51.7971 mo
533.83 51.7971 li
533.83 18.9521 li
532.996 18.9521 li
cp
f
535.916 51.7971 mo
536.75 51.7971 li
536.75 18.9521 li
535.916 18.9521 li
cp
f
537.584 51.7971 mo
539.67 51.7971 li
539.67 18.9521 li
537.584 18.9521 li
cp
f
540.504 51.7971 mo
542.59 51.7971 li
542.59 18.9521 li
540.504 18.9521 li
cp
f
543.424 51.7971 mo
544.258 51.7971 li
544.258 18.9521 li
543.424 18.9521 li
cp
f
RPTEAB+HelveticaNeue-Light*1 [9.42 0 0 -9.42 0 0 ]msf
410.55 61.534 mo
(0110910000000C)
[5.23755 5.23752 5.23755 5.23752 5.23755 5.23755 5.23752 5.23755 5.23752 5.23755 5.23752 5.23755 
5.23752 0 ]xsh
110.191 220.65 mo
119.421 220.65 li
@
121.9 220.65 mo
131.132 220.65 li
@
135.611 220.65 mo
144.843 220.65 li
@
147.32 220.65 mo
156.552 220.65 li
@
160.802 220.65 mo
170.033 220.65 li
@
172.093 220.65 mo
181.325 220.65 li
@
183.804 220.65 mo
193.034 220.65 li
@
195.285 220.65 mo
204.517 220.65 li
@
447.214 189.702 mo
456.445 189.702 li
@
487.061 189.702 mo
496.292 189.702 li
@
RPTEAB+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
55.2926 579.89 mo
(IMEI!)
[1.55417 5.83112 4.15118 1.55417 0 ]xsh
249.009 579.89 mo
(pr)
[4.0182 0 ]xsh
255.104 579.89 mo
(ecio pr)
[3.63318 3.63315 1.29517 3.89218 1.9462 4.01822 0 ]xsh
275.602 579.89 mo
(omocional!)
[3.89215 5.83112 3.89215 3.63315 1.29514 3.89215 3.75919 3.63315 1.29514 0 ]xsh
327.298 579.89 mo
(si!  no)
[7.28964 5.21762 5.86862 5.86862 5.86865 7.68164 0 ]xsh
%ADOBeginSubsetFont: PBAAAA+HelveticaNeue-Bold AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
RPTEAA+HelveticaNeue-Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/k <1C60D8A8C9B7FD84E6506D89D94B37C182BAAF424DF31D8F13C490697D59
FE742A4FB6663A03CAE2F994587FC466B02AE9470451CBC616C8CD222A3DE0E3
2B72A199228E36> |-
/y <1C60D8A8C9B7B4A13335097CACA4545518D9A05B96907D6FBF4621519CC3
2B7407A8C567078FA2E27BC28ACAE333A7A52B868D2D820442440A44EC31906E
1CA142AB767FFD7AECB38A6A29600B588B02FD12> |-
systemdict /gcheck known {setglobal} if end {end} if
end
RPTEAA+HelveticaNeue-Bold /Encoding get
dup 107 /k put
dup 121 /y put
pop
%ADOEndSubsetFont
/RPTEAA+HelveticaNeue-Bold*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon 5{/.notdef}rp /at /A /B /C 
/D /E /F /G /.notdef /I /J /.notdef 
/L /M /N /O /P /.notdef /R /S 
/T /U /V /.notdef /X 8{/.notdef}rp /a /b 
/c /d /e /.notdef /g /.notdef /i /.notdef 
/k /l /m /n /o /p /.notdef /r 
/s /t /u /v /.notdef /x /y 10{/.notdef}rp 
/Ntilde 17{/.notdef}rp /ntilde 8{/.notdef}rp /udieresis 96{/.notdef}rp]
RPTEAA+HelveticaNeue-Bold nf
RPTEAA+HelveticaNeue-Bold*1 [7 0 0 -7 0 0 ]msf
317.004 581 mo
(X )
[28.0001 0 ]xsh
RPTEAB+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
55.2926 590.89 mo
(mar)
[5.83116 3.63319 0 ]xsh
66.836 590.89 mo
(ca/modelo)
[3.63313 3.63313 2.3311 5.83109 3.89215 4.01819 3.63313 1.29514 0 ]xsh
RPTEAA+HelveticaNeue-Bold*1 [7 0 0 -7 0 0 ]msf
113.004 590 mo
(LG Cookie Style T310 Blanco)
[4.15102 5.31302 1.946 5.18698 4.27695 4.27695 4.01804 1.80597 4.01804 1.946 4.54301 2.46404 
3.63298 1.80597 4.01804 1.946 4.27695 3.892 3.892 3.892 1.946 4.92796 1.80597 4.01804 
4.15102 4.01804 0 ]xsh
51.0301 572.393 mo
544.258 572.393 li
544.258 557.559 li
51.0301 557.559 li
cp
0 0 0 .100098 cmyk
ef
.0202945 .6206 1 .0015259 cmyk
RPTEAA+HelveticaNeue-Bold*1 [9 0 0 -9 0 0 ]msf
55.3254 569.17 mo
(datos del terminal)
[5.49911 5.16623 3.16824 5.49911 4.83321 2.50218 5.49911 5.16623 2.32214 2.50219 3.16823 5.16623 
3.50126 8.15424 2.32214 5.3372 5.16624 0 ]xsh
71.4449 580.501 mo
80.6766 580.501 li
0 0 0 1 cmyk
@
83.1547 580.501 mo
92.3859 580.501 li
@
94.8645 580.501 mo
104.096 580.501 li
@
106.575 580.501 mo
115.805 580.501 li
@
118.284 580.501 mo
127.516 580.501 li
@
129.994 580.501 mo
139.226 580.501 li
@
141.704 580.501 mo
150.936 580.501 li
@
153.414 580.501 mo
162.645 580.501 li
@
165.123 580.501 mo
174.355 580.501 li
@
176.834 580.506 mo
186.064 580.506 li
@
188.543 580.506 mo
197.775 580.506 li
@
200.253 580.506 mo
209.484 580.506 li
@
211.963 580.506 mo
221.195 580.506 li
@
223.673 580.506 mo
232.904 580.506 li
@
235.383 580.506 mo
244.615 580.506 li
@
313.423 583.362 mo
323.344 583.362 li
323.344 573.441 li
313.423 573.441 li
cp
@
341.878 583.362 mo
351.799 583.362 li
351.799 573.441 li
341.878 573.441 li
cp
@
380.101 590.662 mo
106.091 590.662 li
@
205.007 467.999 mo
96.3355 467.999 li
@
236.093 496.457 mo
246.014 496.457 li
246.014 486.536 li
236.093 486.536 li
cp
@
236.093 508.138 mo
246.014 508.138 li
246.014 498.217 li
236.093 498.217 li
cp
@
236.093 523.818 mo
246.014 523.818 li
246.014 513.897 li
236.093 513.897 li
cp
@
474.928 497.457 mo
484.849 497.457 li
484.849 487.536 li
474.928 487.536 li
cp
@
301.446 508.138 mo
311.367 508.138 li
311.367 498.217 li
301.446 498.217 li
cp
@
474.928 522.818 mo
484.849 522.818 li
484.849 512.897 li
474.928 512.897 li
cp
@
236.093 550.366 mo
246.014 550.366 li
246.014 540.445 li
236.093 540.445 li
cp
@
314.062 549.366 mo
323.983 549.366 li
323.983 539.445 li
314.062 539.445 li
cp
@
403.928 549.366 mo
413.849 549.366 li
413.849 539.445 li
403.928 539.445 li
cp
@
211.007 480.499 mo
102.336 480.499 li
@
359.368 483.499 mo
369.289 483.499 li
369.289 473.578 li
359.368 473.578 li
cp
@
236.093 536.499 mo
246.014 536.499 li
246.014 526.578 li
236.093 526.578 li
cp
@
474.928 535.499 mo
484.849 535.499 li
484.849 525.578 li
474.928 525.578 li
cp
@
474.928 549.366 mo
484.849 549.366 li
484.849 539.445 li
474.928 539.445 li
cp
@
RPTEAB+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
55.2926 617.781 mo
(importe deposito de garant\222a!)
[1.29515 5.83111 4.0182 3.89217 2.20518 2.0722 3.63314 1.94617 4.0182 3.63315 4.0182 3.89217 
3.36719 1.29515 2.0722 3.89217 1.94617 4.0182 3.63314 1.94617 3.89216 3.63315 2.20518 3.63315 
3.75919 2.0722 1.29515 3.63315 0 ]xsh
194.293 617.781 mo
(llamadas inter)
[1.29514 1.29514 3.63313 5.8311 3.63312 4.01819 3.63313 3.36717 1.94615 1.29514 3.75917 2.07217 
3.63313 0 ]xsh
236.031 617.781 mo
(nacionales r)
[3.75919 3.63313 3.63315 1.29515 3.89215 3.75919 3.63315 1.29514 3.63315 3.36719 1.94617 0 
]xsh
271.957 617.781 mo
(estringidas!)
[3.63315 3.36716 2.0722 2.20517 1.29517 3.75916 3.89218 1.29514 4.01819 3.63315 3.36719 0 
]xsh
RPTEAA+HelveticaNeue-Bold*1 [7 0 0 -7 0 0 ]msf
310.004 619 mo
(X)sh
RPTEAB+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
362.792 617.781 mo
(llamadas r)
[1.29517 1.29514 3.63315 5.83112 3.63315 4.01822 3.63315 3.36719 1.94617 0 ]xsh
393.524 617.781 mo
(oaming r)
[3.89218 3.63315 5.83115 1.29517 3.75919 3.89218 1.94617 0 ]xsh
419.852 617.781 mo
(estringidas)
[3.63312 3.36719 2.07217 2.20517 1.29514 3.75916 3.89215 1.29514 4.01819 3.63312 0 ]xsh
RPTEAA+HelveticaNeue-Bold*1 [7 0 0 -7 0 0 ]msf
460.004 619 mo
(X)sh
51.0301 610.283 mo
544.258 610.283 li
544.258 596.49 li
51.0301 596.49 li
cp
0 0 0 .100098 cmyk
ef
.0202945 .6206 1 .0015259 cmyk
%ADOBeginSubsetFont: PBAAAA+HelveticaNeue-Bold AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
RPTEAA+HelveticaNeue-Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/oacute <1C60D8A8C9B7D8BE6A28298F655DD6536A1A9145> |-
/acute <1C60D8A8C9B869C16D9E3EFA02A02E90FAD7A207B712E745BB5529D8
F4A7639D9E> |-
systemdict /gcheck known {setglobal} if end {end} if
end
RPTEAA+HelveticaNeue-Bold /Encoding get
dup 151 /oacute put
pop
%ADOEndSubsetFont
/RPTEAA+HelveticaNeue-Bold*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon 5{/.notdef}rp /at /A /B /C 
/D /E /F /G /.notdef /I /J /.notdef 
/L /M /N /O /P /.notdef /R /S 
/T /U /V /.notdef /X 8{/.notdef}rp /a /b 
/c /d /e /.notdef /g /.notdef /i /.notdef 
/k /l /m /n /o /p /.notdef /r 
/s /t /u /v /.notdef /x /y 10{/.notdef}rp 
/Ntilde 17{/.notdef}rp /ntilde /oacute 7{/.notdef}rp /udieresis 96{/.notdef}rp]
RPTEAA+HelveticaNeue-Bold nf
RPTEAA+HelveticaNeue-Bold*1 [9 0 0 -9 0 0 ]msf
55.3258 607.06 mo
(condiciones necesarias para la pr)
[5.16628 5.49917 5.33726 5.49916 2.3222 5.16628 2.32219 5.49918 5.33725 5.16628 4.83326 2.50224 
5.33726 5.16628 5.16629 5.16628 4.83325 5.16629 3.5013 2.32219 5.16628 4.83325 2.50223 5.49918 
5.16628 3.5013 5.16628 2.50223 2.3222 5.16628 2.50223 5.49916 0 ]xsh
199.79 607.06 mo
(estaci\227n del servicio \(a r)
[5.16626 4.83324 3.16826 5.16626 5.16628 2.32217 5.49915 5.33723 2.50221 5.49915 5.16626 2.32217 
2.50221 4.83324 5.16626 3.50128 4.68027 2.32217 5.16626 2.32217 5.49915 2.5022 2.66428 5.16626 
2.50223 0 ]xsh
304.095 607.06 mo
(ellenar por Orange\))
[5.16626 2.3222 2.32217 5.16629 5.33725 5.16626 3.50131 2.50223 5.49915 5.49915 3.50131 2.50223 
7.00223 3.50128 5.16629 5.33725 5.49915 5.16629 0 ]xsh
144.853 618.397 mo
154.084 618.397 li
0 0 0 1 cmyk
@
156.562 618.397 mo
165.794 618.397 li
@
168.272 618.397 mo
177.504 618.397 li
@
179.982 618.397 mo
189.213 618.397 li
@
307.762 621.999 mo
317.683 621.999 li
317.683 612.078 li
307.762 612.078 li
cp
@
457.878 621.999 mo
467.799 621.999 li
467.799 612.078 li
457.878 612.078 li
cp
@
320.533 427.732 mo
329.765 427.732 li
@
332.243 427.732 mo
341.474 427.732 li
@
343.953 427.732 mo
353.185 427.732 li
@
355.663 427.732 mo
364.894 427.732 li
@
367.373 427.732 mo
376.604 427.732 li
@
379.083 427.732 mo
388.314 427.732 li
@
390.793 427.732 mo
400.024 427.732 li
@
402.503 427.732 mo
411.735 427.732 li
@
414.213 427.732 mo
423.445 427.732 li
@
437.105 427.732 mo
446.338 427.732 li
@
448.816 427.732 mo
458.046 427.732 li
@
460.525 427.732 mo
469.757 427.732 li
@
472.236 427.732 mo
481.466 427.732 li
@
483.946 427.732 mo
493.177 427.732 li
@
495.656 427.732 mo
504.887 427.732 li
@
507.366 427.732 mo
516.597 427.732 li
@
519.076 427.732 mo
528.307 427.732 li
@
530.786 427.732 mo
540.018 427.732 li
@
429.153 428.88 mo
429.146 428.901 429.132 428.922 429.132 428.95 cv
429.132 428.985 429.146 428.999 429.195 428.999 cv
429.517 428.999 li
429.559 428.999 429.622 428.992 429.643 428.943 cv
433.297 422.685 li
433.311 422.664 433.325 422.629 433.325 422.608 cv
433.325 422.58 433.297 422.566 433.255 422.566 cv
432.926 422.566 li
432.877 422.566 432.835 422.573 432.807 422.622 cv
429.153 428.88 li
ef
1 lw
429.153 428.88 mo
429.146 428.901 429.132 428.922 429.132 428.95 cv
429.132 428.985 429.146 428.999 429.195 428.999 cv
429.517 428.999 li
429.559 428.999 429.622 428.992 429.643 428.943 cv
433.297 422.685 li
433.311 422.664 433.325 422.629 433.325 422.608 cv
433.325 422.58 433.297 422.566 433.255 422.566 cv
432.926 422.566 li
432.877 422.566 432.835 422.573 432.807 422.622 cv
429.153 428.88 li
cp
@
.567 lw
198.166 428.999 mo
94.8172 428.999 li
@
RPTEAB+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
55.2934 651.003 mo
(r)sh
57.3719 651.003 mo
(ecarga autom\207tica mensual!)
[3.63235 3.63235 3.63235 2.20438 3.89137 3.63235 1.94456 3.63235 3.75838 2.07141 3.89137 5.83031 
3.63235 2.0714 1.29436 3.63235 3.63235 1.94457 5.83032 3.63235 3.75839 3.36638 3.75839 3.63235 
1.29436 0 ]xsh
161.793 651.003 mo
(10)
[3.8903 0 ]xsh
RPTEAA+HelveticaNeue-Bold*1 [7 0 0 -7 0 0 ]msf
181.004 651 mo
(X)sh
174.464 646.852 mo
174.087 646.404 173.387 646.124 172.721 646.124 cv
171.567 646.124 170.621 646.789 170.362 647.895 cv
169.782 647.895 li
169.571 648.336 li
170.279 648.336 li
170.271 648.427 170.271 648.49 170.271 648.56 cv
170.271 648.623 170.271 648.686 170.279 648.777 cv
169.782 648.777 li
169.571 649.218 li
170.362 649.218 li
170.621 650.324 171.567 651.003 172.687 651.003 cv
173.317 651.003 173.912 650.744 174.262 650.464 cv
174.262 649.869 li
173.912 650.289 173.352 650.562 172.721 650.562 cv
171.812 650.562 171.112 650.044 170.86 649.218 cv
173.352 649.218 li
173.562 648.777 li
170.762 648.777 li
170.755 648.7 170.748 648.637 170.748 648.567 cv
170.748 648.497 170.755 648.427 170.762 648.336 cv
173.764 648.336 li
173.975 647.895 li
170.86 647.895 li
171.077 647.139 171.777 646.565 172.652 646.565 cv
173.352 646.565 173.919 646.859 174.262 647.279 cv
174.464 646.852 li
ef
RPTEAB+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
203.543 651.003 mo
(20)
[3.8903 0 ]xsh
216.214 646.852 mo
215.837 646.404 215.137 646.124 214.471 646.124 cv
213.317 646.124 212.371 646.789 212.112 647.895 cv
211.532 647.895 li
211.321 648.336 li
212.029 648.336 li
212.021 648.427 212.021 648.49 212.021 648.56 cv
212.021 648.623 212.021 648.686 212.029 648.777 cv
211.532 648.777 li
211.321 649.218 li
212.112 649.218 li
212.371 650.324 213.317 651.003 214.437 651.003 cv
215.067 651.003 215.662 650.744 216.012 650.464 cv
216.012 649.869 li
215.662 650.289 215.102 650.562 214.471 650.562 cv
213.562 650.562 212.862 650.044 212.61 649.218 cv
215.102 649.218 li
215.312 648.777 li
212.512 648.777 li
212.505 648.7 212.498 648.637 212.498 648.567 cv
212.498 648.497 212.505 648.427 212.512 648.336 cv
215.514 648.336 li
215.725 647.895 li
212.61 647.895 li
212.827 647.139 213.527 646.565 214.402 646.565 cv
215.102 646.565 215.669 646.859 216.012 647.279 cv
216.214 646.852 li
ef
%ADOBeginSubsetFont: HIBBAA+HelveticaNeue-Light AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
RPTEAB+HelveticaNeue-Light dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/four <1C60D8A8C9B7EF327C102745143588106C267CDE7590967441C6BE565
C97CC6A462F274D92C0632734168B18F89F0FE1B0AE0BFC76533B747CCE8ADA2
C9F8A5FE6BB55E9942B> |-
systemdict /gcheck known {setglobal} if end {end} if
end
RPTEAB+HelveticaNeue-Light /Encoding get
dup 52 /four put
pop
%ADOEndSubsetFont
/RPTEAB+HelveticaNeue-Light*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /asterisk /.notdef /comma 
/hyphen /period /slash /zero /one /two /three /four 
/five /six /seven /eight /nine /colon 6{/.notdef}rp /A 
/.notdef /C /D /E /F /G /H /I 
2{/.notdef}rp /L /M /N /O /P /.notdef /R 
/S /T 3{/.notdef}rp /X 8{/.notdef}rp /a /b /c 
/d /e /f /g /h /i /j /k 
/l /m /n /o /p /q /r /s 
/t /u /v /.notdef /x /y /z 12{/.notdef}rp 
/aacute 6{/.notdef}rp /eacute 3{/.notdef}rp /iacute 3{/.notdef}rp /ntilde /oacute 
4{/.notdef}rp /uacute 2{/.notdef}rp /udieresis 28{/.notdef}rp /ordmasculine 67{/.notdef}rp]
RPTEAB+HelveticaNeue-Light nf
RPTEAB+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
257.793 651.003 mo
(compr)
[3.63235 3.89139 5.83032 4.0174 0 ]xsh
277.243 651.003 mo
(omiso de permanencia!)
[3.89136 5.83032 1.29434 3.36639 3.89136 1.94455 4.01743 3.63232 1.94458 4.0174 3.63235 2.20438 
5.83032 3.63235 3.75836 3.63235 3.75839 3.63232 1.29437 3.63232 0 ]xsh
383.293 651.003 mo
(18 meses!)
[3.8912 3.8912 1.94421 5.83017 3.6322 3.36624 3.63217 3.36624 0 ]xsh
444.043 651.003 mo
(24 meses)
[3.89221 3.89218 1.9462 5.83118 3.63318 3.36722 3.63318 0 ]xsh
RPTEAA+HelveticaNeue-Bold*1 [7 0 0 -7 0 0 ]msf
481.004 652 mo
(X)sh
51.0309 642.187 mo
544.259 642.187 li
544.259 628.394 li
51.0309 628.394 li
cp
0 0 0 .100098 cmyk
ef
.0202945 .6206 1 .0015259 cmyk
%ADOBeginSubsetFont: PBAAAA+HelveticaNeue-Bold AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
RPTEAA+HelveticaNeue-Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/q <1C60D8A8C9B7D8BE1A68BECA012E6F309A00C1AE535E718C41B0B5190BC5
22B45C5373D25FA53E41B6AA8DD07CECCEB18CC7FD8D2AE725D41A6DD2B75C59
F430B1A094B2EAC2F6B267960F2869FDD070355183CA9592B58973C372E7E245
A8FFB5D66113F65736CFBCC26A886E7DF47649B41730D4FCAED9D9B32FDAFDC3
4A> |-
systemdict /gcheck known {setglobal} if end {end} if
end
RPTEAA+HelveticaNeue-Bold /Encoding get
dup 113 /q put
pop
%ADOEndSubsetFont
/RPTEAA+HelveticaNeue-Bold*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon 5{/.notdef}rp /at /A /B /C 
/D /E /F /G /.notdef /I /J /.notdef 
/L /M /N /O /P /.notdef /R /S 
/T /U /V /.notdef /X 8{/.notdef}rp /a /b 
/c /d /e /.notdef /g /.notdef /i /.notdef 
/k /l /m /n /o /p /q /r 
/s /t /u /v /.notdef /x /y 10{/.notdef}rp 
/Ntilde 17{/.notdef}rp /ntilde /oacute 7{/.notdef}rp /udieresis 96{/.notdef}rp]
RPTEAA+HelveticaNeue-Bold nf
RPTEAA+HelveticaNeue-Bold*1 [9 0 0 -9 0 0 ]msf
55.3262 638.964 mo
(contrataci\227n de la modalidad Fusi\227n de Orange \(para los clientes)
[5.16625 5.49914 5.33723 3.16825 3.50127 5.16625 3.16825 5.16625 5.16625 2.32217 5.49914 5.33723 
2.50211 5.49914 5.16625 2.50211 2.32217 5.16624 2.50211 8.15427 5.49913 5.49915 5.16624 2.32217 
2.32216 5.49915 5.16624 5.49915 2.50209 5.33723 5.33723 4.83322 2.32217 5.49913 5.33723 2.50209 
5.49915 5.16624 2.50211 7.00221 3.50127 5.16626 5.33722 5.49915 5.16624 2.50211 2.66425 5.49915 
5.16623 3.50128 5.16626 2.50211 2.32217 5.49911 4.83325 2.50208 5.16626 2.32217 2.32217 5.16626 
5.33722 3.16824 5.16626 0 ]xsh
334.748 638.964 mo
( que contraten el servicio m\227vil pr)
[2.50211 5.49911 5.33722 5.16623 2.50211 5.16623 5.49915 5.33722 3.16824 3.50125 5.16626 3.16824 
5.16623 5.33722 2.50208 5.16626 2.32214 2.50211 4.83322 5.16626 3.50125 4.68024 2.32217 5.16623 
2.32217 5.49911 2.50211 8.15424 5.49915 4.68024 2.32214 2.32214 2.50211 5.49911 0 ]xsh
480.057 638.964 mo
(epago\))
[5.16632 5.49918 5.16632 5.49921 5.49918 0 ]xsh
177.923 653.903 mo
187.844 653.903 li
187.844 643.982 li
177.923 643.982 li
cp
0 0 0 1 cmyk
@
477.715 654.999 mo
487.636 654.999 li
487.636 645.078 li
477.715 645.078 li
cp
@
416.421 654.999 mo
426.342 654.999 li
426.342 645.078 li
416.421 645.078 li
cp
@
382.591 454.655 mo
132.582 454.655 li
@
278.823 749.44 mo
278.901 749.44 278.978 749.44 279.055 749.44 cv
279.075 749.44 279.094 749.44 279.114 749.44 cv
279.278 749.528 279.515 749.543 279.753 749.556 cv
279.792 749.556 279.83 749.556 279.869 749.556 cv
279.918 749.642 280.015 749.681 280.159 749.672 cv
280.238 749.691 280.271 749.755 280.392 749.73 cv
280.411 749.73 280.43 749.73 280.45 749.73 cv
280.468 749.809 280.596 749.779 280.682 749.789 cv
280.691 749.896 280.879 749.824 280.915 749.905 cv
280.934 749.905 280.953 749.905 280.973 749.905 cv
281.067 750.101 281.38 750.079 281.554 750.195 cv
281.573 750.195 281.593 750.195 281.612 750.195 cv
281.864 750.37 282.13 750.529 282.425 750.66 cv
282.544 750.677 282.539 750.817 282.658 750.835 cv
282.738 750.832 282.785 750.862 282.832 750.893 cv
282.987 751.047 283.145 751.2 283.355 751.299 cv
283.374 751.299 283.394 751.299 283.413 751.299 cv
284.256 752.006 285.068 752.743 285.854 753.507 cv
285.873 753.507 285.892 753.507 285.912 753.507 cv
285.988 753.508 285.965 753.609 286.028 753.624 cv
286.041 753.669 286.03 753.738 286.086 753.74 cv
286.266 754.025 286.426 754.329 286.725 754.495 cv
286.725 754.514 286.725 754.534 286.725 754.553 cv
286.824 754.667 286.861 754.844 287.016 754.902 cv
287.05 755.119 287.219 755.202 287.306 755.367 cv
287.377 755.567 287.541 755.674 287.655 755.831 cv
287.655 755.851 287.655 755.87 287.655 755.89 cv
287.713 756.005 287.755 756.138 287.887 756.18 cv
287.885 756.26 287.914 756.308 287.945 756.354 cv
288.032 756.442 288.049 756.599 288.178 756.645 cv
288.197 756.645 288.216 756.645 288.236 756.645 cv
288.236 756.664 288.236 756.683 288.236 756.703 cv
288.319 756.716 288.256 756.876 288.352 756.877 cv
288.48 756.981 288.494 757.2 288.585 757.342 cv
288.582 757.422 288.612 757.47 288.642 757.516 cv
288.706 757.685 288.828 757.796 288.933 757.923 cv
288.998 758.071 289.076 758.206 289.165 758.33 cv
289.157 758.474 289.155 758.612 289.282 758.62 cv
289.307 758.769 289.363 758.887 289.456 758.969 cv
289.459 759.004 289.465 759.038 289.514 759.027 cv
289.514 759.066 289.514 759.104 289.514 759.143 cv
289.585 759.305 289.634 759.489 289.746 759.608 cv
289.746 759.627 289.746 759.647 289.746 759.666 cv
289.83 759.756 289.824 759.937 289.921 760.015 cv
289.887 760.223 289.988 760.296 290.037 760.422 cv
290.105 760.509 290.109 760.659 290.211 760.712 cv
290.211 760.732 290.211 760.751 290.211 760.77 cv
290.27 761.04 290.385 761.255 290.502 761.467 cv
290.511 761.536 290.492 761.632 290.56 761.642 cv
290.563 761.677 290.569 761.71 290.618 761.7 cv
290.618 761.758 290.618 761.816 290.618 761.874 cv
290.626 761.982 290.656 762.068 290.734 762.107 cv
290.734 762.126 290.734 762.145 290.734 762.165 cv
290.725 762.309 290.764 762.406 290.85 762.455 cv
290.846 762.557 290.863 762.636 290.909 762.688 cv
290.995 762.872 290.931 763.207 291.083 763.327 cv
291.086 763.401 291.157 763.407 291.141 763.501 cv
291.146 763.593 291.113 763.723 291.199 763.733 cv
291.194 763.816 291.189 763.898 291.257 763.908 cv
291.26 763.982 291.332 763.988 291.315 764.082 cv
291.315 764.121 291.315 764.16 291.315 764.198 cv
291.32 764.29 291.287 764.42 291.373 764.43 cv
291.373 764.45 291.373 764.469 291.373 764.489 cv
291.405 764.573 291.305 764.789 291.431 764.779 cv
291.431 764.799 291.431 764.818 291.431 764.837 cv
291.436 764.929 291.404 765.059 291.49 765.07 cv
291.49 765.089 291.489 765.109 291.49 765.128 cv
291.523 765.23 291.42 765.469 291.547 765.476 cv
291.547 765.496 291.547 765.515 291.547 765.535 cv
291.583 765.673 291.475 765.956 291.606 765.999 cv
291.601 766.082 291.596 766.164 291.664 766.174 cv
291.664 766.193 291.664 766.212 291.664 766.232 cv
291.7 766.408 291.589 766.732 291.722 766.813 cv
291.722 766.832 291.722 766.852 291.722 766.871 cv
291.722 766.968 291.722 767.065 291.722 767.161 cv
291.647 767.238 291.647 767.376 291.722 767.452 cv
291.722 767.646 291.722 767.839 291.722 768.033 cv
291.722 768.053 291.722 768.072 291.722 768.091 cv
291.675 768.214 291.641 768.47 291.722 768.614 cv
291.652 768.69 291.699 768.706 291.722 768.788 cv
291.628 768.747 291.628 769.062 291.722 769.021 cv
291.719 769.095 291.648 769.101 291.664 769.195 cv
291.533 769.238 291.641 769.521 291.606 769.66 cv
291.503 769.757 291.657 769.855 291.606 770.067 cv
291.477 770.074 291.581 770.313 291.547 770.415 cv
291.59 770.593 291.447 770.586 291.49 770.764 cv
291.402 770.928 291.387 771.165 291.373 771.403 cv
291.373 771.422 291.373 771.442 291.373 771.461 cv
291.288 771.647 291.207 771.837 291.199 772.1 cv
291.223 772.24 291.093 772.226 291.141 772.391 cv
291.141 772.449 291.141 772.507 291.141 772.565 cv
291.15 772.71 291.05 772.745 291.025 772.856 cv
291.024 772.971 290.866 772.929 290.909 773.088 cv
290.966 773.32 290.735 773.263 290.792 773.494 cv
290.792 773.514 290.792 773.533 290.792 773.553 cv
290.491 773.871 290.344 774.344 290.211 774.831 cv
290.192 774.831 290.172 774.831 290.153 774.831 cv
290.068 774.882 289.969 774.918 289.979 775.063 cv
289.982 775.24 289.856 775.289 289.805 775.412 cv
289.785 775.412 289.766 775.412 289.746 775.412 cv
289.729 775.531 289.589 775.526 289.572 775.644 cv
289.508 775.852 289.325 775.94 289.282 776.167 cv
289.114 776.252 289.058 776.447 288.933 776.574 cv
288.933 776.594 288.933 776.613 288.933 776.632 cv
288.713 776.78 288.593 777.028 288.41 777.213 cv
288.391 777.213 288.371 777.213 288.352 777.213 cv
288.211 777.305 288.095 777.421 288.003 777.562 cv
287.984 777.562 287.965 777.562 287.945 777.562 cv
287.759 777.628 287.661 777.781 287.539 777.91 cv
287.519 777.91 287.5 777.91 287.48 777.91 cv
287.361 777.927 287.365 778.066 287.306 778.143 cv
287.287 778.143 287.267 778.143 287.248 778.143 cv
287.067 778.175 286.998 778.319 286.841 778.375 cv
286.822 778.375 286.803 778.375 286.783 778.375 cv
286.61 778.306 286.534 778.62 286.667 778.666 cv
286.686 778.666 286.706 778.666 286.725 778.666 cv
286.813 778.847 286.976 778.495 287.074 778.666 cv
287.093 778.666 287.113 778.666 287.132 778.666 cv
287.232 778.762 287.729 778.762 287.829 778.666 cv
287.848 778.666 287.868 778.666 287.887 778.666 cv
287.846 778.76 288.161 778.76 288.119 778.666 cv
288.158 778.666 288.197 778.666 288.236 778.666 cv
288.393 778.63 288.697 778.74 288.759 778.608 cv
288.778 778.608 288.797 778.608 288.817 778.608 cv
288.919 778.574 289.158 778.678 289.165 778.55 cv
289.185 778.55 289.204 778.55 289.223 778.55 cv
289.544 778.561 289.687 778.393 289.863 778.259 cv
289.876 778.214 289.864 778.144 289.921 778.143 cv
289.956 778.14 289.99 778.134 289.979 778.085 cv
290.1 778.012 290.197 777.916 290.269 777.795 cv
290.269 777.775 290.269 777.756 290.269 777.736 cv
290.405 777.581 290.469 777.355 290.618 777.213 cv
290.621 777.139 290.692 777.133 290.676 777.039 cv
290.696 777.039 290.715 777.039 290.734 777.039 cv
290.879 776.932 291.062 776.863 291.141 776.69 cv
291.18 776.69 291.219 776.69 291.257 776.69 cv
291.282 776.82 291.544 776.714 291.664 776.749 cv
292.139 777.068 292.546 777.454 293.117 777.678 cv
293.117 777.698 293.117 777.717 293.117 777.736 cv
293.278 777.864 293.509 777.925 293.814 777.91 cv
293.833 777.91 293.852 777.91 293.872 777.91 cv
293.966 777.925 294.473 777.856 294.627 777.736 cv
294.766 777.701 295.049 777.809 295.092 777.678 cv
295.166 777.675 295.172 777.603 295.266 777.62 cv
295.405 777.585 295.688 777.693 295.731 777.562 cv
295.89 777.557 295.848 777.659 295.963 777.562 cv
296.254 777.562 296.545 777.562 296.835 777.562 cv
296.874 777.562 296.912 777.562 296.951 777.562 cv
297.029 777.562 297.106 777.562 297.184 777.562 cv
297.203 777.562 297.222 777.562 297.242 777.562 cv
297.496 777.638 298.097 777.673 298.287 777.62 cv
298.326 777.62 298.365 777.62 298.404 777.62 cv
298.378 777.715 298.721 777.715 298.694 777.62 cv
298.713 777.62 298.733 777.62 298.752 777.62 cv
298.77 777.699 298.898 777.668 298.985 777.678 cv
299.101 777.678 299.217 777.678 299.333 777.678 cv
299.41 777.748 299.425 777.701 299.508 777.678 cv
299.607 777.811 299.952 777.699 300.147 777.736 cv
300.185 777.736 300.224 777.736 300.263 777.736 cv
300.379 777.736 300.496 777.736 300.612 777.736 cv
300.708 777.736 300.805 777.736 300.902 777.736 cv
300.965 777.832 301.42 777.832 301.483 777.736 cv
301.639 777.813 301.704 777.774 301.832 777.736 cv
302.066 777.699 302.45 777.811 302.587 777.678 cv
302.607 777.678 302.626 777.678 302.645 777.678 cv
302.822 777.642 303.146 777.752 303.226 777.62 cv
303.246 777.62 303.265 777.62 303.285 777.62 cv
303.369 777.588 303.585 777.688 303.575 777.562 cv
303.594 777.562 303.614 777.562 303.633 777.562 cv
303.754 777.527 304.014 777.634 304.04 777.504 cv
304.059 777.504 304.078 777.504 304.098 777.504 cv
304.19 777.499 304.32 777.532 304.33 777.446 cv
304.417 777.436 304.545 777.466 304.563 777.387 cv
304.621 777.387 304.679 777.387 304.737 777.387 cv
304.92 777.397 305.088 777.39 305.144 777.272 cv
305.317 777.188 305.341 777.319 305.492 777.213 cv
305.707 777.176 305.936 777.154 306.073 777.039 cv
306.112 777.039 306.151 777.039 306.19 777.039 cv
306.42 776.978 306.642 776.91 306.829 776.807 cv
306.848 776.807 306.868 776.807 306.887 776.807 cv
307.107 776.736 307.355 776.694 307.526 776.574 cv
307.545 776.574 307.565 776.574 307.584 776.574 cv
307.91 776.474 308.283 776.421 308.514 776.226 cv
308.533 776.226 308.553 776.226 308.572 776.226 cv
308.752 776.231 308.894 776.199 308.978 776.109 cv
309.058 776.112 309.106 776.082 309.153 776.051 cv
309.256 776.019 309.394 776.021 309.443 775.935 cv
309.482 775.935 309.521 775.935 309.56 775.935 cv
309.668 775.927 309.754 775.897 309.792 775.819 cv
309.841 775.694 310.162 775.841 310.199 775.703 cv
310.279 775.705 310.326 775.675 310.373 775.644 cv
310.522 775.638 310.65 775.612 310.722 775.528 cv
310.741 775.528 310.76 775.528 310.78 775.528 cv
310.884 775.458 311.118 775.518 311.187 775.412 cv
311.252 775.4 311.277 775.348 311.303 775.296 cv
311.355 775.341 311.434 775.358 311.535 775.354 cv
311.799 775.309 312.122 775.322 312.29 775.18 cv
312.31 775.18 312.329 775.18 312.348 775.18 cv
312.433 775.148 312.649 775.248 312.639 775.122 cv
312.659 775.122 312.678 775.122 312.697 775.122 cv
312.799 775.088 313.038 775.192 313.046 775.063 cv
313.065 775.063 313.085 775.063 313.104 775.063 cv
313.34 774.951 313.836 775.098 313.975 774.889 cv
313.995 774.889 314.014 774.889 314.034 774.889 cv
314.154 774.854 314.415 774.961 314.44 774.831 cv
314.508 774.782 314.596 774.755 314.731 774.773 cv
314.721 774.869 315.089 774.869 315.08 774.773 cv
315.099 774.773 315.118 774.773 315.137 774.773 cv
315.492 774.779 315.818 774.756 316.067 774.657 cv
316.106 774.657 316.144 774.657 316.183 774.657 cv
316.264 774.753 316.741 774.753 316.823 774.657 cv
316.842 774.657 316.861 774.657 316.881 774.657 cv
317.095 774.62 317.459 774.732 317.578 774.599 cv
317.636 774.599 317.694 774.599 317.752 774.599 cv
317.849 774.599 317.946 774.599 318.042 774.599 cv
318.164 774.725 318.208 774.57 318.391 774.599 cv
318.528 774.6 318.562 774.499 318.74 774.54 cv
319.02 774.648 319.475 774.58 319.844 774.599 cv
319.863 774.599 319.883 774.599 319.902 774.599 cv
319.927 774.729 320.188 774.622 320.309 774.657 cv
320.344 774.674 320.532 774.801 320.541 774.657 cv
320.56 774.657 320.58 774.657 320.599 774.657 cv
320.64 774.868 321.023 774.737 321.238 774.773 cv
321.258 774.773 321.277 774.773 321.296 774.773 cv
321.352 774.891 321.52 774.898 321.703 774.889 cv
321.887 774.861 321.908 774.994 322.11 774.947 cv
322.226 775.006 322.243 775.163 322.342 775.238 cv
322.342 775.257 322.342 775.277 322.342 775.296 cv
322.247 775.414 322.22 775.6 322.11 775.703 cv
322.11 775.722 322.11 775.741 322.11 775.761 cv
321.923 775.941 321.808 776.195 321.645 776.4 cv
321.626 776.4 321.606 776.4 321.587 776.4 cv
321.465 776.472 321.368 776.569 321.296 776.69 cv
321.12 776.688 321.071 776.813 320.948 776.865 cv
320.767 776.975 320.498 776.996 320.425 777.213 cv
320.338 777.223 320.21 777.193 320.192 777.272 cv
320.041 777.294 319.874 777.301 319.786 777.387 cv
319.706 777.385 319.658 777.415 319.611 777.446 cv
319.553 777.446 319.495 777.446 319.437 777.446 cv
319.234 777.436 319.065 777.461 318.973 777.562 cv
318.953 777.562 318.934 777.562 318.914 777.562 cv
318.854 777.695 318.499 777.534 318.45 777.678 cv
318.43 777.678 318.411 777.678 318.391 777.678 cv
318.299 777.683 318.17 777.65 318.159 777.736 cv
318.12 777.736 318.081 777.736 318.042 777.736 cv
318.007 777.837 317.767 777.732 317.752 777.852 cv
317.733 777.852 317.713 777.852 317.694 777.852 cv
317.69 777.833 317.195 777.815 317.113 777.91 cv
317.093 777.91 317.074 777.91 317.055 777.91 cv
316.997 777.91 316.939 777.91 316.881 777.91 cv
316.778 777.944 316.539 777.84 316.532 777.969 cv
316.474 777.969 316.416 777.969 316.358 777.969 cv
315.893 777.953 315.521 778.057 315.254 778.085 cv
315.234 778.085 315.215 778.085 315.195 778.085 cv
314.945 778.167 314.812 778.008 314.615 778.143 cv
314.499 778.24 314.541 778.138 314.382 778.143 cv
314.28 778.177 314.041 778.073 314.034 778.201 cv
314.014 778.201 313.995 778.201 313.975 778.201 cv
313.752 778.165 313.292 778.255 312.988 778.318 cv
312.949 778.318 312.91 778.318 312.871 778.318 cv
312.787 778.349 312.571 778.249 312.581 778.375 cv
312.471 778.266 312.435 778.369 312.29 778.375 cv
312.151 778.411 311.869 778.302 311.826 778.433 cv
311.734 778.439 311.604 778.405 311.593 778.491 cv
311.574 778.491 311.555 778.491 311.535 778.491 cv
311.432 778.527 311.294 778.321 311.244 778.491 cv
311.206 778.491 311.167 778.491 311.129 778.491 cv
310.962 778.48 310.833 778.506 310.78 778.608 cv
310.741 778.608 310.702 778.608 310.664 778.608 cv
310.423 778.428 310.111 778.673 309.85 778.666 cv
309.728 778.539 309.684 778.695 309.502 778.666 cv
309.381 778.7 309.12 778.594 309.095 778.724 cv
308.936 778.729 308.978 778.627 308.862 778.724 cv
308.724 778.759 308.441 778.651 308.397 778.782 cv
308.378 778.782 308.359 778.782 308.339 778.782 cv
308.201 778.817 307.918 778.709 307.874 778.84 cv
307.836 778.84 307.797 778.84 307.759 778.84 cv
307.656 778.874 307.417 778.77 307.41 778.898 cv
307.39 778.898 307.371 778.898 307.352 778.898 cv
307.109 778.869 306.958 778.931 306.829 779.014 cv
306.79 779.014 306.751 779.014 306.713 779.014 cv
306.536 778.899 306.113 779.033 305.899 779.073 cv
305.798 779.068 305.718 779.085 305.667 779.131 cv
305.509 779.167 305.206 779.057 305.144 779.189 cv
305.124 779.189 305.105 779.189 305.086 779.189 cv
304.965 779.223 304.704 779.117 304.679 779.247 cv
304.593 779.18 304.532 779.18 304.447 779.247 cv
304.362 779.279 304.146 779.179 304.156 779.305 cv
304.117 779.305 304.078 779.305 304.04 779.305 cv
303.938 779.338 303.698 779.235 303.691 779.363 cv
303.672 779.363 303.652 779.363 303.633 779.363 cv
303.549 779.395 303.333 779.295 303.343 779.421 cv
303.323 779.421 303.304 779.421 303.285 779.421 cv
303.164 779.456 302.903 779.349 302.878 779.479 cv
302.858 779.479 302.839 779.479 302.82 779.479 cv
302.718 779.513 302.478 779.409 302.471 779.537 cv
302.432 779.537 302.394 779.537 302.355 779.537 cv
302.27 779.569 302.055 779.469 302.064 779.596 cv
302.026 779.596 301.987 779.596 301.948 779.596 cv
301.856 779.6 301.726 779.568 301.716 779.654 cv
301.696 779.654 301.677 779.654 301.658 779.654 cv
301.523 779.635 301.435 779.663 301.367 779.712 cv
301.309 779.712 301.251 779.712 301.193 779.712 cv
300.74 779.724 300.362 779.811 299.973 779.886 cv
299.887 779.954 299.826 779.954 299.74 779.886 cv
299.551 779.891 299.383 779.916 299.275 780.002 cv
299.256 780.002 299.236 780.002 299.217 780.002 cv
299.038 780.066 298.756 779.992 298.52 780.119 cv
298.443 780.119 298.365 780.119 298.287 780.119 cv
297.964 780.182 297.55 780.155 297.3 780.293 cv
297.032 780.257 296.965 780.423 296.719 780.409 cv
296.61 780.494 296.334 780.411 296.254 780.525 cv
296.234 780.525 296.215 780.525 296.196 780.525 cv
296.076 780.56 295.814 780.453 295.789 780.583 cv
295.77 780.583 295.75 780.583 295.731 780.583 cv
295.647 780.615 295.431 780.515 295.441 780.641 cv
295.421 780.641 295.402 780.641 295.382 780.641 cv
295.023 780.708 294.611 780.722 294.278 780.816 cv
294.259 780.816 294.24 780.816 294.22 780.816 cv
293.956 780.881 293.617 780.87 293.407 780.99 cv
293.387 780.99 293.368 780.99 293.349 780.99 cv
293.079 780.933 292.998 781.065 292.826 781.106 cv
292.806 781.106 292.787 781.106 292.768 781.106 cv
292.752 780.969 292.551 781.112 292.535 781.165 cv
292.334 781.118 292.312 781.251 292.129 781.223 cv
292.044 781.254 291.828 781.154 291.838 781.28 cv
291.657 781.312 291.46 781.328 291.315 781.397 cv
291.231 781.428 291.015 781.329 291.025 781.455 cv
291.005 781.455 290.986 781.455 290.967 781.455 cv
290.948 781.331 290.713 781.464 290.676 781.513 cv
290.657 781.513 290.637 781.513 290.618 781.513 cv
290.526 781.518 290.396 781.485 290.386 781.571 cv
290.366 781.571 290.347 781.571 290.327 781.571 cv
290.189 781.607 289.906 781.498 289.863 781.629 cv
289.644 781.584 289.585 781.7 289.398 781.687 cv
289.226 781.729 289.038 781.754 288.933 781.861 cv
288.857 781.787 288.719 781.787 288.642 781.861 cv
288.475 781.927 288.19 781.873 288.062 781.978 cv
287.894 781.966 287.766 781.992 287.713 782.094 cv
287.693 782.094 287.674 782.094 287.655 782.094 cv
287.551 782.129 287.413 781.924 287.364 782.094 cv
287.209 782.132 287.001 782.118 286.9 782.21 cv
286.88 782.21 286.861 782.21 286.841 782.21 cv
286.681 782.263 286.433 782.228 286.318 782.326 cv
286.239 782.324 286.191 782.354 286.144 782.384 cv
285.767 782.337 285.653 782.552 285.389 782.617 cv
285.279 782.604 285.261 782.682 285.156 782.675 cv
285.107 782.538 284.857 782.678 284.808 782.733 cv
284.725 782.728 284.643 782.723 284.633 782.791 cv
284.614 782.791 284.594 782.791 284.575 782.791 cv
284.236 782.878 283.864 782.932 283.646 783.14 cv
283.544 783.173 283.304 783.07 283.297 783.198 cv
283.218 783.216 283.186 783.28 283.065 783.256 cv
282.876 783.261 282.707 783.286 282.6 783.372 cv
282.58 783.372 282.561 783.372 282.542 783.372 cv
282.362 783.366 282.219 783.399 282.135 783.488 cv
282.116 783.488 282.096 783.488 282.077 783.488 cv
281.799 783.424 281.832 783.67 281.554 783.605 cv
281.535 783.605 281.515 783.605 281.496 783.605 cv
281.323 783.55 280.81 783.653 280.624 783.779 cv
280.605 783.779 280.586 783.779 280.566 783.779 cv
280.561 783.797 280.07 783.822 279.927 783.895 cv
279.908 783.895 279.888 783.895 279.869 783.895 cv
279.781 784.04 279.368 783.86 279.288 784.012 cv
279.269 784.012 279.249 784.012 279.23 784.012 cv
279.191 784.012 279.152 784.012 279.114 784.012 cv
278.945 783.847 278.669 784.067 278.474 784.07 cv
278.398 784 278.383 784.047 278.3 784.07 cv
278.29 784.002 278.208 784.006 278.126 784.012 cv
278.084 783.954 277.683 784.03 277.545 784.07 cv
277.525 784.07 277.506 784.07 277.487 784.07 cv
277.462 783.94 277.2 784.046 277.08 784.012 cv
277.041 784.012 277.003 784.012 276.964 784.012 cv
276.925 784.012 276.886 784.012 276.848 784.012 cv
276.62 784.069 276.51 783.883 276.383 784.012 cv
276.235 784.004 276.158 783.927 276.15 783.779 cv
276.154 783.743 276.159 783.71 276.208 783.721 cv
276.286 783.721 276.363 783.721 276.441 783.721 cv
276.46 783.721 276.48 783.721 276.499 783.721 cv
276.561 783.853 276.864 783.743 277.022 783.779 cv
277.041 783.779 277.061 783.779 277.08 783.779 cv
277.164 783.747 277.38 783.847 277.37 783.721 cv
277.429 783.721 277.487 783.721 277.545 783.721 cv
277.666 783.894 277.85 783.644 278.068 783.721 cv
278.145 783.796 278.243 783.757 278.3 783.662 cv
278.483 783.725 278.608 783.703 278.823 783.662 cv
278.915 783.658 279.045 783.691 279.055 783.605 cv
279.075 783.605 279.094 783.605 279.114 783.605 cv
279.438 783.542 279.795 783.511 280.101 783.43 cv
280.121 783.43 280.14 783.43 280.159 783.43 cv
280.251 783.426 280.381 783.458 280.392 783.372 cv
280.45 783.372 280.508 783.372 280.566 783.372 cv
280.904 783.323 281.183 783.214 281.496 783.14 cv
281.515 783.14 281.535 783.14 281.554 783.14 cv
281.827 783.025 282.249 783.061 282.425 782.849 cv
282.445 782.849 282.464 782.849 282.484 782.849 cv
282.576 782.844 282.705 782.877 282.716 782.791 cv
283.284 782.72 283.761 782.557 284.227 782.384 cv
284.328 782.331 284.517 782.365 284.575 782.268 cv
284.784 782.303 284.856 782.201 284.982 782.152 cv
285.074 782.147 285.204 782.18 285.214 782.094 cv
285.25 782.091 285.283 782.085 285.273 782.036 cv
285.292 782.036 285.311 782.036 285.331 782.036 cv
285.54 781.955 285.852 781.976 286.028 781.861 cv
286.047 781.861 286.067 781.861 286.086 781.861 cv
286.189 781.829 286.327 781.832 286.377 781.745 cv
286.396 781.745 286.415 781.745 286.434 781.745 cv
286.555 781.711 286.816 781.817 286.841 781.687 cv
286.951 781.7 286.969 781.622 287.074 781.629 cv
287.277 781.639 287.446 781.614 287.539 781.513 cv
287.558 781.513 287.577 781.513 287.597 781.513 cv
287.889 781.515 288.149 781.484 288.294 781.338 cv
288.371 781.338 288.449 781.338 288.526 781.338 cv
288.601 781.336 288.607 781.264 288.701 781.28 cv
288.817 781.28 288.933 781.28 289.049 781.28 cv
289.088 781.28 289.127 781.28 289.165 781.28 cv
289.201 781.2 289.389 781.272 289.398 781.165 cv
289.58 781.153 289.824 781.204 289.921 781.106 cv
290.005 781.075 290.221 781.174 290.211 781.048 cv
290.231 781.048 290.25 781.048 290.269 781.048 cv
290.721 780.996 291.154 780.926 291.547 780.816 cv
291.639 780.811 291.769 780.844 291.78 780.757 cv
291.799 780.757 291.819 780.757 291.838 780.757 cv
292.095 780.724 292.395 780.734 292.594 780.641 cv
292.613 780.641 292.632 780.641 292.652 780.641 cv
292.796 780.65 292.893 780.611 292.942 780.525 cv
292.962 780.525 292.981 780.525 293 780.525 cv
293.12 780.491 293.382 780.597 293.407 780.467 cv
293.426 780.467 293.446 780.467 293.465 780.467 cv
293.567 780.433 293.806 780.537 293.814 780.409 cv
294.301 780.322 294.625 780.303 294.976 780.177 cv
295.096 780.142 295.358 780.249 295.382 780.119 cv
295.402 780.119 295.421 780.119 295.441 780.119 cv
295.533 780.114 295.662 780.146 295.673 780.06 cv
295.867 779.998 295.871 780.079 296.08 780.002 cv
296.22 780.026 296.206 779.896 296.37 779.944 cv
296.389 779.944 296.409 779.944 296.428 779.944 cv
296.583 779.906 296.791 779.92 296.893 779.828 cv
296.985 779.823 297.115 779.856 297.126 779.77 cv
297.164 779.77 297.203 779.77 297.242 779.77 cv
297.326 779.738 297.542 779.838 297.532 779.712 cv
297.615 779.689 297.63 779.642 297.706 779.712 cv
297.935 779.708 298.143 779.684 298.287 779.596 cv
298.307 779.596 298.326 779.596 298.346 779.596 cv
298.602 779.562 298.903 779.572 299.101 779.479 cv
299.121 779.479 299.139 779.479 299.159 779.479 cv
299.437 779.486 299.685 779.463 299.856 779.363 cv
299.895 779.363 299.934 779.363 299.973 779.363 cv
299.996 779.457 300.314 779.361 300.379 779.305 cv
300.438 779.305 300.496 779.305 300.554 779.305 cv
300.646 779.3 300.775 779.333 300.786 779.247 cv
300.805 779.247 300.825 779.247 300.844 779.247 cv
300.946 779.214 301.186 779.317 301.193 779.189 cv
301.212 779.189 301.231 779.189 301.251 779.189 cv
301.409 779.153 301.712 779.263 301.774 779.131 cv
301.793 779.131 301.813 779.131 301.832 779.131 cv
302.053 779.119 302.245 779.079 302.413 779.014 cv
302.471 779.014 302.529 779.014 302.587 779.014 cv
302.79 778.985 303.026 778.988 303.168 778.898 cv
303.303 778.917 303.391 778.889 303.459 778.84 cv
303.551 778.835 303.68 778.868 303.691 778.782 cv
303.73 778.782 303.769 778.782 303.807 778.782 cv
303.766 778.876 304.081 778.876 304.04 778.782 cv
304.229 778.776 304.4 778.578 304.563 778.724 cv
304.899 778.732 305.211 778.714 305.434 778.608 cv
305.473 778.608 305.512 778.608 305.55 778.608 cv
305.57 778.608 305.589 778.608 305.608 778.608 cv
305.746 778.609 305.78 778.508 305.957 778.55 cv
305.996 778.55 306.035 778.55 306.073 778.55 cv
306.166 778.545 306.295 778.578 306.306 778.491 cv
306.445 778.45 306.52 778.464 306.771 778.433 cv
306.966 778.396 307.31 778.509 307.41 778.375 cv
307.445 778.372 307.479 778.367 307.468 778.318 cv
307.545 778.318 307.623 778.318 307.701 778.318 cv
307.836 778.318 307.971 778.318 308.107 778.318 cv
308.187 778.32 308.235 778.29 308.282 778.259 cv
308.36 778.389 308.718 778.313 308.746 778.201 cv
308.805 778.201 308.862 778.201 308.92 778.201 cv
309.036 778.298 308.994 778.196 309.153 778.201 cv
309.292 778.166 309.574 778.274 309.618 778.143 cv
309.695 778.143 309.773 778.143 309.85 778.143 cv
309.942 778.138 310.072 778.171 310.083 778.085 cv
310.102 778.085 310.121 778.085 310.141 778.085 cv
310.273 778.005 310.359 778.235 310.373 778.085 cv
310.412 778.085 310.451 778.085 310.489 778.085 cv
310.574 778.053 310.789 778.153 310.78 778.027 cv
310.838 778.027 310.896 778.027 310.954 778.027 cv
311.056 777.993 311.295 778.097 311.303 777.969 cv
311.322 777.969 311.341 777.969 311.361 777.969 cv
311.672 777.969 312.004 777.992 312.174 777.852 cv
312.213 777.852 312.252 777.852 312.29 777.852 cv
312.524 777.815 312.908 777.928 313.046 777.795 cv
313.065 777.795 313.085 777.795 313.104 777.795 cv
313.247 777.802 313.384 777.803 313.452 777.736 cv
313.472 777.736 313.491 777.736 313.511 777.736 cv
313.51 777.769 313.557 777.802 313.569 777.736 cv
313.726 777.7 314.03 777.81 314.092 777.678 cv
314.111 777.678 314.131 777.678 314.15 777.678 cv
314.428 777.685 314.675 777.662 314.847 777.562 cv
314.866 777.562 314.886 777.562 314.905 777.562 cv
315.11 777.655 315.448 777.627 315.602 777.504 cv
315.621 777.504 315.641 777.504 315.66 777.504 cv
315.932 777.466 316.356 777.58 316.532 777.446 cv
316.624 777.441 316.754 777.473 316.764 777.387 cv
316.784 777.387 316.803 777.387 316.823 777.387 cv
316.928 777.495 317.148 777.419 317.229 777.33 cv
317.249 777.33 317.268 777.33 317.287 777.33 cv
317.469 777.462 317.738 777.243 317.868 777.272 cv
317.948 777.274 317.996 777.244 318.042 777.213 cv
318.135 777.209 318.264 777.241 318.275 777.155 cv
318.362 777.145 318.489 777.176 318.507 777.097 cv
318.527 777.097 318.546 777.097 318.565 777.097 cv
318.768 777.068 319.004 777.071 319.147 776.981 cv
319.226 776.984 319.274 776.953 319.321 776.923 cv
319.368 776.892 319.415 776.862 319.495 776.865 cv
319.614 776.832 319.609 776.69 319.728 776.807 cv
319.882 776.806 320.069 776.839 320.076 776.69 cv
320.096 776.69 320.115 776.69 320.134 776.69 cv
320.203 776.604 320.354 776.6 320.425 776.516 cv
320.583 776.558 320.542 776.401 320.657 776.4 cv
321.017 776.295 321.175 775.988 321.412 775.761 cv
321.412 775.741 321.412 775.722 321.412 775.703 cv
321.432 775.703 321.451 775.703 321.471 775.703 cv
321.552 775.627 321.68 775.395 321.471 775.354 cv
321.451 775.354 321.432 775.354 321.412 775.354 cv
321.404 775.188 321.17 775.248 321.006 775.238 cv
320.986 775.238 320.967 775.238 320.948 775.238 cv
320.832 775.145 320.528 775.048 320.425 775.122 cv
320.303 775.03 320.119 775.001 319.902 775.005 cv
319.883 775.005 319.863 775.005 319.844 775.005 cv
319.805 775.005 319.766 775.005 319.728 775.005 cv
319.737 774.91 319.37 774.91 319.379 775.005 cv
319.36 775.005 319.34 775.005 319.321 775.005 cv
319.236 774.915 319.024 774.954 318.856 774.947 cv
318.837 774.947 318.817 774.947 318.798 774.947 cv
318.697 774.952 318.618 774.934 318.565 774.889 cv
318.389 774.907 318.358 775.069 318.101 775.005 cv
318.062 775.005 318.023 775.005 317.985 775.005 cv
318.011 774.911 317.668 774.911 317.694 775.005 cv
317.675 775.005 317.655 775.005 317.636 775.005 cv
317.592 774.909 317.157 774.909 317.113 775.005 cv
317.093 775.005 317.074 775.005 317.055 775.005 cv
316.939 775.005 316.823 775.005 316.706 775.005 cv
316.521 775.04 316.526 774.896 316.416 775.005 cv
316.377 775.005 316.338 775.005 316.3 775.005 cv
316.074 775.148 315.528 774.97 315.312 775.122 cv
315.292 775.122 315.273 775.122 315.254 775.122 cv
315.17 775.153 314.953 775.054 314.963 775.18 cv
314.905 775.18 314.847 775.18 314.789 775.18 cv
314.67 775.103 314.257 775.227 314.092 775.296 cv
314.015 775.221 313.878 775.221 313.801 775.296 cv
313.624 775.254 313.589 775.355 313.452 775.354 cv
313.368 775.386 313.152 775.286 313.162 775.412 cv
313.077 775.444 312.861 775.344 312.871 775.47 cv
312.704 775.558 312.69 775.469 312.465 775.528 cv
312.247 775.524 312.063 775.553 311.942 775.644 cv
311.922 775.644 311.903 775.644 311.884 775.644 cv
311.719 775.654 311.485 775.594 311.477 775.761 cv
311.458 775.761 311.438 775.761 311.419 775.761 cv
311.335 775.792 311.118 775.693 311.129 775.819 cv
311.051 775.819 310.973 775.819 310.896 775.819 cv
310.792 775.889 310.558 775.829 310.489 775.935 cv
310.165 776.082 309.933 776.117 309.676 776.226 cv
309.568 776.234 309.482 776.264 309.443 776.342 cv
309.424 776.342 309.405 776.342 309.385 776.342 cv
309.241 776.333 309.144 776.372 309.095 776.458 cv
308.818 776.452 308.661 776.566 308.456 776.632 cv
308.214 776.682 308.032 776.79 307.817 776.865 cv
307.61 776.987 307.299 777.006 307.061 777.097 cv
306.912 777.103 306.784 777.13 306.713 777.213 cv
306.633 777.211 306.585 777.241 306.538 777.272 cv
306.275 777.28 306.085 777.361 305.899 777.446 cv
305.764 777.427 305.676 777.455 305.608 777.504 cv
305.5 777.512 305.414 777.542 305.376 777.62 cv
305.357 777.62 305.337 777.62 305.318 777.62 cv
304.942 777.69 304.546 777.74 304.214 777.852 cv
304.195 777.852 304.175 777.852 304.156 777.852 cv
304.054 777.886 303.815 777.782 303.807 777.91 cv
303.788 777.91 303.769 777.91 303.749 777.91 cv
303.657 777.916 303.527 777.882 303.517 777.969 cv
303.434 777.964 303.352 777.959 303.343 778.027 cv
303.323 778.027 303.304 778.027 303.285 778.027 cv
303.226 778.027 303.168 778.027 303.11 778.027 cv
303.119 777.931 302.752 777.931 302.762 778.027 cv
302.685 778.101 302.547 778.101 302.471 778.027 cv
302.393 778.045 302.36 778.109 302.239 778.085 cv
302.094 778.079 302.059 777.976 301.948 778.085 cv
301.71 778.145 301.388 777.991 301.309 778.085 cv
301.29 778.085 301.27 778.085 301.251 778.085 cv
300.766 778.123 300.128 778.008 299.74 778.143 cv
299.563 778.185 299.528 778.083 299.391 778.085 cv
299.281 777.94 299.139 778.157 298.985 778.027 cv
298.946 778.027 298.907 778.027 298.869 778.027 cv
298.791 778.027 298.713 778.027 298.637 778.027 cv
298.617 778.027 298.598 778.027 298.578 778.027 cv
298.225 777.972 297.608 777.875 297.358 777.91 cv
297.338 777.91 297.319 777.91 297.3 777.91 cv
297.261 777.91 297.222 777.91 297.184 777.91 cv
297.193 777.815 296.826 777.815 296.835 777.91 cv
296.796 777.91 296.757 777.91 296.719 777.91 cv
296.568 777.763 296.3 777.992 296.022 777.91 cv
295.943 777.929 295.91 777.993 295.789 777.969 cv
295.669 778.003 295.407 777.897 295.382 778.027 cv
295.363 778.027 295.344 778.027 295.324 778.027 cv
295.16 778.037 294.926 777.977 294.918 778.143 cv
294.918 778.162 294.918 778.182 294.918 778.201 cv
294.802 778.201 294.685 778.201 294.569 778.201 cv
294.434 778.221 294.319 778.261 294.278 778.375 cv
294.203 778.456 294.026 778.433 293.872 778.433 cv
293.775 778.433 293.678 778.433 293.581 778.433 cv
293.474 778.347 293.305 778.322 293.117 778.318 cv
292.858 778.228 292.713 778.023 292.419 777.969 cv
292.373 777.84 292.216 777.823 292.129 777.736 cv
292.109 777.736 292.09 777.736 292.071 777.736 cv
292.047 777.663 291.996 777.618 291.896 777.62 cv
291.78 777.446 291.56 777.375 291.373 777.272 cv
291.354 777.272 291.335 777.272 291.315 777.272 cv
291.066 777.14 290.808 777.499 290.676 777.678 cv
290.676 777.698 290.676 777.717 290.676 777.736 cv
290.368 778.164 290.02 778.553 289.572 778.84 cv
289.553 778.84 289.534 778.84 289.514 778.84 cv
289.342 779.017 288.83 778.853 288.701 779.073 cv
288.621 779.07 288.573 779.1 288.526 779.131 cv
288.326 779.083 288.281 779.239 288.178 779.131 cv
287.85 779.215 287.397 778.975 287.306 779.189 cv
287.287 779.189 287.267 779.189 287.248 779.189 cv
287.156 779.194 287.026 779.161 287.016 779.247 cv
286.977 779.247 286.938 779.247 286.9 779.247 cv
286.764 779.247 286.628 779.247 286.493 779.247 cv
286.316 779.178 286.158 779.234 285.969 779.247 cv
285.89 779.133 285.614 779.215 285.505 779.131 cv
285.466 779.131 285.428 779.131 285.389 779.131 cv
285.292 779.131 285.195 779.131 285.098 779.131 cv
285.024 779.128 285.018 779.056 284.924 779.073 cv
284.853 778.859 284.574 779.214 284.517 779.014 cv
284.528 778.965 284.495 778.96 284.459 778.956 cv
284.469 778.831 284.253 778.93 284.169 778.898 cv
284.149 778.898 284.13 778.898 284.11 778.898 cv
284.12 778.772 283.904 778.872 283.82 778.84 cv
283.8 778.84 283.781 778.84 283.762 778.84 cv
283.761 778.667 283.488 778.766 283.413 778.666 cv
283.394 778.666 283.374 778.666 283.355 778.666 cv
283.213 778.557 283.071 778.447 282.832 778.433 cv
282.832 778.414 282.832 778.394 282.832 778.375 cv
282.72 778.17 282.851 778.057 282.949 777.91 cv
282.968 777.91 282.987 777.91 283.007 777.91 cv
283.142 777.91 283.278 777.91 283.413 777.91 cv
283.433 777.91 283.452 777.91 283.471 777.91 cv
283.549 778.027 283.729 778.04 283.878 778.085 cv
283.897 778.085 283.917 778.085 283.936 778.085 cv
283.974 778.163 284.06 778.193 284.169 778.201 cv
284.349 778.273 284.601 778.272 284.749 778.375 cv
284.808 778.375 284.866 778.375 284.924 778.375 cv
285.202 778.382 285.45 778.359 285.621 778.259 cv
285.701 778.262 285.749 778.232 285.795 778.201 cv
285.887 778.197 286.017 778.229 286.028 778.143 cv
286.047 778.143 286.067 778.143 286.086 778.143 cv
286.263 778.146 286.382 778.09 286.434 777.969 cv
286.536 777.973 286.615 777.956 286.667 777.91 cv
286.774 777.843 286.864 777.759 286.957 777.678 cv
286.993 777.675 287.026 777.67 287.016 777.62 cv
287.09 777.617 287.096 777.545 287.19 777.562 cv
287.334 777.454 287.518 777.387 287.597 777.213 cv
287.616 777.213 287.635 777.213 287.655 777.213 cv
287.861 777.012 288.12 776.865 288.294 776.632 cv
288.294 776.613 288.294 776.594 288.294 776.574 cv
288.478 776.468 288.514 776.213 288.701 776.109 cv
288.701 776.09 288.701 776.071 288.701 776.051 cv
288.938 775.94 289.067 775.721 289.223 775.528 cv
289.223 775.509 289.223 775.489 289.223 775.47 cv
289.302 775.432 289.332 775.346 289.34 775.238 cv
289.34 775.219 289.34 775.199 289.34 775.18 cv
289.511 775.041 289.705 774.925 289.746 774.657 cv
289.746 774.599 289.746 774.54 289.746 774.482 cv
289.792 774.469 289.814 774.434 289.805 774.366 cv
289.84 774.363 289.873 774.357 289.863 774.308 cv
289.998 774.25 290.05 774.108 290.037 773.902 cv
290.116 773.844 290.153 773.747 290.211 773.669 cv
290.245 773.547 290.355 773.503 290.327 773.321 cv
290.406 773.303 290.376 773.175 290.386 773.088 cv
290.386 773.068 290.386 773.049 290.386 773.03 cv
290.491 772.961 290.431 772.727 290.502 772.623 cv
290.503 772.508 290.66 772.549 290.618 772.391 cv
290.72 772.377 290.75 772.291 290.734 772.158 cv
290.716 771.928 290.868 771.866 290.85 771.635 cv
290.926 771.498 290.875 771.234 290.967 771.112 cv
291.066 770.94 291.031 770.634 291.083 770.415 cv
291.152 770.339 291.106 770.324 291.083 770.241 cv
291.209 770.251 291.109 770.035 291.141 769.951 cv
291.141 769.931 291.141 769.912 291.141 769.892 cv
291.22 769.874 291.189 769.747 291.199 769.66 cv
291.199 769.621 291.199 769.583 291.199 769.544 cv
291.327 769.536 291.224 769.297 291.257 769.195 cv
291.257 769.175 291.257 769.156 291.257 769.137 cv
291.224 769.035 291.327 768.796 291.199 768.788 cv
291.199 768.769 291.199 768.749 291.199 768.73 cv
291.199 768.672 291.199 768.614 291.199 768.556 cv
291.295 768.53 291.295 768.117 291.199 768.091 cv
291.199 768.072 291.199 768.053 291.199 768.033 cv
291.295 767.914 291.295 767.397 291.199 767.278 cv
291.199 767.258 291.199 767.239 291.199 767.22 cv
291.217 767.084 291.313 766.98 291.199 766.871 cv
291.199 766.832 291.199 766.794 291.199 766.755 cv
291.199 766.716 291.199 766.677 291.199 766.639 cv
291.164 766.5 291.272 766.217 291.141 766.174 cv
291.141 766.154 291.141 766.135 291.141 766.115 cv
291.108 766.013 291.211 765.774 291.083 765.767 cv
291.083 765.748 291.083 765.728 291.083 765.709 cv
291.075 765.485 291.128 765.199 290.967 765.128 cv
290.967 765.089 290.967 765.05 290.967 765.012 cv
291.159 764.924 290.846 764.87 290.909 764.721 cv
290.909 764.702 290.909 764.682 290.909 764.663 cv
290.886 764.511 290.879 764.344 290.792 764.256 cv
290.792 764.237 290.792 764.217 290.792 764.198 cv
290.787 764.106 290.82 763.977 290.734 763.966 cv
290.734 763.946 290.734 763.927 290.734 763.908 cv
290.729 763.816 290.762 763.686 290.676 763.675 cv
290.686 763.608 290.663 763.572 290.618 763.559 cv
290.618 763.54 290.618 763.52 290.618 763.501 cv
290.586 763.417 290.686 763.201 290.56 763.21 cv
290.557 763.136 290.485 763.13 290.502 763.036 cv
290.483 762.842 290.442 762.67 290.327 762.571 cv
290.309 762.493 290.245 762.46 290.269 762.339 cv
290.284 762.092 290.118 762.026 290.153 761.758 cv
290.051 761.638 289.973 761.707 289.921 761.642 cv
289.954 761.606 290.057 761.366 289.921 761.351 cv
289.921 761.332 289.921 761.312 289.921 761.293 cv
289.837 761.144 289.824 760.925 289.688 760.828 cv
289.688 760.809 289.688 760.789 289.688 760.77 cv
289.663 760.622 289.607 760.503 289.514 760.422 cv
289.514 760.402 289.514 760.383 289.514 760.363 cv
289.412 760.214 289.43 759.944 289.282 759.84 cv
289.291 759.696 289.191 759.661 289.165 759.55 cv
289.159 759.402 289.059 759.347 288.991 759.259 cv
288.991 759.24 288.991 759.221 288.991 759.201 cv
288.856 758.716 288.613 758.34 288.352 757.981 cv
288.352 757.962 288.352 757.942 288.352 757.923 cv
288.322 757.837 288.266 757.777 288.236 757.691 cv
288.116 757.481 288.055 757.213 287.829 757.11 cv
287.829 757.09 287.829 757.071 287.829 757.052 cv
287.832 756.952 287.784 756.903 287.713 756.877 cv
287.713 756.858 287.713 756.839 287.713 756.819 cv
287.587 756.674 287.53 756.46 287.364 756.354 cv
287.342 756.164 287.194 756.098 287.132 755.947 cv
287.111 755.755 286.958 755.695 286.841 755.599 cv
286.828 755.554 286.84 755.484 286.783 755.483 cv
286.783 755.463 286.783 755.444 286.783 755.425 cv
286.252 754.775 285.817 754.028 285.156 753.507 cv
285.137 753.507 285.118 753.507 285.098 753.507 cv
285.091 753.359 285.014 753.282 284.866 753.275 cv
284.866 753.256 284.866 753.236 284.866 753.217 cv
284.735 753.037 284.58 752.883 284.401 752.752 cv
284.382 752.752 284.362 752.752 284.343 752.752 cv
284.29 752.65 284.213 752.572 284.11 752.52 cv
284.098 752.454 284.046 752.429 283.994 752.403 cv
283.991 752.368 283.986 752.335 283.936 752.345 cv
283.864 752.224 283.767 752.127 283.646 752.055 cv
283.607 752.055 283.568 752.055 283.529 752.055 cv
283.453 751.86 283.279 751.762 283.123 751.648 cv
282.972 751.585 282.907 751.438 282.716 751.415 cv
282.464 751.222 282.199 751.042 281.902 750.893 cv
281.883 750.893 281.864 750.893 281.844 750.893 cv
281.757 750.825 281.702 750.725 281.554 750.718 cv
281.426 750.517 281.095 750.519 280.915 750.37 cv
280.847 750.321 280.759 750.293 280.624 750.312 cv
280.504 750.18 280.302 750.13 280.101 750.079 cv
280.082 750.079 280.063 750.079 280.043 750.079 cv
280.025 750 279.898 750.031 279.811 750.021 cv
279.792 750.021 279.772 750.021 279.753 750.021 cv
279.651 749.929 279.443 749.943 279.288 749.905 cv
279.249 749.905 279.21 749.905 279.172 749.905 cv
278.978 749.789 278.675 749.781 278.358 749.789 cv
278.3 749.789 278.242 749.789 278.184 749.789 cv
277.967 749.671 277.422 749.722 277.196 749.789 cv
277.138 749.789 277.08 749.789 277.022 749.789 cv
276.794 749.851 276.453 749.801 276.266 749.905 cv
276.247 749.905 276.228 749.905 276.208 749.905 cv
276.028 749.899 275.886 749.931 275.802 750.021 cv
275.763 750.021 275.724 750.021 275.686 750.021 cv
275.601 750.053 275.385 749.953 275.395 750.079 cv
275.376 750.079 275.356 750.079 275.337 750.079 cv
275.055 750.088 274.868 750.191 274.698 750.312 cv
274.678 750.312 274.659 750.312 274.64 750.312 cv
274.437 750.4 274.165 750.418 274.059 750.602 cv
273.948 750.627 273.913 750.727 273.768 750.718 cv
273.652 750.777 273.52 750.819 273.478 750.951 cv
273.458 750.951 273.439 750.951 273.42 750.951 cv
272.904 751.268 272.573 751.77 272.199 752.229 cv
272.198 752.402 272.048 752.426 272.025 752.577 cv
272.025 752.597 272.025 752.616 272.025 752.636 cv
271.813 752.792 271.724 753.071 271.618 753.333 cv
271.618 753.352 271.618 753.372 271.618 753.391 cv
271.498 753.504 271.508 753.745 271.444 753.914 cv
271.444 753.933 271.444 753.953 271.444 753.972 cv
271.416 754.122 271.248 754.43 271.328 754.495 cv
271.328 754.572 271.328 754.65 271.328 754.727 cv
271.233 754.686 271.233 755.001 271.328 754.96 cv
271.328 755.018 271.328 755.076 271.328 755.134 cv
271.328 755.173 271.328 755.212 271.328 755.25 cv
271.233 755.241 271.233 755.609 271.328 755.599 cv
271.328 755.618 271.328 755.638 271.328 755.657 cv
271.318 756.054 271.376 756.383 271.502 756.645 cv
271.502 756.722 271.502 756.8 271.502 756.877 cv
271.502 756.897 271.502 756.916 271.502 756.935 cv
271.617 756.976 271.488 757.26 271.618 757.284 cv
271.569 757.527 271.731 757.558 271.734 757.749 cv
271.741 757.897 271.767 758.026 271.851 758.098 cv
271.835 758.23 271.865 758.316 271.967 758.33 cv
271.967 758.349 271.967 758.368 271.967 758.388 cv
271.972 758.48 271.939 758.61 272.025 758.62 cv
272.025 758.659 272.025 758.698 272.025 758.737 cv
271.915 758.742 272.061 758.963 272.141 758.969 cv
272.141 758.988 272.141 759.008 272.141 759.027 cv
272.149 759.135 272.18 759.221 272.257 759.259 cv
272.23 759.442 272.34 759.486 272.374 759.608 cv
272.362 759.775 272.389 759.903 272.49 759.957 cv
272.49 759.976 272.49 759.995 272.49 760.015 cv
272.553 760.184 272.544 760.425 272.664 760.538 cv
272.672 760.646 272.702 760.732 272.78 760.77 cv
272.784 760.805 272.789 760.839 272.839 760.828 cv
272.864 761.015 272.95 761.143 272.955 761.351 cv
272.963 761.46 272.993 761.545 273.071 761.584 cv
273.071 761.603 273.071 761.622 273.071 761.642 cv
273.097 761.79 273.152 761.909 273.245 761.99 cv
273.245 762.01 273.245 762.029 273.245 762.048 cv
273.25 762.14 273.217 762.27 273.303 762.281 cv
273.303 762.3 273.303 762.32 273.303 762.339 cv
273.452 762.694 273.559 763.09 273.768 763.385 cv
273.777 763.453 273.758 763.55 273.826 763.559 cv
273.826 763.578 273.826 763.598 273.826 763.617 cv
273.834 763.725 273.864 763.811 273.942 763.85 cv
273.942 763.869 273.942 763.888 273.942 763.908 cv
273.951 764.016 273.981 764.102 274.059 764.14 cv
274.151 764.396 274.271 764.625 274.349 764.895 cv
274.395 765.392 274.654 765.675 274.814 766.058 cv
274.814 766.077 274.814 766.096 274.814 766.115 cv
274.792 766.312 274.915 766.363 274.988 766.464 cv
274.997 766.533 274.978 766.629 275.046 766.639 cv
275.046 766.658 275.046 766.677 275.046 766.697 cv
275.078 766.8 275.076 766.938 275.163 766.987 cv
275.163 767.007 275.163 767.026 275.163 767.045 cv
275.177 767.341 275.374 767.454 275.453 767.684 cv
275.466 767.923 275.576 768.065 275.686 768.207 cv
275.686 768.227 275.686 768.246 275.686 768.265 cv
275.694 768.374 275.724 768.46 275.802 768.498 cv
275.802 768.517 275.802 768.537 275.802 768.556 cv
275.861 768.768 275.882 769.018 276.034 769.137 cv
276.043 769.205 276.024 769.302 276.092 769.311 cv
276.088 769.412 276.105 769.492 276.15 769.544 cv
276.231 769.618 276.176 769.828 276.325 769.834 cv
276.325 769.854 276.325 769.873 276.325 769.892 cv
276.333 770.001 276.363 770.087 276.441 770.125 cv
276.567 770.367 276.614 770.687 276.732 770.938 cv
276.709 771.134 276.832 771.186 276.906 771.287 cv
276.915 771.355 276.896 771.452 276.964 771.461 cv
276.964 771.481 276.964 771.5 276.964 771.519 cv
276.955 771.664 276.994 771.76 277.08 771.81 cv
277.08 771.829 277.08 771.848 277.08 771.868 cv
277.234 772.391 277.417 772.887 277.661 773.321 cv
277.659 773.4 277.688 773.448 277.719 773.494 cv
277.707 773.662 277.734 773.79 277.835 773.844 cv
277.835 773.863 277.835 773.882 277.835 773.902 cv
277.828 774.102 277.949 774.175 278.01 774.308 cv
278.042 774.412 278.039 774.549 278.126 774.599 cv
278.126 774.618 278.126 774.637 278.126 774.657 cv
278.152 774.805 278.207 774.924 278.3 775.005 cv
278.303 775.041 278.309 775.074 278.358 775.063 cv
278.358 775.122 278.358 775.18 278.358 775.238 cv
278.366 775.346 278.396 775.432 278.474 775.47 cv
278.523 775.538 278.551 775.626 278.533 775.761 cv
278.587 775.939 278.713 776.045 278.765 776.226 cv
278.797 776.329 278.795 776.467 278.881 776.516 cv
278.881 776.535 278.881 776.555 278.881 776.574 cv
278.964 776.878 279.106 777.124 279.23 777.387 cv
279.213 777.52 279.244 777.606 279.346 777.62 cv
279.349 777.655 279.355 777.689 279.404 777.678 cv
279.356 777.842 279.486 777.829 279.462 777.969 cv
279.534 778.264 279.656 778.511 279.811 778.724 cv
279.811 778.743 279.811 778.763 279.811 778.782 cv
279.837 778.93 279.892 779.049 279.985 779.131 cv
279.981 779.232 279.998 779.311 280.043 779.363 cv
280.216 779.79 280.398 780.209 280.566 780.641 cv
280.569 780.716 280.641 780.722 280.624 780.816 cv
280.669 780.984 280.716 781.15 280.857 781.223 cv
280.857 781.242 280.857 781.261 280.857 781.28 cv
280.854 781.574 280.879 781.839 280.973 782.036 cv
280.973 782.055 280.973 782.075 280.973 782.094 cv
280.906 782.298 280.883 782.547 280.508 782.443 cv
280.291 782.291 280.197 782.017 280.101 781.745 cv
279.971 781.585 279.907 781.359 279.753 781.223 cv
279.753 781.203 279.753 781.184 279.753 781.165 cv
279.667 780.979 279.674 780.701 279.462 780.641 cv
279.457 780.483 279.559 780.524 279.462 780.409 cv
279.275 780.287 279.291 779.961 279.172 779.77 cv
279.172 779.751 279.172 779.731 279.172 779.712 cv
279.113 779.634 279.117 779.495 278.997 779.479 cv
278.997 779.46 278.997 779.441 278.997 779.421 cv
278.993 779.329 279.025 779.2 278.939 779.189 cv
278.939 779.17 278.939 779.15 278.939 779.131 cv
278.871 779.044 278.867 778.893 278.765 778.84 cv
278.721 778.73 278.592 778.8 278.707 778.666 cv
278.641 778.519 278.61 778.336 278.474 778.259 cv
278.49 778.089 278.343 778.081 278.358 777.91 cv
278.248 777.633 278.19 777.305 278.01 777.097 cv
278.01 777.078 278.01 777.058 278.01 777.039 cv
277.931 777.001 277.901 776.915 277.893 776.807 cv
277.781 776.667 277.736 776.46 277.661 776.284 cv
277.663 776.204 277.634 776.156 277.603 776.109 cv
277.556 775.866 277.41 775.722 277.312 775.528 cv
277.312 775.509 277.312 775.489 277.312 775.47 cv
277.174 775.338 277.176 775.064 277.022 774.947 cv
276.992 774.861 276.936 774.801 276.906 774.715 cv
276.906 774.657 276.906 774.599 276.906 774.54 cv
276.577 774.153 276.438 773.575 276.15 773.146 cv
276.15 773.127 276.15 773.107 276.15 773.088 cv
276.142 772.98 276.112 772.894 276.034 772.856 cv
276.034 772.836 276.034 772.817 276.034 772.798 cv
275.876 772.549 275.721 772.297 275.569 772.042 cv
275.578 771.898 275.478 771.862 275.453 771.752 cv
275.327 771.569 275.295 771.29 275.104 771.17 cv
275.104 771.151 275.104 771.132 275.104 771.112 cv
274.975 770.951 274.953 770.682 274.756 770.589 cv
274.747 770.521 274.766 770.425 274.698 770.415 cv
274.698 770.396 274.698 770.377 274.698 770.357 cv
274.63 770.251 274.546 770.16 274.465 770.067 cv
274.465 770.047 274.465 770.028 274.465 770.009 cv
274.441 769.801 274.319 769.689 274.175 769.602 cv
274.175 769.583 274.175 769.563 274.175 769.544 cv
274.13 769.336 274.025 769.19 273.884 769.079 cv
273.865 769.079 273.846 769.079 273.826 769.079 cv
273.838 768.912 273.811 768.784 273.71 768.73 cv
273.76 768.545 273.618 768.55 273.594 768.44 cv
273.541 768.337 273.464 768.26 273.361 768.207 cv
273.364 768.03 273.309 767.912 273.187 767.859 cv
273.107 767.823 273.178 767.635 273.071 767.626 cv
273.082 767.577 273.048 767.572 273.013 767.568 cv
273.013 767.53 273.013 767.491 273.013 767.452 cv
272.948 767.44 272.922 767.387 272.897 767.336 cv
272.902 767.078 272.579 767.149 272.606 766.871 cv
272.507 766.757 272.471 766.581 272.316 766.522 cv
272.316 766.503 272.316 766.484 272.316 766.464 cv
271.893 765.938 271.548 765.334 271.096 764.837 cv
271.096 764.818 271.096 764.799 271.096 764.779 cv
271.053 764.647 270.92 764.605 270.805 764.547 cv
270.805 764.527 270.805 764.508 270.805 764.489 cv
270.68 764.361 270.624 764.166 270.456 764.082 cv
270.456 764.063 270.456 764.043 270.456 764.024 cv
270.365 763.883 270.248 763.767 270.108 763.675 cv
270.088 763.675 270.069 763.675 270.049 763.675 cv
269.977 763.554 269.88 763.457 269.759 763.385 cv
269.74 763.385 269.72 763.385 269.701 763.385 cv
269.633 763.375 269.638 763.293 269.643 763.21 cv
269.623 763.21 269.604 763.21 269.585 763.21 cv
269.512 763.089 269.416 762.992 269.294 762.92 cv
269.275 762.92 269.255 762.92 269.236 762.92 cv
269.142 762.687 268.588 762.378 268.423 762.746 cv
268.423 762.765 268.423 762.784 268.423 762.804 cv
268.423 762.862 268.376 762.873 268.365 762.92 cv
268.286 762.938 268.316 763.066 268.306 763.152 cv
268.303 763.227 268.232 763.233 268.248 763.327 cv
268.178 763.621 268.218 763.743 268.248 764.024 cv
268.202 764.147 268.168 764.403 268.248 764.547 cv
268.24 764.787 268.264 764.996 268.365 765.128 cv
268.365 765.147 268.365 765.167 268.365 765.186 cv
268.372 765.392 268.46 765.517 268.539 765.651 cv
268.542 765.725 268.613 765.731 268.597 765.825 cv
268.575 766.021 268.698 766.073 268.771 766.174 cv
268.771 766.193 268.771 766.212 268.771 766.232 cv
268.772 766.444 268.886 766.543 269.004 766.639 cv
269.004 766.658 269.004 766.677 269.004 766.697 cv
269.033 766.842 269.114 766.935 269.178 767.045 cv
269.165 767.272 269.303 767.347 269.352 767.51 cv
269.411 767.587 269.407 767.726 269.526 767.742 cv
269.559 767.846 269.556 767.984 269.643 768.033 cv
269.655 768.098 269.707 768.124 269.759 768.15 cv
269.759 768.188 269.759 768.227 269.759 768.265 cv
269.767 768.374 269.797 768.46 269.875 768.498 cv
269.879 768.533 269.884 768.566 269.933 768.556 cv
269.933 768.576 269.933 768.595 269.933 768.614 cv
269.963 768.759 270.043 768.853 270.108 768.963 cv
270.243 769.195 270.336 769.471 270.456 769.718 cv
270.463 769.866 270.563 769.921 270.631 770.009 cv
270.628 770.089 270.658 770.136 270.689 770.183 cv
270.72 770.422 270.837 770.577 270.979 770.706 cv
270.979 770.725 270.979 770.744 270.979 770.764 cv
271.005 770.912 271.061 771.031 271.154 771.112 cv
271.154 771.325 271.319 771.373 271.386 771.519 cv
271.399 771.758 271.509 771.9 271.618 772.042 cv
271.618 772.061 271.618 772.081 271.618 772.1 cv
271.74 772.192 271.721 772.424 271.851 772.507 cv
271.851 772.526 271.851 772.545 271.851 772.565 cv
272.019 772.727 271.99 773.085 272.199 773.204 cv
272.272 773.345 272.343 773.486 272.374 773.669 cv
272.516 773.721 272.478 773.952 272.606 774.017 cv
272.688 774.13 272.76 774.251 272.78 774.425 cv
272.847 774.629 272.908 774.839 273.071 774.947 cv
273.086 775.126 273.197 775.209 273.245 775.354 cv
273.203 775.513 273.361 775.471 273.361 775.586 cv
273.387 775.735 273.443 775.853 273.536 775.935 cv
273.536 775.954 273.536 775.974 273.536 775.993 cv
273.544 776.101 273.574 776.187 273.652 776.226 cv
273.652 776.245 273.652 776.264 273.652 776.284 cv
273.71 776.361 273.707 776.5 273.826 776.516 cv
273.764 776.733 273.971 776.682 273.942 776.865 cv
274.023 776.959 273.992 777.164 274.117 777.213 cv
274.12 777.288 274.191 777.294 274.175 777.387 cv
274.347 777.661 274.428 778.025 274.64 778.259 cv
274.64 778.279 274.64 778.298 274.64 778.318 cv
274.635 778.535 274.733 778.65 274.872 778.724 cv
274.885 778.769 274.921 778.792 274.988 778.782 cv
275.083 778.808 275.083 778.465 274.988 778.491 cv
274.988 778.472 274.988 778.453 274.988 778.433 cv
274.955 778.331 275.059 778.092 274.93 778.085 cv
274.93 778.027 274.93 777.969 274.93 777.91 cv
274.934 777.693 274.906 777.509 274.814 777.387 cv
274.759 777.075 274.766 776.699 274.64 776.458 cv
274.64 776.438 274.64 776.419 274.64 776.4 cv
274.603 776.107 274.568 775.813 274.465 775.586 cv
274.469 775.485 274.452 775.406 274.407 775.354 cv
274.402 775.262 274.435 775.132 274.349 775.122 cv
274.349 775.102 274.349 775.083 274.349 775.063 cv
274.335 774.691 274.221 774.417 274.117 774.134 cv
274.077 773.918 274.089 773.982 274.059 773.727 cv
274.061 773.647 274.031 773.6 274.001 773.553 cv
273.996 773.461 274.028 773.331 273.942 773.321 cv
273.942 773.282 273.942 773.243 273.942 773.204 cv
273.834 772.983 273.915 772.573 273.71 772.449 cv
273.71 772.43 273.71 772.41 273.71 772.391 cv
273.753 772.154 273.523 772.191 273.594 771.926 cv
273.602 771.782 273.605 771.644 273.478 771.635 cv
273.478 771.616 273.478 771.596 273.478 771.577 cv
273.399 771.346 273.419 771.016 273.245 770.88 cv
273.235 770.793 273.266 770.665 273.187 770.647 cv
273.172 770.469 273.061 770.387 273.013 770.241 cv
272.979 769.945 272.84 769.755 272.722 769.544 cv
272.709 769.499 272.721 769.429 272.664 769.428 cv
272.698 769.239 272.624 769.157 272.606 769.021 cv
272.578 768.746 272.678 768.913 272.78 768.963 cv
272.78 768.982 272.78 769.001 272.78 769.021 cv
272.86 769.154 273.02 769.208 273.129 769.311 cv
273.129 769.331 273.129 769.35 273.129 769.369 cv
273.137 769.478 273.167 769.564 273.245 769.602 cv
273.245 769.621 273.245 769.64 273.245 769.66 cv
273.351 769.922 273.428 770.213 273.594 770.415 cv
273.696 770.778 273.808 771.131 273.942 771.461 cv
273.942 771.481 273.942 771.5 273.942 771.519 cv
273.947 771.611 273.915 771.741 274.001 771.752 cv
273.996 771.834 273.991 771.916 274.059 771.926 cv
274.077 772.197 274.172 772.394 274.291 772.565 cv
274.387 772.682 274.286 772.996 274.407 773.088 cv
274.425 773.166 274.49 773.199 274.465 773.321 cv
274.495 773.678 274.553 774.008 274.64 774.308 cv
274.64 774.328 274.64 774.347 274.64 774.366 cv
274.672 774.469 274.67 774.608 274.756 774.657 cv
274.756 774.676 274.756 774.696 274.756 774.715 cv
274.793 774.91 274.797 775.139 274.93 775.238 cv
274.93 775.257 274.93 775.277 274.93 775.296 cv
274.963 775.398 274.86 775.637 274.988 775.644 cv
274.988 775.664 274.988 775.683 274.988 775.703 cv
274.993 775.794 274.96 775.924 275.046 775.935 cv
275.046 775.954 275.046 775.974 275.046 775.993 cv
275.24 776.226 275.068 776.824 275.337 776.981 cv
275.337 777.019 275.337 777.058 275.337 777.097 cv
275.337 777.116 275.337 777.136 275.337 777.155 cv
275.206 777.272 275.392 777.562 275.453 777.678 cv
275.453 777.756 275.453 777.833 275.453 777.91 cv
275.53 778.086 275.459 778.408 275.569 778.55 cv
275.569 778.569 275.569 778.588 275.569 778.608 cv
275.588 778.686 275.652 778.719 275.628 778.84 cv
275.628 778.879 275.628 778.917 275.628 778.956 cv
275.632 779.048 275.599 779.178 275.686 779.189 cv
275.686 779.208 275.686 779.228 275.686 779.247 cv
275.756 779.351 275.696 779.585 275.802 779.654 cv
275.807 779.745 275.774 779.875 275.86 779.886 cv
275.868 779.994 275.898 780.08 275.976 780.119 cv
275.976 780.157 275.976 780.196 275.976 780.235 cv
276.073 780.351 275.971 780.666 276.092 780.757 cv
276.092 780.777 276.092 780.796 276.092 780.816 cv
276.177 780.925 276.094 781.201 276.208 781.28 cv
276.24 781.365 276.14 781.581 276.266 781.571 cv
276.264 781.651 276.294 781.699 276.325 781.745 cv
276.358 781.847 276.254 782.087 276.383 782.094 cv
276.383 782.113 276.383 782.133 276.383 782.152 cv
276.381 782.348 276.463 782.46 276.557 782.559 cv
276.557 782.578 276.557 782.598 276.557 782.617 cv
276.557 782.694 276.557 782.772 276.557 782.849 cv
276.557 782.869 276.557 782.888 276.557 782.907 cv
276.441 782.966 276.465 783.164 276.266 783.14 cv
275.827 782.999 275.866 782.378 275.686 781.978 cv
275.571 781.938 275.7 781.653 275.569 781.629 cv
275.569 781.61 275.569 781.59 275.569 781.571 cv
275.501 781.484 275.497 781.333 275.395 781.28 cv
275.395 781.261 275.395 781.242 275.395 781.223 cv
275.342 781.12 275.375 780.932 275.279 780.874 cv
275.283 780.772 275.266 780.693 275.221 780.641 cv
275.242 780.388 275.115 780.282 274.988 780.177 cv
274.988 780.157 274.988 780.138 274.988 780.119 cv
274.811 779.87 274.807 779.447 274.581 779.247 cv
274.581 779.228 274.581 779.208 274.581 779.189 cv
274.501 779.153 274.573 778.965 274.465 778.956 cv
274.468 778.876 274.438 778.829 274.407 778.782 cv
274.407 778.743 274.407 778.705 274.407 778.666 cv
274.342 778.654 274.317 778.601 274.291 778.55 cv
274.214 778.279 274.043 778.101 273.942 777.852 cv
273.942 777.795 273.942 777.736 273.942 777.678 cv
273.859 777.664 273.844 777.582 273.768 777.562 cv
273.768 777.504 273.768 777.446 273.768 777.387 cv
273.729 777.233 273.677 777.092 273.594 776.981 cv
273.594 776.961 273.594 776.942 273.594 776.923 cv
273.535 776.846 273.498 776.748 273.42 776.69 cv
273.416 776.616 273.345 776.61 273.361 776.516 cv
273.324 776.185 273.107 776.035 273.013 775.761 cv
272.988 775.65 272.887 775.615 272.897 775.47 cv
272.852 775.302 272.805 775.136 272.664 775.063 cv
272.664 775.044 272.664 775.025 272.664 775.005 cv
272.597 774.878 272.653 774.63 272.49 774.599 cv
272.49 774.579 272.49 774.56 272.49 774.54 cv
272.471 774.405 272.43 774.29 272.316 774.25 cv
272.316 774.231 272.316 774.211 272.316 774.192 cv
272.257 774.115 272.26 773.976 272.141 773.96 cv
272.141 773.94 272.141 773.921 272.141 773.902 cv
272.128 773.663 272.018 773.521 271.909 773.379 cv
271.909 773.359 271.909 773.34 271.909 773.321 cv
271.698 772.989 271.59 772.555 271.328 772.275 cv
271.328 772.255 271.328 772.236 271.328 772.216 cv
271.253 772.078 271.179 771.939 271.096 771.81 cv
271.096 771.79 271.096 771.771 271.096 771.752 cv
271.011 771.545 270.967 771.299 270.805 771.17 cv
270.805 771.112 270.758 771.101 270.747 771.055 cv
270.719 770.849 270.6 770.736 270.514 770.589 cv
270.409 770.25 270.24 769.974 270.049 769.718 cv
270.052 769.638 270.022 769.59 269.991 769.544 cv
269.888 769.24 269.753 768.969 269.585 768.73 cv
269.585 768.711 269.585 768.691 269.585 768.672 cv
269.499 768.545 269.471 768.359 269.352 768.265 cv
269.352 768.246 269.352 768.227 269.352 768.207 cv
269.316 768.05 269.237 767.935 269.12 767.859 cv
269.129 767.714 269.029 767.679 269.004 767.568 cv
268.996 767.46 268.966 767.374 268.887 767.336 cv
268.879 767.228 268.849 767.142 268.771 767.103 cv
268.771 767.084 268.771 767.065 268.771 767.045 cv
268.691 767.01 268.762 766.822 268.655 766.813 cv
268.655 766.794 268.655 766.774 268.655 766.755 cv
268.434 766.453 268.37 765.994 268.132 765.709 cv
268.132 765.689 268.132 765.67 268.132 765.651 cv
268.071 765.48 268.052 765.266 267.958 765.128 cv
267.958 765.109 267.958 765.089 267.958 765.07 cv
267.953 764.978 267.986 764.848 267.9 764.837 cv
267.891 764.769 267.91 764.672 267.842 764.663 cv
267.842 764.644 267.842 764.624 267.842 764.605 cv
267.847 764.446 267.745 764.488 267.842 764.373 cv
267.836 764.214 267.939 764.256 267.842 764.14 cv
267.842 763.888 267.842 763.637 267.842 763.385 cv
267.842 763.307 267.842 763.23 267.842 763.152 cv
267.92 763.134 267.89 763.007 267.9 762.92 cv
267.946 762.811 267.997 762.707 268.016 762.571 cv
268.112 762.415 268.198 762.25 268.306 762.107 cv
268.381 762.103 268.387 762.032 268.481 762.048 cv
268.635 762.049 268.813 762.026 268.887 762.107 cv
268.967 762.104 269.015 762.134 269.062 762.165 cv
269.119 762.243 269.217 762.281 269.294 762.339 cv
269.314 762.339 269.333 762.339 269.352 762.339 cv
269.403 762.424 269.439 762.523 269.585 762.513 cv
269.823 762.837 270.172 763.049 270.456 763.327 cv
270.46 763.362 270.465 763.395 270.514 763.385 cv
270.901 763.889 271.331 764.35 271.734 764.837 cv
271.734 764.857 271.734 764.876 271.734 764.895 cv
271.868 764.956 271.896 765.121 272.025 765.186 cv
272.025 765.205 272.025 765.225 272.025 765.244 cv
272.155 765.423 272.26 765.629 272.432 765.767 cv
272.432 765.786 272.432 765.806 272.432 765.825 cv
272.49 765.902 272.487 766.041 272.606 766.058 cv
272.62 766.14 272.702 766.155 272.722 766.232 cv
272.86 766.462 273.003 766.687 273.187 766.871 cv
273.19 766.906 273.196 766.94 273.245 766.929 cv
273.245 766.968 273.245 767.007 273.245 767.045 cv
273.368 767.291 273.505 767.522 273.71 767.684 cv
273.713 767.759 273.785 767.765 273.768 767.859 cv
273.827 767.936 273.823 768.075 273.942 768.091 cv
273.94 768.171 273.97 768.219 274.001 768.265 cv
274.059 768.343 274.096 768.441 274.175 768.498 cv
274.175 768.517 274.175 768.537 274.175 768.556 cv
274.233 768.633 274.23 768.772 274.349 768.788 cv
274.347 768.868 274.377 768.916 274.407 768.963 cv
274.538 769.18 274.646 769.421 274.814 769.602 cv
274.814 769.621 274.814 769.64 274.814 769.66 cv
274.898 769.769 274.9 769.962 275.046 770.009 cv
275.047 770.124 275.205 770.083 275.163 770.241 cv
275.279 770.493 275.359 770.78 275.569 770.938 cv
275.606 771.154 275.733 771.278 275.802 771.461 cv
275.873 771.758 276.049 771.95 276.208 772.158 cv
276.2 772.303 276.3 772.338 276.325 772.449 cv
276.412 772.633 276.512 772.804 276.615 772.972 cv
276.615 772.991 276.615 773.01 276.615 773.03 cv
276.701 773.157 276.728 773.343 276.848 773.437 cv
276.848 773.456 276.848 773.476 276.848 773.494 cv
276.921 773.692 277.054 773.831 277.138 774.017 cv
277.158 774.017 277.177 774.017 277.196 774.017 cv
277.196 774.037 277.196 774.056 277.196 774.076 cv
277.073 774.094 277.279 774.256 277.312 774.308 cv
277.312 774.328 277.312 774.347 277.312 774.366 cv
277.402 774.625 277.545 774.831 277.661 775.063 cv
277.65 775.113 277.684 775.118 277.719 775.122 cv
277.865 775.218 277.739 775.553 277.952 775.703 cv
277.975 775.775 278.026 775.821 278.126 775.819 cv
278.126 775.761 278.126 775.703 278.126 775.644 cv
278.025 775.609 278.13 775.369 278.01 775.354 cv
278.01 775.335 278.01 775.315 278.01 775.296 cv
277.8 775.133 277.874 774.754 277.661 774.482 cv
277.661 774.463 277.661 774.444 277.661 774.425 cv
277.677 774.292 277.647 774.206 277.545 774.192 cv
277.545 774.173 277.545 774.153 277.545 774.134 cv
277.49 773.964 277.458 773.918 277.429 773.844 cv
277.429 773.824 277.429 773.805 277.429 773.785 cv
277.338 773.392 277.219 773.026 277.022 772.739 cv
277.026 772.638 277.009 772.559 276.964 772.507 cv
276.958 772.358 276.931 772.23 276.848 772.158 cv
276.844 772.123 276.839 772.09 276.789 772.1 cv
276.789 772.081 276.789 772.061 276.789 772.042 cv
276.789 772.023 276.789 772.004 276.789 771.984 cv
276.798 771.84 276.8 771.702 276.673 771.693 cv
276.678 771.592 276.66 771.513 276.615 771.461 cv
276.522 771.361 276.587 771.102 276.441 771.055 cv
276.45 770.91 276.35 770.874 276.325 770.764 cv
276.333 770.62 276.336 770.482 276.208 770.473 cv
276.208 770.454 276.208 770.435 276.208 770.415 cv
276.093 770.337 276.227 770.01 276.034 770.009 cv
276.034 769.989 276.034 769.97 276.034 769.951 cv
276.026 769.842 275.996 769.756 275.918 769.718 cv
275.918 769.699 275.918 769.679 275.918 769.66 cv
275.864 769.52 275.812 769.378 275.744 769.253 cv
275.744 769.234 275.744 769.214 275.744 769.195 cv
275.736 769.087 275.705 769.001 275.628 768.963 cv
275.628 768.943 275.628 768.924 275.628 768.905 cv
275.588 768.75 275.536 768.609 275.453 768.498 cv
275.376 768.362 275.354 768.17 275.279 768.033 cv
275.283 767.932 275.266 767.852 275.221 767.8 cv
275.264 767.622 275.061 767.689 275.104 767.51 cv
275.047 767.297 274.911 767.161 274.872 766.929 cv
274.772 766.894 274.877 766.653 274.756 766.639 cv
274.758 766.559 274.729 766.511 274.698 766.464 cv
274.63 766.377 274.625 766.227 274.524 766.174 cv
274.514 766.087 274.544 765.959 274.465 765.941 cv
274.465 765.922 274.465 765.902 274.465 765.883 cv
274.465 765.864 274.465 765.845 274.465 765.825 cv
274.384 765.81 274.399 765.698 274.349 765.651 cv
274.317 765.547 274.319 765.41 274.233 765.36 cv
274.23 765.286 274.159 765.28 274.175 765.186 cv
274.123 764.986 274.034 764.824 273.942 764.663 cv
273.942 764.644 273.942 764.624 273.942 764.605 cv
273.874 764.421 273.896 764.148 273.71 764.082 cv
273.71 764.063 273.71 764.043 273.71 764.024 cv
273.665 763.875 273.652 763.695 273.536 763.617 cv
273.489 763.509 273.439 763.404 273.42 763.269 cv
273.411 763.16 273.381 763.074 273.303 763.036 cv
273.303 763.017 273.303 762.997 273.303 762.978 cv
273.319 762.846 273.289 762.76 273.187 762.746 cv
273.184 762.671 273.113 762.665 273.129 762.571 cv
273.149 762.3 273.004 762.193 272.955 761.99 cv
272.906 761.865 272.804 761.792 272.839 761.584 cv
272.78 761.584 272.769 761.537 272.722 761.525 cv
272.722 761.467 272.722 761.409 272.722 761.351 cv
272.642 761.315 272.713 761.128 272.606 761.119 cv
272.606 761.099 272.606 761.08 272.606 761.061 cv
272.598 760.953 272.568 760.866 272.49 760.828 cv
272.472 760.75 272.407 760.717 272.432 760.596 cv
272.434 760.516 272.405 760.468 272.374 760.422 cv
272.273 760.386 272.378 760.146 272.257 760.131 cv
272.262 760.03 272.244 759.95 272.199 759.899 cv
272.131 759.715 272.093 759.501 271.967 759.376 cv
271.967 759.356 271.967 759.337 271.967 759.318 cv
271.959 759.209 271.929 759.123 271.851 759.085 cv
271.764 758.908 271.87 758.859 271.793 758.737 cv
271.729 758.529 271.639 758.348 271.56 758.155 cv
271.56 758.136 271.56 758.117 271.56 758.098 cv
271.507 757.996 271.54 757.807 271.444 757.749 cv
271.444 757.729 271.444 757.71 271.444 757.691 cv
271.453 757.546 271.414 757.449 271.328 757.4 cv
271.328 757.381 271.328 757.362 271.328 757.342 cv
271.32 757.118 271.373 756.832 271.212 756.761 cv
271.214 756.681 271.184 756.633 271.154 756.587 cv
271.158 756.486 271.141 756.406 271.096 756.354 cv
271.096 756.296 271.096 756.238 271.096 756.18 cv
271.062 756.078 271.166 755.839 271.037 755.831 cv
271.037 755.812 271.037 755.793 271.037 755.773 cv
271.037 755.483 271.037 755.192 271.037 754.902 cv
271.037 754.824 271.037 754.747 271.037 754.669 cv
271.168 754.626 271.06 754.343 271.096 754.205 cv
271.096 754.146 271.096 754.088 271.096 754.03 cv
271.181 753.981 271.22 753.884 271.212 753.74 cv
271.212 753.721 271.212 753.701 271.212 753.682 cv
271.308 753.623 271.275 753.435 271.328 753.333 cv
271.373 753.204 271.45 753.106 271.444 752.926 cv
271.574 752.844 271.555 752.611 271.676 752.52 cv
271.68 752.445 271.751 752.439 271.734 752.345 cv
271.803 752.162 271.915 752.022 272.025 751.88 cv
272.07 751.868 272.093 751.832 272.083 751.764 cv
272.224 751.673 272.34 751.557 272.432 751.415 cv
272.432 751.396 272.432 751.377 272.432 751.357 cv
272.629 751.167 272.851 751.002 273.013 750.777 cv
273.032 750.777 273.052 750.777 273.071 750.777 cv
273.314 750.69 273.474 750.522 273.652 750.37 cv
273.671 750.37 273.691 750.37 273.71 750.37 cv
273.905 750.294 274.11 750.227 274.233 750.079 cv
274.418 750.129 274.413 749.988 274.524 749.963 cv
274.672 749.957 274.8 749.93 274.872 749.847 cv
274.908 749.844 274.941 749.838 274.93 749.789 cv
274.988 749.789 275.046 749.789 275.104 749.789 cv
275.281 749.713 275.621 749.802 275.686 749.614 cv
275.744 749.614 275.802 749.614 275.86 749.614 cv
276.056 749.597 276.257 749.585 276.383 749.498 cv
276.402 749.498 276.421 749.498 276.441 749.498 cv
276.618 749.462 276.941 749.573 277.022 749.44 cv
277.041 749.44 277.061 749.44 277.08 749.44 cv
277.2 749.405 277.462 749.512 277.487 749.382 cv
277.506 749.382 277.525 749.382 277.545 749.382 cv
277.702 749.478 278.259 749.478 278.416 749.382 cv
278.474 749.382 278.533 749.382 278.591 749.382 cv
278.609 749.461 278.736 749.43 278.823 749.44 cv
ef
217.673 653.903 mo
227.594 653.903 li
227.594 643.982 li
217.673 643.982 li
cp
@
279.434 441.017 mo
288.666 441.017 li
@
291.144 441.017 mo
300.375 441.017 li
@
302.854 441.017 mo
312.086 441.017 li
@
314.564 441.017 mo
323.795 441.017 li
@
326.274 441.017 mo
335.505 441.017 li
@
337.984 441.017 mo
347.216 441.017 li
@
349.695 441.017 mo
358.925 441.017 li
@
361.405 441.017 mo
370.636 441.017 li
@
373.114 441.017 mo
382.346 441.017 li
@
167.231 441.017 mo
176.462 441.017 li
@
178.941 441.017 mo
188.172 441.017 li
@
190.652 441.017 mo
199.882 441.017 li
@
202.361 441.017 mo
211.593 441.017 li
@
214.071 441.017 mo
223.304 441.017 li
@
225.782 441.017 mo
235.012 441.017 li
@
237.492 441.017 mo
246.723 441.017 li
@
249.202 441.017 mo
258.433 441.017 li
@
260.912 441.017 mo
270.144 441.017 li
@
55.0285 441.017 mo
64.2594 441.017 li
@
66.7387 441.017 mo
75.9695 441.017 li
@
78.4484 441.017 mo
87.6797 441.017 li
@
90.1586 441.017 mo
99.3898 441.017 li
@
101.869 441.017 mo
111.1 441.017 li
@
113.579 441.017 mo
122.811 441.017 li
@
125.289 441.017 mo
134.52 441.017 li
@
136.999 441.017 mo
146.231 441.017 li
@
148.709 441.017 mo
157.941 441.017 li
@
161.731 441.886 mo
161.725 441.907 161.711 441.928 161.711 441.955 cv
161.711 441.991 161.725 442.005 161.773 442.005 cv
162.095 442.005 li
162.138 442.005 162.2 441.998 162.221 441.948 cv
165.875 435.691 li
165.889 435.67 165.904 435.634 165.904 435.614 cv
165.904 435.586 165.875 435.571 165.834 435.571 cv
165.504 435.571 li
165.455 435.571 165.413 435.579 165.386 435.628 cv
161.731 441.886 li
ef
1 lw
161.731 441.886 mo
161.725 441.907 161.711 441.928 161.711 441.955 cv
161.711 441.991 161.725 442.005 161.773 442.005 cv
162.095 442.005 li
162.138 442.005 162.2 441.998 162.221 441.948 cv
165.875 435.691 li
165.889 435.67 165.904 435.634 165.904 435.614 cv
165.904 435.586 165.875 435.571 165.834 435.571 cv
165.504 435.571 li
165.455 435.571 165.413 435.579 165.386 435.628 cv
161.731 441.886 li
cp
@
274.106 441.886 mo
274.099 441.907 274.086 441.928 274.086 441.955 cv
274.086 441.991 274.099 442.005 274.148 442.005 cv
274.47 442.005 li
274.512 442.005 274.575 441.998 274.596 441.948 cv
278.25 435.691 li
278.264 435.67 278.279 435.634 278.279 435.614 cv
278.279 435.586 278.25 435.571 278.209 435.571 cv
277.879 435.571 li
277.83 435.571 277.788 435.579 277.761 435.628 cv
274.106 441.886 li
ef
274.106 441.886 mo
274.099 441.907 274.086 441.928 274.086 441.955 cv
274.086 441.991 274.099 442.005 274.148 442.005 cv
274.47 442.005 li
274.512 442.005 274.575 441.998 274.596 441.948 cv
278.25 435.691 li
278.264 435.67 278.279 435.634 278.279 435.614 cv
278.279 435.586 278.25 435.571 278.209 435.571 cv
277.879 435.571 li
277.83 435.571 277.788 435.579 277.761 435.628 cv
274.106 441.886 li
cp
@
.567 lw
171.505 402.501 mo
195.005 402.501 li
@
377.505 402.501 mo
401.005 402.501 li
@
174.505 415.001 mo
198.005 415.001 li
@
314.064 536.499 mo
323.985 536.499 li
323.985 526.578 li
314.064 526.578 li
cp
@
gsave
81.2078 772.396 mo
234.163 772.396 li
234.163 760.307 li
81.2078 760.307 li
cp
clp
1 setflat
81.1578 772.446 mo
234.013 772.446 li
234.013 760.457 li
81.1578 760.457 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
0 lw
10 ml
81.1578 772.446 mo
234.013 772.446 li
234.013 760.457 li
81.1578 760.457 li
cp
.750179 .679652 .670191 .901488 cmyk
@
grestore
gsave
81.2078 772.396 mo
234.163 772.396 li
234.163 760.307 li
81.2078 760.307 li
cp
clp
3.0518e-5 .739193 1 .000366217 cmyk
%ADOBeginSubsetFont: ArialMT Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /ArialMT def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 0 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 65 /A put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 116 /t put
dup 243 /oacute put
def
/FontBBox {-665 -325 2000 1006} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
16 dict dup begin
/.notdef <1C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7
C8A936AA182F5809A9> |-
/A <1C60D8A8C9B64EDFED26B9E21A4F64848088903AC9891CF791BDBC4AB29A
CC8B3E8D13924A7DDE35F09AC5F4A8229C87124C732743268600EF8D4582208B
D16D82> |-
/a <1C60D8A8C9B7EF32244AC11AA6BAAA29EE8C78E0E7206F4A2776A2D1EA7D
C8D9A28C62ADE3B609CF5E2EE23C64D0B75055BD249ADFEC7B4224D040D883CA
6747571955349CF8AD17E94E6FE5D0259F4D55623D4DC5C3CB4AC64A7A87DBBA
48B7420D7990F3C261DB9838C5B90BF72B82C8238A1A58FE8E6137AAFE2405FD
710F7ADB95B4F576668A6DB104942C88ED8D01E4E58188F5E32A24B5B964D5CE
C10C08F76C0F472E84A0FB6EB5E37AAEE233DE54C212B0A012D3E20F864B2D53
463E221F81B784B6F7BE81FBFCAE6785C2430454DD81C436E0A516BF8C8307B2
879FF86378629C5EA7E586D83C83550D2E732930F7FE3BAD07B86C81E024D177
B5D88A> |-
/c <1C60D8A8C9B7A73DB9D8FD6AA4FBAF8D65C36EA1D4AADBD389F972C0EDCE
9E7F36285FA93A80D3647871D2CE5AAAA6A6A370DC54E1595FB6AAB3E389C9F7
BBBB85F787D6C418B35B940450E5E243895ECFD2205F51B2D154CFFECF34148C
344C1EF806F9AAF539FB961E3EFAF6353381E833DF7C0542FFF27122A28D3654
8FE63FC8465B1B685766E782F0> |-
/d <1C60D8A8C9B7EF322407C6655A1B3652DB8522EB511BE6B0855A72D96214
58876CAD1FA22A00635F436A34E23EAFC09C394044ECC1389CD99E4AF1C1F6DD
52305C78619784840FC37A805B0805EF290BC9E049CF068290816CB7E74DB612
941355BCE71CBDD11DD0F9CA29531036ED13EFB9CAB613E9F630FBBC9408EF13
CE4683D92968530F64760C3DF85C7C7EA06EBA8BF859> |-
/e <1C60D8A8C9B7EF322472FA01213C7AD90A23B536C2309DD40D370E2449B0
D0FEF85A6BE8067F30686F143E75903EB6FA56935472EF47CE3F33433C2F0C8B
6FA51573AE54B2C516F6F024F8775AD6639544E339FC2A328548BCBFD58B0EEA
03B7DC3AB069F44477958BFBFAAC7196D411DF9BE0B78A86C4BC33EC5D7C3729
5284C077711C162623860AACA404F650F8D516970257> |-
/f <1C60D8A8C9B854D0F47057B2F13303E258FCAEE9E8BBA6E28AE872907C56
63BFD2A0F535ED0EB011F2C2A875E053FAF73E8AA16B1F99510A6812F90D61CF
3F1DA5EF558899A9AE12AAF6AF4568E0F6003B0A2FF6F33293> |-
/i <1C60D8A8C9B88C087228DFC7C7ABCC71B868F57EDB285655227000619B17
1C8A80AB> |-
/l <1C60D8A8C9B88C08722AD20D19A90F9064193C8D82> |-
/m <1C60D8A8C9B6B41CBB5F87BE20C872DF59FABCB36542419CBFA3D5519AD5
BA8076F32ECFD724B055F72CAC37BC47239ACC8B0FB48B8ACFF099B97085BD99
C333951D0338D27FF6AB9B3F3C69320476BA0CD4F9573B79AD358A91B0176AFB
9AEF169308783E9C6287F18E6E658AF5AA6C9688B500806DA169A1B21069D55C
54A2FF607A6A38976171B08665C3ACCAA84DFB970D01180645CE5CBC48DFE37B> |-
/n <1C60D8A8C9B7EF322B3BE19FB964E04D2DB06D4930CA5D8F41D2EF3A285C
0BD536CD2C57668EB9E30311BF9A2872DFB44F2BF2A4683B5D66FA01BB1CCDAD
E9C8A9EE2CB010715D3D6DFF0E843CF77C87A07D1DBD0482675E3CA1DAA2A520
3A8015DD09B7CE> |-
/o <1C60D8A8C9B7EF32334FFE7884F6C3B903D000D9FD76C2EAE8EDCCA90A98
7875625CA0393015EF6761BE1C3B6D9E9DA4BABE1DD313B783BCBF8F620C846C
7F6361946173FB7A4A6BF94EAA0CB4947DD1974AF371F3C211E584576DE9AD79
F9DA988E9E531810E3876F3029BB1D2ED366525F30E48DD7CE3C9B66C5CC099F
518C54BB58C51D6FB6D0C8> |-
/p <1C60D8A8C9B7EF322B3B0CFC8FED720BC90E20B208D27DC4B8F11F10B964
70F8B4F5FABEC7F7010781F5077B417FE44279776F2304ACD6E0EA12F436330D
C4B79C907B9D28468D10FF9256A7D2CA504E4498D719ACD86FCA89B33C61F556
CF1168C3F262A781155D5EBF0C47D71C584AB93037B47B18D39FE408A49672C1
E63F9E8368D19E113FC95C59A9FA4650E46F6399F2FF256844E27568BA34B9> |-
/r <1C60D8A8C9B81F2C3A9694980E415F1DEF5C498473095A24D1BE11285789
4FEA85DB28AD762FB8D2F4CAC5BF8B9C18D8A2DFCF155E0751AF58898A6619AD
D420F549AB7C795751D32E8EE6> |-
/t <1C60D8A8C9B854D0F45CF665C7276F8075B54A4ECD6470F395A458CA2D06
5152075036EEECA213894C1EA0DACFBD370590F4B831924E5BDA5281442349CF
AD2545E0750C3004A129C25B1EAA8DEF5DA8BF1998E80AE266F591E64CB5127F
5C42C88FB43C> |-
/oacute <1C60D8A8C9B7EF32334FFE7884F6C3B903D000D9FD76C2EAE8EDCCA
90A987875625CA0393015EF6761BE1C3B6D9E9DA4BABE1DD313B783BCBF8F620
C846C7F6361946173FB7A4A6BF94EAA0CB4947DD1974AF371F3C211E584576DE
9AD79F9DA988E9E531810E3876F3029BB1D2ED366525F30E48DD7CE3C9B66C5C
C099F518C54BB58C51D6FB6D031A91E7E3745045E1BB61CDDA50CE86B9A8A> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/RPTEAE+ArialMT /ArialMT findfont ct_VMDictPut
/RPTEAE+ArialMT*1 
[65{/.notdef}rp /A 31{/.notdef}rp /a /.notdef /c /d /e 
/f 2{/.notdef}rp /i 2{/.notdef}rp /l /m /n /o 
/p /.notdef /r /.notdef /t 126{/.notdef}rp /oacute 12{/.notdef}rp]
RPTEAE+ArialMT nf
RPTEAE+ArialMT*1 [6 0 0 -6 0 0 ]msf
87.3184 767.343 mo
(Aceptado)
[4.002 3.00005 3.33604 3.33605 1.66805 3.33605 3.33604 0 ]xsh
114.336 767.343 mo
(por)
[3.33615 3.33616 0 ]xsh
124.674 767.343 mo
(el)
[3.3362 0 ]xsh
131.01 767.343 mo
(cliente)
[3.00014 1.33205 1.33203 3.33614 3.33614 1.66814 0 ]xsh
150.018 767.343 mo
(electr\363nica)
[3.33612 1.33205 3.33612 3.00014 1.66812 1.99808 3.33612 3.33614 1.33203 3.00014 0 ]xsh
180.695 767.343 mo
(o)sh
185.699 767.343 mo
(telef\363nicamente)
[1.66811 3.33611 1.33203 3.33611 1.66811 3.33611 3.33612 1.33202 3.00011 3.33611 4.99808 3.33611 
3.33611 1.66812 0 ]xsh
grestore
1 setflat
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
] del_res
/RPTEAE+ArialMT*1 uf
/RPTEAE+ArialMT uf
/ArialMT uf
/RPTEAD+Helvetica45Light*1 uf
/RPTEAD+Helvetica45Light uf
/GFNBAA+Helvetica45Light uf
/RPTEAC+HelveticaNeue-Thin*1 uf
/RPTEAC+HelveticaNeue-Thin uf
/QJJAAA+HelveticaNeue-Thin uf
/RPTEAB+HelveticaNeue-Light*1 uf
/RPTEAB+HelveticaNeue-Light uf
/HIBBAA+HelveticaNeue-Light uf
/RPTEAA+HelveticaNeue-Bold*1 uf
/RPTEAA+HelveticaNeue-Bold uf
/PBAAAA+HelveticaNeue-Bold uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%ADO_BeginApplicationPageTrailerComments
%ADO_EndApplicationPageTrailerComments
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%ADO_BeginApplicationTrailerComments
%%+ procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%ADO_EndApplicationTrailerComments
%%EOF
Adobe_AGM_Core/pscript_showpage_override get exec
grestore
showpage
%%Page: 2 2
%%PageBoundingBox: 10 13 588 829
%%BeginPageSetup
%%EndPageSetup
10 829 translate 72 600 div dup neg scale
0 0 transform .25 add round .25 sub exch .25 add round .25 sub exch itransform translate
userdict/Adobe_AGM_pgsv known {userdict/Adobe_AGM_pgsv get restore}if
userdict/Adobe_AGM_pgsv save put
%ADO_BeginApplicationHeaderComments
%ADO_DSC_Encoding: Windows Roman
%%Title: contrat-1.pdf
%%Creator: Adobe Acrobat 9.1.0
%%For: MYUV6263
%%CreationDate: 10/05/2011, 19:28:29
%%BoundingBox: -1 0 595 842
%%HiResBoundingBox: -0.0199 0.4601 594.9800 841.4600
%%CropBox: -0.0199 0.4601 594.9800 841.4600
%%LanguageLevel: 3
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%PageOrder: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%ADO_EndApplicationHeaderComments
%%EndComments
%%BeginDefaults
%ADO_BeginApplicationDefaultsComments
%%ViewingOrientation: 1 0 0 1
%ADO_EndApplicationDefaultsComments
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
3 3010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 898 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.1-c043 52.372728, 2009/01/18-15:08:04        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   pdf:Producer="GPL Ghostscript 8.62"
   xmp:ModifyDate="2011-05-10T14:15:28+02:00"
   xmp:CreateDate="2011-05-10T14:15:28+02:00"
   xmp:CreatorTool="UnknownApplication"
   xmpMM:DocumentID="bdb311b9-b31b-11eb-0000-77ea3ad492d2"
   xmpMM:InstanceID="bdb311b9-b31b-11eb-0000-77ea3ad492d2"
   dc:format="application/pdf">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Untitled</rdf:li>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[{Catalog} {Doc_Metadata} /Metadata pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%ADO_BeginApplicationPageHeaderComments
%%Page: 2 2
%ADO_EndApplicationPageHeaderComments
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
[
[/Label (2)]
[/TrimBox [0 .46002197265625 594.96002197266 841.4599609375]]
[/BleedBox [0 .46002197265625 594.96002197266 841.4599609375]]
[/ArtBox [0 .459991 594.96 841.46 ]]
]xpdfm
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
gsave
8.33333 8.33333 scale
-9.96 -12.84 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
-.019989 .459991 mo
-.019989 841.46 li
594.98 841.46 li
594.98 .459991 li
cp
clp
[1 0 0 1 -.019989 .459991 ]ct
.2 setflat
1.0434 lw
0 lc
0 lj
4 ml
[] 0 dsh
true sadj
51.025 812.815 mo
544.25 812.815 li
544.25 27.2948 li
51.025 27.2948 li
cp
false sop
/2 
[/DeviceCMYK] /CSA add_res
.0203861 .620264 1 .0015259 cmyk
@
%ADOBeginSubsetFont: PBAAAA+HelveticaNeue-Medium Initial
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /PBAAAA+HelveticaNeue-Medium def
/FontInfo 6 dict dup begin
/Notice (Copyright (c) 1988 Adobe Systems Incorporated.  All Rights Reserved.Helvetica is a registered trademark of Linotype AG and/or its subsidiaries.) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 71 /G put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 86 /V put
dup 238 /Oacute put
def
/UniqueID 20085 def
/FontBBox {-5 -17 815 913} def
end
systemdict begin
dup /Private
8 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-17 -0 714 731 517 531 700 700] def
/OtherBlues [264 273 373 382 -205 -191] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
18 dict dup begin
/space <1C60D8A8C9B854D00D> |-
/A <1C60D8A8C9B64EDFA3F30AE439377206A74398C278F85FC6ABFF2705CABD
93D3E9CE6AB2256A810F06E8A952EB25F2AC3C8740AA703DDE7A6DDD3D80257A
1D7EF5FAD682BABE25F6> |-
/B <1C60D8A8C9B635A4D71E4055E227366B693CD737D0612D14584E83757093
6984E4735F90384080AAE567C8673FA35395136DB350D8B16D6EE75C437AAC83
7BB59DD61F77FDC7820C1DACAE159E04D3856984528787938B7387DCBC292798
02E809EAED2E81EEF39C0D8723A842E07C68603F2E9466A312E6530634A89C97
8F76A82695B9> |-
/C <1C60D8A8C9B6079FEFAD07DE6495FE2647C7F7CE5FB94DD801671E3AC447
2FFE6ED6198C1BEFDE4EDD10FD82931F8C8B1AC770CBE02007FFABBFF74CF1FE
1BDB97C9CD86906D7456968B0195D8D1499E573C22C734C00EDB336EC850183C
4EFC21338500A44B5DB7> |-
/D <1C60D8A8C9B6079F1E27E8CA871A3AB2699C1572BB4307F18811D10C6813
223D7F9B90CFDADBC5C298B86CF1958FCF6C89602CE07F3C35D90B325AEA82B4
4F75A5BB442FDF0876F6C6BCE45A329DA396> |-
/E <1C60D8A8C9B66B392CA70476D75FFA4737A2A8C9F4DFEBBCCDC23FD47D09
CD547A7783BFBF037E6B677D87066A9460DA3DBA493C19B22275C52216A8C5> |-
/G <1C60D8A8C9B6EA914CA163FA616D279E5388000F3978D8A526CC7CE9D178
648754AE9D36205EBDDC3FE9D1415CAA0807A62CEE45C2DCC062D9D1AFC20C39
DD59AE490865B4A822D995076127E8EA354E0D23B66D15DE8864C8817D8D2FA7
0050B0B895D98086EBFDA2E97792B8CD69597280109027575DCA1294A62CDFAC
A3FA> |-
/I <1C60D8A8C9B854D0A3953AFD6AC0AE9B763499D1D3F8FA08846CE2B7C7D5
B2CB> |-
/L <1C60D8A8C9B7FD84E650166061EDE0E09B6657884FC9211CBC48C6C197EB
CC6E96364C67A5C500> |-
/M <1C60D8A8C9B59F85B01BCAF1D584633D71C7F06E2E9B25CBE0788BA63310
6634A0ED1851B0A154FC91AEC1E4F7B8F8239F3B36B93432EF92C87D61777990
DFA1C017C604D1ABF54A31C514360A0EED8EF1EF496B940DCAA4E0810EB332EE
20234F> |-
/N <1C60D8A8C9B6079F3517E074AC7F02A1BD9EF22272889EB0BBCD89CE350B
AE551347C333023E153F820EDA3C8052A9C1AFB602319A1444C6C468A308E243
BD> |-
/O <1C60D8A8C9B6ED0558B36C2601E0976AFCBDF6679BF13E1D26E2A3EFD37C
2968C53489CD3C68B077482C2A5EB3A8F7C80D80451B7AA782ACB1B3347D61F8
4FB76AD08B2ACB2541AB2338972036241E7643A6DF08D4435BDEA8D0413C3733
1366D06433711239> |-
/P <1C60D8A8C9B64EDFA3F30AE4CEF21D6DF7FA1F1081E458A94416C80B86BA
98EAA3BC7C68294ADE9BA84A49D98B37060DA857ABC72D506D19B443DED2CAA6
B5A4DA4EE095586A557E528FE236031E58AC8B11CFFDA1> |-
/R <1C60D8A8C9B635A4FCB3B92ECD0E77123557DEF3353BCBCF0322390DBD2B
8BAFC4B3D2D9EE5D52B4F83869A1D67036710F09216614DBE8A286D921DE585A
2237F165B8B0015626A8915A6C7D0FDCB89CA051901A4650A4F3467D30BCE7E0
A5E66EAE3BEAE81BCDB483BD8797109B2A38A2FCD3126AFEBB353FB32E55B957
5AAE8E29C33509B82B8E0FB5129B1BABF583DEC91CF9D38B5AC5F237DDF67C28
9019FECB08AC2E4D43313D70> |-
/S <1C60D8A8C9B67DB5051CBE5070B2EC800CA551DE1422CA5E68BA1006CCF3
E9DA0FD3ABA69E445391F5779ED69C0BB41E1EA10B8653C5DD36AA1F85AA3937
9C7D64CE158703A2A845FB58573EEB8AD7D234BE5E0F6E9E7C55261FAD49FE56
3B67C85ECA5D099AFABBBC1AA5F436AED21E8058A3C7C7EF56C056246101D588
51109C7AD82211AC7CD0D32D6EC39FC4180F56031C3AE4B513AF0D321A7F43F0
99A9> |-
/V <1C60D8A8C9B7D8BE41A64DAB3AE0CDA5CF78B755CA9BF5F22345DEDCF1D7
5D778A7C990A9B03068BFDD28EA94F72E756C546> |-
/Oacute <1C60D8A8C9B6ED05A965FBA0145CAF2E2F4D77CE> |-
/acute <1C60D8A8C9B87B5D3601CB1C7C68DAFB83C9E2B42584E9B658286C90
A33D158D26> |-
/.notdef <1C60D8A8C9B854D00D> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/RPTEAF+HelveticaNeue-Medium /PBAAAA+HelveticaNeue-Medium findfont ct_VMDictPut
/RPTEAF+HelveticaNeue-Medium*1 
[32{/.notdef}rp /space 32{/.notdef}rp /A /B /C /D /E 
/.notdef /G /.notdef /I 2{/.notdef}rp /L /M /N 
/O /P /.notdef /R /S 2{/.notdef}rp /V 151{/.notdef}rp 
/Oacute 17{/.notdef}rp]
RPTEAF+HelveticaNeue-Medium nf
RPTEAF+HelveticaNeue-Medium*1 [10 0 0 -10 0 0 ]msf
71.1844 45.972 mo
(COMPROMISOS DE PERMANENCIA APLICABLES AL SER)
[6.72015 7.10009 8.39023 6.17021 6.5401 7.10009 8.39022 2.28014 5.98009 7.10008 5.9801 2.28015 
6.72014 5.80019 2.28015 6.17021 5.80019 6.54008 8.39021 6.17023 6.72014 5.80019 6.72014 6.72015 
2.28014 6.17021 2.28015 6.17021 6.17021 5.24019 2.28014 6.72017 6.1702 6.54007 5.24023 5.80017 
5.9801 2.28012 6.1702 5.24023 2.28012 5.98007 5.80023 0 ]xsh
320.197 45.972 mo
(VICIO M\356VIL RESIDENCIAL DE ORANGE)
[5.61008 2.28015 6.72015 2.28015 7.10013 2.28015 8.39023 7.1001 5.61008 2.28015 5.2402 2.28015 
6.5401 5.8002 5.9801 2.28018 6.72015 5.8002 6.72015 6.72015 2.28018 6.17023 5.2402 2.28015 
6.72018 5.8002 2.28015 7.1001 6.54013 6.17023 6.72015 7.09018 0 ]xsh
/3 
[/DeviceCMYK] /CSA add_res
0 0 0 1 cmyk
%ADOBeginSubsetFont: HIBBAA+HelveticaNeue-Light Initial
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /HIBBAA+HelveticaNeue-Light def
/FontInfo 6 dict dup begin
/Notice (Copyright (c) 1988 Adobe Systems Incorporated.  All Rights Reserved.Helvetica is a registered trademark of Linotype AG and/or its subsidiaries.) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 58 /colon put
dup 65 /A put
dup 67 /C put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 135 /aacute put
dup 142 /eacute put
dup 146 /iacute put
dup 150 /ntilde put
dup 151 /oacute put
dup 156 /uacute put
dup 159 /udieresis put
dup 165 /bullet put
dup 193 /exclamdown put
dup 210 /quotedblleft put
dup 211 /quotedblright put
def
/UniqueID 20081 def
/FontBBox {-65 -206 773 729} def
end
systemdict begin
dup /Private
8 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-15 -0 714 729 516 531 691 706] def
/OtherBlues [265 274 368 377 -206 -191] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
64 dict dup begin
/space <1C60D8A8C9C4A637> |-
/parenleft <1C60D8A8C9B87B5D352C386837DAA27FB85C9E3720216F7422AB
E01C1CF06674DA4E9DEDFB8D48A0979E9C6627F48FB8EB7484170D1E38765E10
AC472EB3E83EBFE5848A> |-
/parenright <1C60D8A8C9B87B5D352C386837DAA27FF19FCF32D0CE68B968C
C98518EEC34A42AB8AB2A131C15500B464B30FAD2F877531ED95B17C019AB528
490FE9C0B204CD4FEC119> |-
/comma <1C60D8A8C9B854D088E8E1BAEF395E7F9F60484962ECFB0A650F5342
9FF2EC416192E58115DEC4CD8F> |-
/period <1C60D8A8C9B854D088E8E1BAEF394528599D3BC235255CEE4A> |-
/slash <1C60D8A8C9B81F2C5C509250DC22F276378FF5EB7264DCE54634489B
6E2938FC65B89697> |-
/zero <1C60D8A8C9B7EF32A0AD7789A4E550A9495F3F487C8B6C812CF53150C
9FE396CBC70026F50D53F04196E77BF285B063EC2C6C497EB9B1BA2083A39C92
680B0A1C69CCEBD41A9084CDAE0FAD84B6569F7A622E35B1036B335613398744
48E80AA> |-
/one <1C60D8A8C9B7EF327C10274AC2F074AB971756F571CA1CA6BC65700D3E
CFD99162C3A41B3CBD601600095433291366C5A1E595> |-
/two <1C60D8A8C9B7EF32575579508822BE904A0ECF49B1327FF8F1A8437786
E8E9A769C1DE403A5B6C47455A7E7AA54EC0D00992D9B446CA99ADFE3115F0DF
85160B9D0E7F5F2C7EBEB8CB72F8CE5927039D5CF4DB8D47FCFE7DBF46AD8FA0
676E91533977> |-
/five <1C60D8A8C9B7EF32A0AD7788996CE1209CCDC70144CADC8C2A5A53D6B
FC44764EA4104F137D2244F65A1E4732B2776FA0CD19618B6E7578D5EAF4FD8E
9CA54A5BDF11D304577D869DE4C419B1CD625F892C623470005E460EDE3292DB
76A28CBEF70216C6DCFDE8BFAC7EBF182> |-
/six <1C60D8A8C9B7EF32A0AD778891F9BE3FCA80F203F1AEC906C2D8CC7592
53C40B4235731CAAEA81D16A1AFE049BAE6225150841D599F6575E107CB70D3C
45128EBB96CB9BC9D94817CFDA0F335E9E78E038EE20A5830BF2479C037E8086
B90E1E26855ABD5CD9FCBFA56930B33B86F993098D4065CBFFF8B4279DC18ADA
C1169A398CEA2B451E8C0A867D62B0CCBE9FC686F6B431E349630BA3884C0590
7CCA54C60BE2F2299D1D1F> |-
/seven <1C60D8A8C9B7EF327C10274B21CAF3D79DA4E4FC75EEC6072FAF23F4
AF8DD719A92464A4A96BB061022CD3B67663B97702756DB9C4B45E32> |-
/eight <1C60D8A8C9B7EF32A0AD778718CD0DABD97006096D921013013E3815
0052AE811DB6A3F26EDB6A392C9C923A6273A830894AC11FA864F0B5E5FB3FD2
44117593040E850657D05A8ED409E2C7743EEC8BF048C82A3762047FAFC3C2D2
FF7A67251E90CC4337279E53BE7039A8B230FD9DE38CD9CFDFEA1D2220DC51E3
5ED6052D7263A0F2D07B401F0F6494CDEAA5E42FF9D1AC572648444ED8404F35
0BE070495FF53874587071FD512DB8DC1089A8C7DAAEFF0201ADF00128E5AA02
B697F06DB7C27AC6E30FDAA97BE0BD8E276D5E15C61A1C9EC729B1157119F1D1
7645C5> |-
/colon <1C60D8A8C9B854D0FBC6271FE40937CFF5C15882BD6649B46C9DADCF
340C99455619947A400D5717C51D901F5B2DFB> |-
/A <1C60D8A8C9B66B39070D84F34F867623639D7BF6F99D0285697EBBDF64E8
8371738A417B241C7155363ED29B9F86A26CE73BD157D953FB2DAEFD93C83F> |-
/C <1C60D8A8C9B635A4209ADC2B34436AA31BC9472F72A4741A2F1EF5A80F56
33E9BF0F1920F9DA5E4DC823A02C4EC26B699ED128010A3622F4B96340F47049
47EBFCF5DB20E466E279BDC5BFF98177F27F863EAE8AB6AE15B73BADA9B3E5B9
ABBB40F791> |-
/E <1C60D8A8C9B7CA6456E13EDCE7919984214238DE4738278B18EF2C292EE8
B6815CE3E77487DC7C0601AF8A1CA2D05E1287100330D9B97CFC> |-
/F <1C60D8A8C9B7825685F30FF52E6511772EBFE11A7D0FAF853D30C4E57A98
14FECB63C736F0D0518BD26923F0C04BD3452D34> |-
/G <1C60D8A8C9B6184A30D995F55E9D4D206C2B6FAE4B4EAF162AB2C9370A83
A9A097819F4CCF42325B939E4286430D0FC73A780494C384F6B45FCF2AEC3DC9
8FB9931A62279E7E87BD8775D8285B8991F758980C657D29EEECDB78991E2A22
DEC58B6458EF78738589A831480D0ED06B36006C2C1BA644420DD6E30957DAA4
8157E5> |-
/I <1C60D8A8C9B88C082599D5E8A418F1D4DF74F5840FBFB4FDAD11DA3543> |-
/L <1C60D8A8C9B78256AE5058BE79108D7797212E9D9618BFFDADC6ABAECBB0
D5449B2AA6> |-
/M <1C60D8A8C9B6B41CEC82591545F77E1132A7724B3C810C973922BC686D06
7F5F31E23720456FBF3BD2F4B64AAB3259C37BEC16848686869B5289CCE1B84E
848DACF3E318439F0FB9025BA998097F80BA146BE99E16> |-
/N <1C60D8A8C9B635A4FCB3B9207397550562D0A82F3408230B9D0EF0DC5787
85956E12B9EEBBC858D16C1C1BF44DFB306B761892B4381BBC5924> |-
/O <1C60D8A8C9B6184A30D995FB4151F35B966BB3C93C1EF8691DE626151E1A
F1A9AC1475CAE41E301B7BF401A77E3C516CDA3554265816A91255663916BD35
0E98D321413DBFF588698ADD58947DA516C1D2168197742B805961CA448AF3AD
C8AC59DA81> |-
/P <1C60D8A8C9B66B39070D84F3FB31AD412A1DEA66A69E55302D404107A123
7CF0341885DAD260EF241BC6B2529024D862421BB6DA0A3C5588447B687FBFD6
B6E55E37AB3D32C42CD9ADA853> |-
/R <1C60D8A8C9B64EDFA3F30AE4B9D1D4BB3211B6AFD40148C2E8908E43D850
802746D004DD3E1F42340B560D3C7EC270BF1FBA5ADB63F38C1AFEF400E547B1
174B0ED97770A28C473C3CAA140C9BEFF643A43D7FDC7F3CC02D049AC6047F23
A1351FEF4FF61A9497DDA47444221C2F12679A650416551F7E5A790F360B3A18> |-
/S <1C60D8A8C9B66B39DBA8612108CE6650FCC9806D47F1445DFB5F83898DF4
22515A145B2E0D0933CF629D96AA9991FD322646CE967555A7CD77582ABF1038
1D5E5E39E97091ED066A077F610FC549163BF4F2DE4D3832694D329DF57A7233
02EAB57F42944210553F36B7B0024D0027A8F5ED4DE7E765A0677B373693F8FA
E64ED64BABB8DFE81F7656C931F4A1FEF2DC24BFCB2160FADA> |-
/T <1C60D8A8C9B7EF327C10274B0822670DAC46C07DCA02D9A4BF69022B5C5C
2A6352FC25659563CA5210E1AA90> |-
/a <1C60D8A8C9B7B4A1B444E4481F557DBEE3697BD69078FA816653C5D21562
5712624EEFA71832D594F0C6ADF257D43C275D556DD4E8AF208F7D3C20A124A7
AF79FEF50A2C8DF3BECA47746F637FE061E2F5BFB2A3A7286146F68BF27CCD53
D4A9484A99D41D7BAFE22F7DF84FC0F937237F2A6B4125EA6B0B214427C3F04F
BD4CEC21057B03647597851A86584E4BC44139730C61BD0F477795E51B99E2D4
61B06CA0BF1683C509829012FC74F51BFA7D1C52064D20FF78B3425CFA7FE9D2
F1> |-
/b <1C60D8A8C9B7FD841126BEF9EF1FC02E629FDB9239D81B154A71894F382E
65C949FF68CD4F7135D38F6889DFB5694C8C075DE2AB9E7BFBF48C0B4B242C67
CD4F29DE79377FC85CD1853EA23C6343B3F5F923D84E8876A7E6D727C14C0D9B
5B03683AAE8BCD812201960523BF8B1A7E1C5BA3C178803F97E457CF41DC8669
C41164415A2CF3C7E0103012> |-
/c <1C60D8A8C9B7B4A1B444E4481F557DB89851785F0D4FA9B48EAE6ED59DE7
E8C26004779FBC1217E3CCDFD267E90A5C37D98558F63BC2A475CC0DD50952AE
22FDB6EE090024D04059AF98395BB6E2D02409BA054AB9C67BC89AB747> |-
/d <1C60D8A8C9B7FD841126BEF9EF1FC02E629FDBE4D885B7CD9CE79DCAD738
9DD3C0165A10BD452B557CA39E6697562A05119E645249A7266C29DC0CF93790
F4E4A534C6241BA0665C09128B074BAEA07AC68C11470D1E2FB6D5E650C2847B
6BD8A5D12802CF3E8BE39463282D4CC64A7A43A02DBDF5ED> |-
/e <1C60D8A8C9B7B4A1B444E4471B004D524159C603E0780895C525A997A34E
16B580C00262B5820253D1663BDC5EC4E90F4A586BF2228BA0536D8D49CF6B5F
6CA1F7F35B1021AC3C6EE5FB3E5F8AAEF3F1EDE2972D926E5A2E330E146B199C
D37F4C11FD513971CB> |-
/f <1C60D8A8C9B869C13569449713703284CC671A831B5B2331103FCD202AA0
1F84B29CA4A83FD7B37E9D3997AF3DAEA626C19607584794576E0C1566E37E6A
C8D2C40AAD0D50E864A2036F65D4A71C21F7E7> |-
/g <1C60D8A8C9B7EF3227BEEFC2449EF41459689EAF428BC3F9E9B3D508F281
103DE1E6307F75F79EF9F68ED1229EAA92AB9F71A917600979896BDE5F3F43F0
9A063ED4D0BA4DD287D605238759154EA6AA090C23876962B797187E2E0A5672
AFBB9C2A855D3B92287B78279C46ECD47E1E1F96225EE64E7AEA5D7AA5B8E8FC
C08EEF725FD6CE8443998878D5BE0CA2FC1CCED488D32382FB40E47CA1235040
04DAC376F86DD284> |-
/h <1C60D8A8C9B7825685F30FFABCE44FB7D04B43E2E4607FE9B677F7160B9C
A6191B69E6120559B831535990DC4C5E690D2526B92A072F1C4C045802F8E9FB
74CF0C304E78B43F9BF0960B4940> |-
/i <1C60D8A8C9B8B3754FBD64C2A1D7787BD1964AB5BBD25E3D9A5930D2FBA3
5BA129191D42208D094ADB0645648A5178D35D9CA1> |-
/j <1C60D8A8C9B8B375146B70755C123EEB9EA89592AC3AD2B892DB10EBB309
8AB0FC8F10E4D388301B8251B9F77B5893E7EC5A6D56A039F6CB5E2F469C8440
8B79993E837D90BC7E5A00AA5BF2B7> |-
/l <1C60D8A8C9B8B3754FBD64C3595B4DB0530F094C83288633A3509762F2> |-
/m <1C60D8A8C9B6B41CEC8259143FCF62E7A34D36F7F900CED51F7A268CA732
A877BD770A1F0FE438C0F780253D1B16AEAA6EB75DE7646F14ED0630BF8D6093
EB5C9173AB74D098E966CE3FC3D05F9686DDFE9C7300758668C42CC0BD580A25
6C52F2AF54D6386D4F35C536EFAA19F1AEDD5EC6002B1D335BC17C16D28725C5
6087BB> |-
/n <1C60D8A8C9B7825685F30FFABCE44F8862339115153B66BF441F38CAF9F2
81CCFE6CC3D7AAB132B8DD3995615CC60E8769840B8FA20BB76FA3E16AB30E25
866F57B368F2568C2B7B00A26FE48FEDC1B7> |-
/o <1C60D8A8C9B7EF32A0AD7788C4984B0C749D08D554070E2E7E806C507160
8978931BC94E9F0DE22015F974079FEAE120C7BC9FF56BC131704D3ABDAF27D9
369C38B4A513106B4D166D20E68E2494086B91A48E91610A0BAA0162B8641C11
B6FE> |-
/p <1C60D8A8C9B7FD84961B6E67761716F52D23C34A97EBDC8F07E25312FB90
CD09BCB29DA2AF3D0D9FAFE45ADE31FC7A30680497A83AE0FA953D9F0A6673BE
4309CBA757E63336E008F3ACFAA37F3647FD9B72FF37C855A122D188D632A39A
273380825AEC7AB9137BFA2AA43BAF539B007CD1F4CDCD8FF9> |-
/q <1C60D8A8C9B7FD84961B6E67761716F52D23C33CD9AC2D2E2C4336755962
C8226C87CA9599652F4F86C24E0197CA7C3434C0CBB975FCD2B1F0D370AB9E0A
67CCEE484EA081F0920EF7B46F3AECFF9736C1EC54F2745425AD9EBCCCAEDB9B
F367204C06879976004F87DF1EF5CBA40FDE634DA45088662544AED4791341B1
8883E6C7EC6610C15BFB377CB2> |-
/r <1C60D8A8C9B831A9D4E5ACEC9CEF0F9CE58F46CB18B38F6B60148A3AC67E
0C9B65AC3E9AFC0BCB92CBC28EBBFC56FA5F9A5BCCCBA4611C58C57B1BCDFEBE
D83E03A03CB95E> |-
/s <1C60D8A8C9B75A17C0EE110BE33EDFDAB609CE591A3B5B077A8E621CF899
DDBD22CC6DCD8AD651FD0B24C7C0F1660C799EEE9896DFA867C34259110FB699
C985A8B3AF502322B531904DE956124D1CCA082150A25FCC2DDC5C1D8A033123
BCBFCDE8021D6C846E8443EE109400BF57223AFA28BABAF074F0C344D70F8CE7
36A01595596B470BABF804CB183A> |-
/t <1C60D8A8C9B8425713453F7A330745C2377B31B27932ADA45EB2392FC9B2
976214C0FB6FC5489B4706888BC42CE00476E7F3BAB5F7A6EB40900F45A44FB9
782C0F0356D9601ABC1D71D0ED948BC4> |-
/u <1C60D8A8C9B7825659CB426AB9C6112E6DF39063BE12B063CF226E59BF3E
70F72135B31E614B1D5A7B438E36D8683FB901FBC028500110D3B759004FFFAB
8515B07B75CBBA8D29729A6F232A0F5E9F5D67C10F64> |-
/v <1C60D8A8C9B74CDDE5440F05E883DB8DB87A9C7AF63F938821E4D15EBCDB
180C60F1B83C32673204D819A0AEF0D8FB> |-
/x <1C60D8A8C9B75A17982D11D3B3BA9F118D038B46FBBE256A6F84388E2CAB
82E13130AF71601390E62850B0BADED0283E7BF52EE90D265CF40D5223078576
B4CAE681320455D1> |-
/y <1C60D8A8C9B74CDD95582E15EB22B0A73C670A8F1061CDD6EBD4E918A2D5
3195A8AD1D4DB99CD8EBB9A9D18F01149D26BA9AA6AD696AE862B245F3D4E467
310C93F0059AC1D6972943537D1BAA51> |-
/z <1C60D8A8C9B74CDD96B1F4A6FE2FAF1A8CDA424C478457AB803FDE63032C
24E0D1F7728CFB3B20F79923E490B1AC902F4D0B830781> |-
/aacute <1C60D8A8C9B7B4A1439299FD6041261156E9D4> |-
/eacute <1C60D8A8C9B7B4A1439299FD7CBD06B2255C8C> |-
/iacute <1C60D8A8C9B8B3756431A73D147FB32639DA9D> |-
/ntilde <1C60D8A8C9B78256AE629907E64137BCD2E35CC8> |-
/oacute <1C60D8A8C9B7EF325767B2F0A46892B41C8D9DFB> |-
/uacute <1C60D8A8C9B78256AE629907E64AF60304F0807B> |-
/udieresis <1C60D8A8C9B78256AE629907E64AF609D379D2D0> |-
/bullet <1C60D8A8C9B7A73DB96349318805D706307AE97EB774B75B56FBA43
23757CC9ADA1883635DB4CD72E13244> |-
/exclamdown <1C60D8A8C9B87B5D3541C563CD6138A21B2B77DD10028BDE869
96A7CAFE2E3888F0A1063DC330D6CEC04DEAA707B0C0C79592FC5DEC3062DC0> |-
/quotedblleft <1C60D8A8C9B7299AB43FC1C74AE0045C6B4C75F283971BE94
7004A1CA4E996F5B5FB93382F8ED0F6027448C1F206183C350785BECDDAA7B32
E8E0DE5760787D48744849F2CECD9D4D0016A23F4DB0CD515> |-
/quotedblright <1C60D8A8C9B7299AB43FC1C74AE007C77C47BFD6AFA17F38
A67E043B4AC155D0486E8699C8FB04DE98F1A6FC16F8F0713133B127992D8386
C92A1B2B413EE9C6D08CD982C21CEC178A51348CE2A1C50D1492> |-
/acute <1C60D8A8C9B8B3751743C9EFB2BD129635C72F0AF69BAB23CD6479F0
BAC32310> |-
/tilde <1C60D8A8C9B8B3751757B0B480DD077A7365DAEB6A2C1C54590FB2B1
57BB9FEDA80A8CAA58BEF3E66D0DD2AA5111A12DD4AC6183904B66A6AF7E2E60
1F6F0A3341FDE8B3B4A151A72B5D924E8FFA85> |-
/dieresis <1C60D8A8C9B8B3751752A6A08560ACDB13CBAD5C31B3BF90E4664
97732B80BC705D13CA344280636CDE4EBAF23816290> |-
/dotlessi <1C60D8A8C9B8B3754FBD64C2A1D7784BBE234FC396D5E9263E281
EC45BD224> |-
/.notdef <1C60D8A8C9B854D00D> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/RPTEAG+HelveticaNeue-Light /HIBBAA+HelveticaNeue-Light findfont ct_VMDictPut
/RPTEAG+HelveticaNeue-Light*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /.notdef 
/period /slash /zero /one /two 2{/.notdef}rp /five /six 
/seven /eight /.notdef /colon 6{/.notdef}rp /A /.notdef /C 
/.notdef /E /F /G /.notdef /I 2{/.notdef}rp /L 
/M /N /O /P /.notdef /R /S /T 
12{/.notdef}rp /a /b /c /d /e /f /g 
/h /i /j /.notdef /l /m /n /o 
/p /q /r /s /t /u /v /.notdef 
/x /y /z 12{/.notdef}rp /aacute 6{/.notdef}rp /eacute 3{/.notdef}rp 
/iacute 3{/.notdef}rp /ntilde /oacute 4{/.notdef}rp /uacute 2{/.notdef}rp /udieresis 
5{/.notdef}rp /bullet 27{/.notdef}rp /exclamdown 16{/.notdef}rp /quotedblleft /quotedblright 44{/.notdef}rp]
RPTEAG+HelveticaNeue-Light nf
RPTEAG+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
71.1844 69.072 mo
(Por la contrataci\227n de los Servicios M\227viles Residencial de France Telecom Espa\226a, S.A. \(\322ORANGE\323\) junto con la adquisici\227n de )
[4.04102 3.52297 1.836 1.55778 .925964 3.26396 1.55777 3.26396 3.52298 3.39 1.70302 1.83599 
3.26396 1.70301 3.26396 3.26396 .925964 3.52298 3.39 1.55777 3.64902 3.26396 1.55779 .925949 
3.52298 2.99802 1.55777 4.04102 3.26395 1.836 2.87198 .925964 3.26395 .925964 3.52298 2.998 
1.55779 5.46191 3.52298 2.87196 .925964 .925964 3.26396 2.99799 1.55779 4.30003 3.26395 2.99802 
.925949 3.64902 3.26396 3.39 3.26396 .925964 3.26396 .925949 1.55779 3.64902 3.26396 1.55777 
3.39 1.836 3.26396 3.39 3.26396 3.26396 1.55777 3.52298 3.26396 .925964 3.26398 3.26395 
3.52298 5.46191 1.5578 3.78198 2.99799 3.64905 3.26392 3.39001 3.26398 1.57697 1.5578 4.04099 
1.57697 4.04099 1.57697 1.5578 1.31793 2.22095 4.81793 4.29999 4.04102 4.55896 4.81793 3.78198 
2.22095 1.31793 1.55774 .925964 3.39001 3.38995 1.703 3.52295 1.5578 3.26392 3.52295 3.39001 
1.55774 .925964 3.26398 1.55774 3.26398 3.64899 3.64899 3.39001 .925903 2.99799 .925964 3.26398 
.925903 3.52301 3.38995 1.5578 3.64899 3.26392 0 ]xsh
414.791 69.072 mo
(un dispositivo m\227vil a precio promocional)
[3.38995 3.39001 1.55774 3.64899 .925964 2.99799 3.64899 3.52301 2.99799 .925903 1.703 .925964 
2.87195 3.52295 1.5578 5.46191 3.52295 2.87195 .925964 .925964 1.55774 3.26398 1.55774 3.64899 
1.836 3.26392 3.26398 .925964 3.52295 1.55774 3.64905 1.83594 3.52301 5.46191 3.52295 3.26392 
.925964 3.52295 3.39001 3.26398 0 ]xsh
71.1844 75.7716 mo
(y/o un descuento asociado a tarifas, el Cliente se obliga a cumplir los Compromisos de Permanencia \(en adelante \322CP\323\) recogidos)
[2.90836 1.99832 3.55937 1.68208 3.4264 3.42639 1.68207 3.68542 3.30035 3.03439 3.30036 3.42639 
3.30035 3.42639 1.73941 3.55938 1.68208 3.30035 3.03439 3.55937 3.30035 .962357 3.30037 3.68539 
3.55939 1.68207 3.30035 1.68207 1.73943 3.30035 1.87239 .962357 1.48039 3.30035 3.03439 1.61337 
1.68208 3.30035 .962357 1.68208 4.59534 .962357 .962357 3.30035 3.42641 1.73941 3.30035 1.68207 
3.03439 3.30035 1.68207 3.55937 3.68541 .962357 .962357 3.55937 3.30037 1.68207 3.30035 1.68207 
3.30035 3.42639 5.49832 3.68541 .962357 .962357 1.87241 1.68207 .962357 3.55937 3.03441 1.68207 
4.59534 3.55936 5.49832 3.68542 1.87238 3.55939 5.49832 .962372 3.03436 3.55939 3.03436 1.68207 
3.68542 3.30035 1.68207 4.07739 3.30035 1.87238 5.49829 3.30035 3.42639 3.30029 3.42639 3.30035 
.962341 3.30035 1.68207 1.35431 3.30035 3.42639 1.68207 3.30035 3.68536 3.30035 .962341 3.30035 
3.42639 1.73938 3.30035 1.68207 2.25732 4.59534 4.07739 2.25732 1.35437 1.68207 1.87238 3.30035 
3.30029 3.55939 3.55933 .962402 3.68536 3.55939 0 ]xsh
422.098 75.7716 mo
( en el Formulario de Contrataci\227n que)
[1.68207 3.30035 3.42639 1.68207 3.30029 .962341 1.68207 3.42639 3.55939 1.87238 5.49829 3.42639 
.962341 3.30035 1.87238 .962341 3.55939 1.68207 3.68536 3.30035 1.68207 4.59534 3.55933 3.42639 
1.73938 1.87244 3.30029 1.73944 3.30029 3.30035 .962341 3.55939 3.42639 1.68207 3.68536 3.42639 
0 ]xsh
71.1844 82.472 mo
(ha aceptado y en las presentes Condiciones Legales \(\322CL\323\) ello sin perjuicio de cuanto se dispone en las Condiciones Generales )
[3.4172 3.29115 1.63598 3.29115 3.29116 3.29116 3.67621 1.73021 3.29116 3.67622 3.55017 1.63597 
2.89916 1.63598 3.29115 3.41719 1.63598 .953163 3.29115 3.02519 1.63599 3.67621 1.86319 3.29117 
3.02518 3.29117 3.41719 1.73021 3.29117 3.02519 1.63597 4.58615 3.55017 3.41719 3.67622 .953156 
3.29115 .953156 3.55019 3.41718 3.29117 3.02519 1.63597 3.41721 3.29115 3.55017 3.29117 .953156 
3.29115 3.02519 1.63599 1.34515 2.24814 4.58615 3.41719 2.24814 1.34515 1.63599 3.29115 .953156 
.953171 3.55017 1.63597 3.02521 .953156 3.41719 1.63599 3.67621 3.29117 1.86316 .953186 3.41718 
.953186 3.29114 .953186 3.55017 1.63596 3.67624 3.29114 1.63599 3.29114 3.41721 3.29117 3.41718 
1.73022 3.55017 1.63599 3.02521 3.29114 1.63599 3.67621 .953186 3.02518 3.67621 3.5502 3.41718 
3.29114 1.63599 3.29114 3.41724 1.63599 .953125 3.29114 3.02521 1.63599 4.58612 3.55023 3.41718 
3.67621 .953125 3.2912 .953125 3.55017 3.41724 3.29114 3.02521 1.63599 4.84515 3.29114 3.41718 
3.2912 1.86316 3.2912 .953125 3.29114 3.02521 0 ]xsh
416.237 82.472 mo
(del Servicio M\227vil Prepago de ORANGE)
[3.67621 3.2912 .953125 1.63599 4.06824 3.29114 1.86316 2.89917 .953186 3.29114 .953186 3.55017 
1.63599 5.48907 3.55017 2.89917 .953186 .953125 1.63599 4.06824 1.86316 3.2912 3.67621 3.29114 
3.55017 3.55017 1.63599 3.67621 3.29114 1.63599 4.84515 4.32727 4.06818 4.58618 4.84515 0 
]xsh
71.1844 89.1716 mo
(para los clientes que contraten la Tarifa Ping\237ino y en las Condiciones Generales del Servicio M\227vil Postpago de ORANGE para lo)
[3.62682 3.24176 1.8138 3.24176 1.51337 .903763 3.50078 2.9758 1.51337 3.24176 .903763 .903763 
3.24176 3.3678 1.68082 3.24176 2.9758 1.51337 3.62682 3.3678 3.24176 1.51337 3.24176 3.50078 
3.36778 1.68082 1.8138 3.24176 1.6808 3.24176 3.3678 1.51338 .903763 3.24176 1.51337 3.50078 
3.24174 1.81381 .903748 1.4218 3.24174 1.5134 4.0188 .903763 3.36778 3.50079 3.3678 .903748 
3.3678 3.50078 1.51337 2.84976 1.51337 3.24176 3.3678 1.51337 .903763 3.24176 2.97578 1.51338 
4.53674 3.50076 3.3678 3.62682 .903763 3.24174 .903763 3.50078 3.3678 3.24174 2.9758 1.51338 
4.79576 3.24176 3.3678 3.24176 1.81378 3.24176 .903748 3.24176 2.97577 1.5134 3.6268 3.24176 
.903748 1.51337 4.01883 3.24176 1.81381 2.84973 .903748 3.24176 .903748 3.50079 1.51337 5.43976 
3.50076 2.84976 .903748 .903748 1.51343 4.0188 3.50073 2.97583 1.68079 3.62683 3.24176 3.50079 
3.50073 1.51343 3.62677 3.24176 1.51343 4.79572 4.27783 4.0188 4.53674 4.79578 3.75977 1.51343 
3.62677 3.24176 1.81384 3.24176 1.51337 .903748 0 ]xsh
410.732 89.1716 mo
(s clientes que tengan contratados servicios)
[2.97577 1.51337 3.24176 .903809 .903748 3.24176 3.3678 1.68079 3.24176 2.97577 1.51343 3.62677 
3.3678 3.24176 1.51343 1.68079 3.24176 3.3678 3.50079 3.24176 3.3678 1.51337 3.24176 3.50073 
3.3678 1.68085 1.81378 3.24176 1.68079 3.24176 3.62683 3.50079 2.97577 1.51337 2.97583 3.24176 
1.81378 2.84973 .903809 3.24176 .903748 3.50073 0 ]xsh
71.1844 95.8712 mo
(postpago. \(Conjuntamente \322CCGG\323\))
[3.66821 3.54218 3.01719 1.72221 3.66821 3.28315 3.54218 3.54218 1.59618 1.59618 1.33716 4.57814 
3.54217 3.40919 .94516 3.40919 3.40919 1.72221 3.28316 5.48112 3.28316 3.40918 1.72221 3.28316 
1.59616 2.24014 4.57813 4.57814 4.83716 4.83714 2.24014 0 ]xsh
%ADOBeginSubsetFont: HIBBAA+HelveticaNeue-Roman Initial
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /HIBBAA+HelveticaNeue-Roman def
/FontInfo 6 dict dup begin
/Notice (Copyright (c) 1988 Adobe Systems Incorporated.  All Rights Reserved.Helvetica is a registered trademark of Linotype AG and/or its subsidiaries.) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 71 /G put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 118 /v put
dup 151 /oacute put
dup 159 /udieresis put
def
/UniqueID 20083 def
/FontBBox {-28 -210 791 908} def
end
systemdict begin
dup /Private
8 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-17 -0 714 731 517 529] def
/OtherBlues [273 280 380 387 -210 -198] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
45 dict dup begin
/space <1C60D8A8C9C4A637> |-
/comma <1C60D8A8C9B854D088EA7EB6675C5EA96A8A91573407E6DCF13FBB96
B02EF3507E2B385EAEB354BFDC197F> |-
/hyphen <1C60D8A8C9B7361F0233AF69090D8ECAE31A9DE2627FA300EAB5349
9411C> |-
/period <1C60D8A8C9B854D088EA7EB6675C5EA96A8AA06A11CFB5862004787
8C4> |-
/one <1C60D8A8C9B7EF327C10274ACE3AF096CC06ECC6A1FDB54F82BF82AF46
240A5247573E9E02A79668EFDE205282> |-
/two <1C60D8A8C9B7EF32574661BA14F3CD118D98149F1C079B1FA7CC393BA1
A8542F01925726313A147539BD7098A31AE3BC8326DFFC67329A3FB440CD9927
B22413EC96BA55FACDA5BD1056A86706B6A6930A53C7F2B4938AFFA68B72A3A8
055AFA> |-
/three <1C60D8A8C9B7EF32A30FDF41D2AA7A047EF89D7DB5335B3C57271500
04C6AC573F9686D737551D1298FE18C0CC29FB2681D0F650C17F208183791643
BE6EBC296565839A8FBFCF9047A76E7803C3ED6C8C2E878C383BAD19D5F1362D
2CEDFAF6E62EEA6E796C977B62D6E71031B5F2B8669BCEEF32BBB3ED47B680EF
EB519ECAAD1F43C304CB4E5AC4185990A0A0AE2E4E407BBC5B7FD2> |-
/four <1C60D8A8C9B7EF327C1027456C3D115195F0F1719A1D162CE6D9964C5
8D4B1B14779722028390C0C3EA9CF1184B91A36FE2082F7F8EF539EE699B014F
DAE00640E18> |-
/five <1C60D8A8C9B7EF32A30FDF4EAEE3CEFCE7253DB6D0CE95F7FD971731C
8896CC7C6A3E31C0472E216681719B0CA5E217D5CE08BE67FCBDAFBB3E804F65
949D5FD0135DA3A3EDA11C134951DECEF875C8A9DDC28CF9555632507FDBED95
769773AE317069BB15DF166FB71E50BE96C1A> |-
/A <1C60D8A8C9B67DB5DFC07A3352648048B989C881F1D77E85E3FC1B35E4DB
0D5CB1BD5888217B0E4FE6F57A0D0C24C2042CF26E32487D11D94179C273871E
B2> |-
/B <1C60D8A8C9B620B78F80EE0CAC255A65B162516E7DBE65CE2F4FB479487A
8A118DDD04BF075EC753D79D584330022F1CEE72838DFE2D66B3AF6E31874EE7
A65A938B020B455500DA24D5224B212C7C6C990DF401D24A4FE988AEBFC44399
DF5924E9E333541F2AD31D78F0E3CB08F3CF3596E8F354DC6B378BDF8C429C3B
06642BAD131446> |-
/C <1C60D8A8C9B6079FEF8760F9C1321FA433F0BBFABA1E9A11B46D98B43FEE
D25A500D36EB9FF9E971969DD91574D6037D437895A047EF9AA87988E366105B
F7543D32AE2E7C04B885D5E2EAECF5BEDCD4A5FD5141E8DC2CE09D8B18D88C14
B4EEBEF2> |-
/D <1C60D8A8C9B635A4D734FEE524B90076D40977669A4A566C3E61590FFB6F
CDC3D041C91C3712133D40C7574FCFB64F8FF5F6415C095B859EE743A161F77F
B515E377AFD855A5577AE0> |-
/E <1C60D8A8C9B7D8BE6A0467BB33B79637C4DC4ECCF8EB661C426DFBB3E2A6
642D5225E7573C948A918EDA893C4A7BFAB89B89C7578231FE3C> |-
/G <1C60D8A8C9B6EA91968DE5AA0C5FEEA69798F159D556A46F3345AA5789FA
495E9E7C89F201AC797503A171AF92C69ACDF2233974BC19C1EB06A305919803
ADC06AC3D19A1EA5729C362CA3CA21B9900074E1FD1DC48E41BDE67031887B0D
BF088D172616FEA6D3B506EA4FB881AC28DB9834EA2BFD3B493281E3A3> |-
/I <1C60D8A8C9B869C135694496FC80660E2CA716B2B3027EC53A1ADA319C> |-
/L <1C60D8A8C9B7EF32574B694376B229839999C52AD126014A4E82E3EF1941
32D9C5D9BA> |-
/M <1C60D8A8C9B69A173543128CC0784E19A3E668942DB3268DA73ED4DD8AA9
0446E8957DBD8BC914F30780117F98B4CE10CFC50270084CDB5D4491150869EC
396EBB98F61B1474D5C8330480C5625D8BFC158CF78B2D489D917C> |-
/N <1C60D8A8C9B6079F3517E074AC7F02ABBE6FFD53C20C1832F87BB3AE6188
8AEEDAD353316F6A9099015C8E10F318FED6CD4BF03178071941E2> |-
/O <1C60D8A8C9B6ED05589977F626CB6A269556E7221F6E03CF1DC1BE3C0470
15F23AEB89943170BA4C346A9DCE27DE74621613ADA8CF0C4A6ADFCA9FDE24F9
D680E034C01C08712DC60C90FA059814DAAC1A75E64322C9EEEC3CC276670769
BC2688BD70> |-
/P <1C60D8A8C9B67DB5DFC07A33817ED0FE66A0A180DEBB0D8B0645A556A3F2
00FCC87D9D3931583CD651B820A4CECCA014724B4871C94B460799B849FD481E
29400AAF99CF3E3AA0C6C9AA8EF3A33981> |-
/R <1C60D8A8C9B620B7A43CC5158F274BD61416B8DF2CB03F76C4C846578FB7
14CAFE5419C03938205ED758851FFB113DD92CF140B5269E8D443121A8652906
DE2154320DA7B7C0A20108046C13ACF06045310A1C9B66AC689086B08A13EE20
FFF00901E6B8EE765B9F581AEB9A54478BBDE3347B48DD296115B9757046A188
6A2A8FDEE320C14487329C4B53F2CD9F> |-
/S <1C60D8A8C9B67DB586EDCE8B9E2AC297E582F6CE412814A0ED67B0FCB472
30BA9D98C6AA95A6BF5CBD5416B0DE2ED6CADA29936E2D6AA5C940B93B8A85EF
C3BDB87396D55E2E55B1A3C34CBA1FFF84B99AF4A3D4FC0596A3358CC060AF21
C282D8109788F28CEF0BEA858B35C8E4BFD5307A2DA1159838644C9E91DAF6CF
1172E1C9D0C31E2B58506FA967E6A5A2DF6F0D3E1BF4D6> |-
/T <1C60D8A8C9B7FD84CD08F29211E1CE435942E6F7E1D0885BDC50D0FDB2F5
1B8F7DF6955631DCE1888CDE> |-
/U <1C60D8A8C9B6079FEF8760F980080AB19BF81187DA4561E6D60C3DD3289A
683B1CF9958FA20D60E0BD7BFA0F7894018155A0ED47DA64CDC551FBFEB212C2
7851CA161A030D233B> |-
/a <1C60D8A8C9B782565A0F44FF3FF79D86A76E31D55C5CB721C885F9335614
134A94F1FA53B3C66614E6FCA74364946171FBE952C85E60266CBABC0F2D44BF
A489025D0AC535F7C1EC804032978FD9E28F98356AA32EC71F558F1B40A15CD5
8497AFB04C3029270683CB507CA984411C3FC4F14F31D010277AF9D08432C067
556A9E76491FF622F635B5D17909B1CEAF3CF80E0C5BD2361A77BF51CAEDDCFE
3F919CA39B0DA7C5D4D0> |-
/b <1C60D8A8C9B7CA64A2BAA541F79711E45D5C1D8873ADC85A667E2EB557EA
79394AAF7B956A9747ABE804ECE3B9072797BEE49B46E87994AAA4027D041AD2
71C5194EAFA62767694BE2CB59B5E8ADAB9A1DAB920FBD6A2D0B38E2543F2954
909B8195B425924696D3C82187E0FF3E1C400B836436CA43E90F27336F7C29FA
156C62F555EA8E76> |-
/c <1C60D8A8C9B782565A0F44FF3FF79D86A76E314A50283B7BF36B7D7827B1
E40B28772D8C396314E5C7227F8B86505F9D1F1D0D048E01A343E0AFA701795B
509767B97C38DF595755267C314BBE63A0876B669F949368EF> |-
/d <1C60D8A8C9B7CA64A2BAA541F79711E45D5C1DE92E8F99455DE774011C7C
8026D7870A16B0504916579F11B86525DE399B8C2E127DB7D84660C489FBAFC2
DFB0B10A8F81850C633230D8A784598BE09197E3B332BEF455FB9E7259A469AC
4FAEF0FA80A50AD56D5B15D3BD277AC8280B57A0EE635771AC6CB4C43708F58D
46C5048DD8> |-
/e <1C60D8A8C9B782565A0F44F0302B83DEA18A9E45B5689F7EAB30463ECA57
32F60F41D03338E7E22B5322EC6372E5769F0C8388130702227553FBF766496F
FEAA5C51915E26BDDED417C3E122BD2FF21DAFB03A61DE680B21981F408B682D
FDFA76FAFE7DE8658863F5563E96> |-
/f <1C60D8A8C9B8425736C8FDF0CEB5D9BE550FA9AD58C956A28E666EDBEB89
152755BF252321D927292D3909BB94247F244D5C30CAC5167D2127C29B29D6CE
3390FABBD5E0EE182E2A75> |-
/g <1C60D8A8C9B7FD84964396C929E2B9A02A33EABD1403FBCC31D68AEEA71E
7280B0C83081F9BBA9C90B32CC38468A06220B26B45CD586DB17D8B2B8CE8B89
96CED11555BF4FF2502255FA2E2EFCBEF8DAC4B0A0A98EB9E9DB3AD4CF78164D
67F99F3A1B4E4E7C96D8A2E8D0FA9FE7A097B6C246D44F830FFBD6E4EAAB7165
2EFD402049D0B6F6A42C341EBE84C02A27731C1425B3FE5D946BB1620E4E1454
6B09F3F7C3D3E84B0C7B6C309BF9B55B359685EB> |-
/i <1C60D8A8C9B88C082599D5E950391FCAB66B5B2D29D35D1A155318D65C84
E2D175C0D737D5750120DFF3993BC4C687443C97CEB0EC> |-
/l <1C60D8A8C9B88C082599D5E8A418F1DC641F88208BE042DF9BCA86A0D7> |-
/m <1C60D8A8C9B6889AFC1D997FC1D5C87F6FBD969490D52800121FEE630825
4F04E5D2974820CD4ED8FFE2DABA7838D26F4D3C129F1738CB83FF523A6D3932
925B034283D8328A66DB8F7B5954B42CC7FF28F667342591866418F66434B5C0
6BB324ECCA8895B5E336722849E58538C68B852CDB24A530B2E8> |-
/n <1C60D8A8C9B7EF327C10274A04C52E29DA6D62ED663BE08D4147C757D157
2AAEC36FBDA205EF77A6BF17B1378D1B59FE8440ADB18679F2047B393BE59039
38CF15EA106F153207927FE6B9ACDBED> |-
/o <1C60D8A8C9B7FD841262BACCF9BE9CBF3B3457AB27787C73E0674F33EA4B
8692DC269761987488F4EB83E73305EFC34C60CB9046C7444019208F46CD0804
4D254DA27A31487E897021112EC48FD0DDE352849E1627ED83> |-
/p <1C60D8A8C9B7CA642635ED2640AFBBBDBA4375533E709967C6E296806A7C
635D92119D43C6165458C32D45B1674504E28CEEB57403E5FC3338F12154F663
9BBEB3ABAA0FBF5F5BAC570B541C114FD05865579917B7F577DD134557FE6510
DFABED396AE94881343DA8BAA072F5C73714D780CC> |-
/r <1C60D8A8C9B81F2C6DADD0305F126DDC51582F57D38245006FB564A01DF5
4F3EFD26D8461D5E5A85CC94249229EAC60F3A66613F5BC08451E9995E5AC5BF
11CC08A08467> |-
/s <1C60D8A8C9B7A73D31AAF7035A232CCC294C11EBA1829FEF85D4DFA904AE
7753DE923C6DA7F4ECDA4200B95E664576C913AD654112CB828B11B52594C091
8E886537BECB2D87C1D62658F33F952897768D9408A353FCC304FFAFF2C6C4ED
7375808CF4AEC49DC25CFC6F5FFE882D42B8DB5D51F13CB29AF0492C88A7EE9C
F164D70BB92544> |-
/t <1C60D8A8C9B831A9FFE9D7A47E1DCC5E5C070901296475C163353217BEFB
B4E6ABF1EA9649F0E58A9C73F33EAD0E62C588043313C609E3339C82B94F6E79
FE97> |-
/v <1C60D8A8C9B7A73DEE9439F98CDA5041A5279484115913728176152A4C1A
4A2BBCD12BDA521929DEDB3BC52F23A652D53A> |-
/oacute <1C60D8A8C9B7FD84E650524899981C8B0ABF6027> |-
/udieresis <1C60D8A8C9B7EF325767C7E111D81F8840812814> |-
/u <1C60D8A8C9B7EF32A30FDF4E2BE49BA4832F6985DE18054E8E86E4208CDC
E1F47B7BD726AD81F7F51E58E5548808D32C107458071DFC8F6BA26CE9FD4F10
CB30FA991486851D9F6D1F91D9B567B2D5E73A> |-
/acute <1C60D8A8C9B88C087D04352FA52A8035ABDB30189E8B6768186E20D2
C8D4FFCFCB> |-
/dieresis <1C60D8A8C9B88C087D007A44C8EF632608F9F13285D4864BBAFD8
D21A69E5909D1CDC6AD842053938BF56E688FFCFD1F69> |-
/.notdef <1C60D8A8C9B854D00D> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/RPTEAH+HelveticaNeue-Roman /HIBBAA+HelveticaNeue-Roman findfont ct_VMDictPut
/RPTEAH+HelveticaNeue-Roman*1 
[32{/.notdef}rp /space 11{/.notdef}rp /comma /hyphen /period 2{/.notdef}rp /one 
/two /three /four /five 11{/.notdef}rp /A /B /C 
/D /E /.notdef /G /.notdef /I 2{/.notdef}rp /L 
/M /N /O /P /.notdef /R /S /T 
/U 11{/.notdef}rp /a /b /c /d /e /f 
/g /.notdef /i 2{/.notdef}rp /l /m /n /o 
/p /.notdef /r /s /t /.notdef /v 32{/.notdef}rp 
/oacute 7{/.notdef}rp /udieresis 96{/.notdef}rp]
RPTEAH+HelveticaNeue-Roman nf
RPTEAH+HelveticaNeue-Roman*1 [7 0 0 -7 0 0 ]msf
71.1844 109.271 mo
(A.- CONDICIONES COMUNES A LOS COMPROMISOS DE PERMANENCIA)
[4.18609 1.59613 2.37318 1.59612 4.70413 4.97009 4.70412 4.57809 1.46315 4.70412 1.46314 4.97009 
4.70412 3.92708 4.18609 1.59612 4.70413 4.97008 5.74716 4.70412 4.70412 3.92708 4.1861 1.59612 
4.1861 1.59613 3.54211 4.97009 4.1861 1.59612 4.70413 4.97009 5.74715 4.18608 4.44511 4.97008 
5.74715 1.46315 4.18608 4.97009 4.18608 1.59613 4.57809 3.92706 1.59613 4.1861 3.92706 4.44511 
5.74716 4.18607 4.70413 3.92706 4.70413 4.70413 1.46313 0 ]xsh
71.1844 115.971 mo
(a.1)
[3.45649 1.64347 0 ]xsh
RPTEAG+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
79.8731 115.971 mo
(. Atendida la relaci\227n funcional con la contrataci\227n del servicio m\227vil ORANGE, los dispositivos m\227viles adquiridos por el Clie)
[1.64347 1.83257 4.10751 1.76951 3.33045 3.4565 3.71551 .992455 3.71552 3.33045 1.83257 .992455 
3.33046 1.83257 1.9025 3.33045 .992455 3.33045 3.33045 .992462 3.58946 3.4565 1.83257 1.5105 
3.4565 3.4565 3.33046 .992447 3.58948 3.45651 3.33044 .992462 1.83258 3.33044 3.58948 3.4565 
1.83257 .992462 3.33046 1.83257 3.33046 3.58948 3.4565 1.7695 1.9025 3.33044 1.7695 3.33044 
3.33047 .992432 3.58948 3.45648 1.83258 3.71552 3.33044 .992462 1.83258 3.06448 3.33044 1.9025 
2.93845 .992432 3.33047 .992432 3.58948 1.83258 5.52841 3.58948 2.93845 .992462 .992432 1.83258 
4.88446 4.36652 4.10751 4.62543 4.88446 3.84848 1.64346 1.83258 .992462 3.58945 3.06451 1.83255 
3.71552 .992462 3.06451 3.71552 3.58948 3.06451 .992462 1.76953 .992462 2.93845 3.58951 3.06448 
1.83258 5.52844 3.58948 2.93845 .992462 .992493 3.33044 3.06451 1.83255 3.33047 3.71552 3.71552 
3.45651 .992462 1.9025 .992462 3.71552 3.58948 3.06451 1.83258 3.71552 3.58948 1.9025 1.83255 
3.33047 .992462 1.83258 4.62543 .992462 .992462 0 ]xsh
418.929 115.971 mo
(nte a precio promocional y destinados)
[3.45651 1.7695 3.33047 1.83258 3.33044 1.83258 3.71552 1.9025 3.33047 3.33044 .992462 3.58948 
1.83258 3.71552 1.9025 3.58948 5.52844 3.58948 3.33047 .992462 3.58948 3.45648 3.33047 .992462 
1.83258 2.93845 1.83258 3.71552 3.33047 3.06448 1.76953 .992462 3.45651 3.33044 3.71552 3.58948 
0 ]xsh
71.1844 122.671 mo
(exclusivamente al mismo, tambi\216n, por razones de seguridad y en evitaci\227n de usos indebidos por terceros, son \234nicamente utiliz)
[3.31985 3.05389 3.31985 .981857 3.44589 3.05389 .981865 2.92786 3.31985 5.51782 3.31985 3.44589 
1.75891 3.31986 1.77946 3.31985 .981857 1.77948 5.51782 .981857 3.05389 5.51782 3.57887 1.63287 
1.77948 1.75891 3.31985 5.51782 3.70491 .981857 3.31985 3.44589 1.63287 1.77948 3.70491 3.57887 
1.89189 1.77946 1.89191 3.31984 2.92786 3.57887 3.44588 3.31984 3.05389 1.77948 3.70491 3.31985 
1.77948 3.05388 3.31985 3.57886 3.44589 1.89189 .981842 3.70491 3.31984 3.70491 1.77948 2.92786 
1.77948 3.31984 3.44589 1.77948 3.31987 2.92783 .981842 1.75891 3.31985 3.31985 .981842 3.57889 
3.44586 1.77948 3.7049 3.31989 1.77948 3.44586 3.05389 3.57886 3.05389 1.77948 .981873 3.44592 
3.7049 3.31989 3.7049 .981873 3.70493 3.57889 3.05389 1.77948 3.7049 3.57892 1.89191 1.77948 
1.75891 3.31982 1.89191 3.31989 3.31982 1.89191 3.57892 3.05389 1.63287 1.77948 3.05389 3.57886 
3.44592 1.77948 3.44592 3.44586 .981873 3.31989 3.31982 5.51788 3.31982 3.44592 1.75891 3.31989 
1.77948 3.44586 1.75891 .981873 .981873 .981873 0 ]xsh
423.928 122.671 mo
(ables para el servicio contratado con)
[3.31989 3.7049 .981873 3.31989 3.05389 1.77948 3.7049 3.31989 1.89191 3.31982 1.77948 3.31989 
.981873 1.77948 3.05389 3.31982 1.89191 2.92786 .981873 3.31989 .981873 3.57886 1.77948 3.31989 
3.57886 3.44592 1.75891 1.89191 3.31982 1.75897 3.31982 3.70496 3.57886 1.77948 3.31989 3.5788 
0 ]xsh
71.1844 129.37 mo
(ORANGE por el Cliente. Si el Cliente no hubiera adquirido ning\234n CP y desea desbloquear su dispositivo m\227vil del Servicio prest)
[4.84946 4.33154 4.07251 4.59045 4.84946 3.81349 1.65778 3.68052 3.55447 1.86749 1.65778 3.29546 
.957466 1.65778 4.59044 .957458 .957466 3.29546 3.42149 1.73451 3.29546 1.60849 1.65778 4.07251 
.957458 1.65778 3.29547 .957458 1.65778 4.59044 .957458 .957474 3.29544 3.42151 1.73451 3.29546 
1.65778 3.42151 3.55447 1.65778 3.42149 3.42149 3.68051 .957458 3.29546 1.86749 3.29546 1.65779 
3.29546 3.68051 3.68051 3.42149 .957458 1.86749 .957458 3.68051 3.55447 1.65778 3.42149 .957458 
3.42149 3.55447 3.42149 3.42149 1.65778 4.59044 4.07251 1.65778 2.90347 1.65778 3.68051 3.29547 
3.02948 3.29547 3.29544 1.65781 3.68048 3.29547 3.02948 3.68054 .957458 3.55444 3.68054 3.42145 
3.29547 3.29547 1.86749 1.65778 3.02948 3.42151 1.65778 3.68048 .957458 3.02948 3.68054 3.55444 
3.02954 .957458 1.7345 .957458 2.90344 3.5545 1.65771 5.49347 3.55444 2.90344 .957458 .957458 
1.65778 3.68054 3.29547 .957458 1.65771 4.07251 3.29547 1.86749 2.90344 .957458 3.29547 .957458 
3.5545 1.65778 3.68048 1.86749 3.29547 3.02948 0 ]xsh
414.529 129.37 mo
(ado por ORANGE y/o solicitar la baja del)
[3.29547 3.68054 3.55444 1.65778 3.68048 3.5545 1.86749 1.65778 4.84943 4.33154 4.07251 4.59045 
4.84943 3.81354 1.65771 2.9035 1.99341 3.55444 1.65778 3.02954 3.55444 .957458 .957458 3.29547 
.957458 1.7345 3.29547 1.86749 1.65778 .957458 3.29541 1.65778 3.68054 3.29547 .957458 3.29541 
1.65778 3.68054 3.29541 0 ]xsh
71.1844 136.07 mo
(Servicio, podr\207 hacerlo en cualquier momento siguiendo las instrucciones expresadas en el apartado a.2.1., sin necesidad de abo)
[4.21101 3.43395 2.00598 3.04195 1.09595 3.43394 1.09595 3.69297 1.74697 2.34987 3.819 3.69297 
3.81901 2.00599 3.43394 2.34987 3.55999 3.43395 3.43394 3.43394 2.006 1.09595 3.69298 2.34985 
3.43396 3.55998 2.34987 3.43396 3.55998 3.43394 1.09595 3.81902 3.55998 1.09596 3.43394 2.00598 
2.34988 5.63191 3.69296 5.63191 3.43396 3.55998 1.87302 3.69296 2.34987 3.16798 1.09596 3.69296 
3.55998 1.09596 3.43394 3.56 3.819 3.69296 2.34987 1.09596 3.43394 3.16798 2.34987 1.09596 
3.55998 3.16798 1.87302 2.006 3.55997 3.43396 3.43393 1.09595 3.69299 3.56 3.43396 3.16797 
2.34985 3.43396 3.168 3.819 2.00598 3.43393 3.168 3.4339 3.81903 3.4339 3.16797 2.34991 
3.43396 3.55994 2.34991 3.43396 1.09595 2.34985 3.43396 3.81903 3.4339 2.00598 1.87299 3.43396 
3.81897 3.69299 2.34985 3.43396 1.74695 3.69299 1.74695 3.69293 1.74695 1.74695 2.34991 3.16797 
1.09595 3.56 2.34985 3.56 3.43396 3.43396 3.4339 3.16797 1.09595 3.81903 3.4339 3.81903 
2.34985 3.81903 3.43396 2.34985 3.43396 3.81897 0 ]xsh
447.114 136.07 mo
(nar las cantidades citadas.)
[3.55994 3.43396 2.00598 2.34985 1.09595 3.43396 3.16797 2.34991 3.43396 3.43396 3.55994 1.87299 
1.09595 3.81903 3.4339 3.81903 3.4339 3.16797 2.34991 3.43396 1.09595 1.87299 3.4339 3.81903 
3.4339 3.16803 0 ]xsh
RPTEAH+HelveticaNeue-Roman*1 [7 0 0 -7 0 0 ]msf
71.1844 142.77 mo
(a.2.)
[3.42272 1.6097 3.5557 0 ]xsh
RPTEAG+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
81.3813 142.77 mo
( En caso de incumplimiento de los CP, el Cliente abonar\207 a ORANGE las cantidades que se citan en las presentes CL y todo ello e)
[1.66337 3.81469 3.42269 1.66337 3.29665 3.29665 3.03069 3.55567 1.66337 3.68171 3.29665 1.66338 
.958656 3.42269 3.29665 3.42268 5.49461 3.68172 .958649 .958664 5.49461 .958649 3.29665 3.4227 
1.7357 3.55568 1.66336 3.6817 3.29666 1.66336 .958649 3.55568 3.03069 1.66336 4.59164 4.0737 
1.60968 1.66336 3.29666 .958649 1.66336 4.59164 .958664 .958664 3.29666 3.42268 1.73572 3.29666 
1.66338 3.29665 3.68172 3.55568 3.4227 3.29665 1.8687 3.29666 1.66338 3.29666 1.66338 4.85065 
4.33273 4.07372 4.59164 4.85065 3.8147 1.66339 .958649 3.29666 3.0307 1.66336 3.29666 3.29666 
3.4227 1.73572 .958649 3.68173 3.29663 3.6817 3.29666 3.0307 1.66336 3.68173 3.4227 3.29663 
1.66339 3.0307 3.29666 1.66336 3.29669 .958618 1.73572 3.29669 3.42267 1.66339 3.29663 3.42273 
1.66333 .958679 3.29669 3.0307 1.66333 3.6817 1.86871 3.29669 3.0307 3.29663 3.42267 1.73572 
3.29669 3.0307 1.66333 4.59167 3.42267 1.66339 2.90466 1.66339 1.73572 3.55566 3.6817 3.55566 
1.66339 3.29663 .958679 .958679 3.55566 1.66339 0 ]xsh
433.165 142.77 mo
(n funci\227n del tipo de compromiso)
[3.42273 1.66333 1.47675 3.42267 3.42267 3.29669 .958679 3.55566 3.42267 1.66339 3.6817 3.29669 
.958618 1.66339 1.73572 .958679 3.6817 3.55566 1.66339 3.6817 3.29663 1.66339 3.29669 3.55566 
5.49463 3.6817 1.86871 3.55566 5.49463 .958618 3.0307 0 ]xsh
71.1844 149.47 mo
(adquirido y el plazo de cumplimiento del compromiso pendiente de finalizar.  En especial, se considerar\207 que el Cliente ha incu)
[3.31474 3.69981 3.6998 3.44078 .976753 1.88678 .976746 3.6998 3.57377 1.75386 2.92275 1.75386 
3.31474 .976753 1.75387 3.6998 .976746 3.31474 2.92275 3.57376 1.75387 3.6998 3.31474 1.75386 
3.31474 3.4408 5.51271 3.69981 .976746 .97673 5.51271 .976746 3.31476 3.44078 1.7538 3.57376 
1.75388 3.6998 3.31474 .976746 1.75386 3.31476 3.57376 5.51273 3.6998 1.88678 3.57378 5.51271 
.976761 3.04878 3.57376 1.75386 3.6998 3.31476 3.44078 3.69981 .976746 3.31474 3.4408 1.7538 
3.31476 1.75385 3.69981 3.31474 1.75386 1.49478 .976776 3.44077 3.31473 .976776 .976746 2.92276 
3.31476 1.88678 1.62775 1.75388 1.75388 3.83276 3.4408 1.75385 3.31476 3.04877 3.69977 3.31476 
3.31476 .976715 3.31473 .976746 1.62775 1.75388 3.0488 3.3147 1.75391 3.3147 3.57379 3.44073 
3.04877 .976746 3.69983 3.3147 1.88678 3.31476 1.88678 3.3147 1.75391 3.69977 3.4408 3.3147 
1.75391 3.3147 .976746 1.75391 4.60968 .976746 .976746 3.31476 3.44073 1.75385 3.3147 1.75391 
3.44073 3.31476 1.75385 .976746 3.4408 3.3147 0 ]xsh
414.37 149.47 mo
(mplido los CP si antes de transcurrido el)
[5.5127 3.69983 .976685 .976746 3.69983 3.57373 1.75385 .976746 3.57379 3.04877 1.75385 4.60974 
4.0918 1.75385 3.04877 .976746 1.75391 3.3147 3.4408 1.75378 3.31476 3.04877 1.75385 3.69983 
3.3147 1.75391 1.75378 1.88678 3.3147 3.4408 3.04877 3.31476 3.44073 1.88678 1.88678 .976746 
3.69977 3.57379 1.75385 3.31476 0 ]xsh
71.1844 156.169 mo
(plazo comprometido, se da alguna de las siguientes circunstancias:)
[3.66821 .945145 3.28315 2.89114 3.54217 1.59616 3.28315 3.54216 5.48112 3.66821 1.85518 3.54216 
5.48112 3.28315 1.7222 .945145 3.66821 3.54217 1.59616 1.59616 3.0172 3.28314 1.59616 3.6682 
3.28314 1.59618 3.28314 .945145 3.54218 3.40918 3.40918 3.28314 1.59616 3.66821 3.28314 1.59616 
.94516 3.28314 3.01718 1.59618 3.01718 .945145 3.54218 3.40918 .945145 3.28316 3.40918 1.7222 
3.28314 3.01718 1.59618 3.28314 .945145 1.85518 3.28316 3.40918 3.40918 3.01718 1.72221 3.28314 
3.40918 3.28314 .94516 3.28314 3.01718 0 ]xsh
84.9344 162.869 mo
(i\).)
[.767204 1.15919 0 ]xsh
92.6844 162.869 mo
(Solicita desbloquear el terminal m\227vil. Para ello, el Cliente deber\207 contactar con el n\234mero 651 822 222 y seguir las instrucci)
[4.27792 3.75989 1.16286 1.16287 3.50086 1.16286 1.93993 3.50087 2.68448 3.88593 3.50086 3.2349 
3.88593 1.16286 3.75989 3.88593 3.62689 3.50087 3.50087 2.07291 2.68448 3.50087 1.16287 2.68448 
1.93993 3.50087 2.07291 5.69884 1.16287 3.62689 3.50087 1.16287 2.68448 5.69884 3.75989 3.10887 
1.16287 1.16286 1.8139 2.68448 4.27792 3.50085 2.07291 3.50087 2.68448 3.50087 1.16287 1.16287 
3.75989 1.81389 2.68448 3.50087 1.16286 2.68449 4.79585 1.16286 1.16287 3.50087 3.62691 1.93994 
3.50085 2.68448 3.88593 3.50089 3.88593 3.50085 2.07288 3.50089 2.68448 3.50085 3.75989 3.62692 
1.93991 3.50089 3.50089 1.93988 3.50089 2.07291 2.68448 3.50085 3.75986 3.62689 2.68451 3.50085 
1.16284 2.68451 3.62689 3.62689 5.69885 3.50085 2.07288 3.75989 2.68445 3.75989 3.75989 3.75989 
2.68445 3.75989 3.75989 3.75989 2.68445 3.75989 3.75989 3.75989 2.68445 3.10889 2.68451 3.23486 
3.50085 3.75989 3.62689 1.16284 2.07288 2.68451 1.16284 3.50085 3.23492 2.68451 1.16284 3.62689 
3.23486 1.93994 2.07288 3.62689 3.50085 3.50085 0 ]xsh
467.565 162.869 mo
(ones de ORANGE.)
[3.75989 3.62689 3.50085 3.23492 2.68445 3.88593 3.50085 2.68451 5.05487 4.53693 4.27789 4.79584 
5.05487 4.01886 0 ]xsh
84.9344 169.569 mo
(ii\).)
[.825966 .825966 1.21796 0 ]xsh
92.6844 169.569 mo
(Solicita la baja del Servicio \(incluido el caso de migraci\227n al servicio prepago de ORANGE desde el Servicio postpago\).)
[4.06022 3.54218 .945168 .945168 3.28316 .945168 1.72222 3.28316 1.59619 .94516 3.28317 1.59618 
3.66822 3.28316 .945168 3.28317 1.59618 3.66823 3.28316 .945175 1.59619 4.06021 3.28317 1.85519 
2.89117 .94516 3.28317 .94516 3.54219 1.59618 1.33717 .945175 3.40919 3.28316 .945175 3.40921 
.945175 3.66821 3.54218 1.59619 3.28317 .94516 1.59619 3.28317 3.28316 3.0172 3.54219 1.59618 
3.66821 3.28317 1.59616 5.48114 .94516 3.54218 1.85519 3.28316 3.28316 .94516 3.54219 3.40919 
1.59618 3.28316 .94516 1.59618 3.0172 3.28316 1.85518 2.89117 .94519 3.28314 .94516 3.54218 
1.59616 3.66821 1.85522 3.28314 3.66821 3.28317 3.54218 3.54218 1.59616 3.66821 3.2832 1.59616 
4.83716 4.31924 4.06018 4.57819 4.83716 3.80121 1.59619 3.66821 3.2832 3.01721 3.66821 3.28317 
1.59616 3.2832 .94519 1.59619 4.06018 3.2832 1.85522 2.89117 .945129 3.2832 .94519 3.54218 
1.59619 3.66821 3.54218 3.01721 1.72223 3.66827 3.28314 3.54218 3.54224 1.33716 0 ]xsh
84.9344 176.269 mo
(\301\301\301\).)
[1.24677 1.24677 1.24677 1.24677 0 ]xsh
92.6844 176.269 mo
(Solicita la baja de Tarifa o no realiza la correspondiente Recarga Autom\207tica en el caso de que el Cliente tuviese contratada l)
[4.13492 3.61687 1.01986 1.01987 3.35786 1.01986 1.79691 3.35786 1.96968 1.01986 3.35786 1.96968 
3.74291 3.35786 1.01985 3.35786 1.96968 3.74292 3.35786 1.96968 3.61687 3.35786 1.9299 1.01985 
1.5379 3.35786 1.96967 3.61688 1.96968 3.4839 3.61688 1.96967 1.9299 3.35786 3.35786 1.01987 
1.01985 2.96587 3.35785 1.9697 1.01985 3.35786 1.96968 3.35786 3.61688 1.9299 1.92989 3.35786 
3.0919 3.7429 3.61688 3.4839 3.74292 1.01987 3.35785 3.4839 1.79692 3.35785 1.9697 4.39392 
3.35786 3.35785 3.35788 1.9299 3.61688 3.35785 1.96967 4.13495 3.48389 1.79694 3.61685 5.55582 
3.35788 1.79691 1.01987 3.35788 3.35785 1.96967 3.35788 3.48392 1.96967 3.35785 1.01987 1.9697 
3.35785 3.35785 3.09192 3.61688 1.96967 3.74292 3.35785 1.96973 3.74289 3.48392 3.35785 1.96967 
3.35785 1.0199 1.96967 4.65283 1.0199 1.01984 3.35785 3.48395 1.79688 3.35785 1.96973 1.79688 
3.48395 2.96582 1.0199 3.35785 3.09192 3.35785 1.96967 3.35785 3.61688 3.48389 1.79694 1.92993 
3.35785 1.79688 3.35791 3.74292 3.35785 1.96967 0 ]xsh
438.281 176.269 mo
(a Tarifa Ping\237ino de ORANGE.)
[3.35785 1.96967 3.61688 3.35785 1.92993 1.01984 1.5379 3.35785 1.96967 4.13495 1.01984 3.48395 
3.61682 3.48395 1.01984 3.48389 3.61688 1.96973 3.74286 3.35791 1.96967 4.91187 4.39392 4.13495 
4.65283 4.91187 3.87585 0 ]xsh
84.9344 182.969 mo
(iv\).)
[.82634 2.77234 1.21834 0 ]xsh
92.6844 182.969 mo
(Interrupci\227n o suspensi\227n del servicio a instancia de ORANGE, en los t\216rminos y forma dispuestos en las CCGG.)
[1.20419 3.40919 1.72222 3.28316 1.85519 1.8552 3.40919 3.66822 3.28316 .945168 3.54218 3.4092 
1.59618 3.54219 1.59618 3.0172 3.40921 3.0172 3.66821 3.28317 3.40919 3.0172 .94516 3.54219 
3.40918 1.59619 3.66821 3.28316 .94516 1.59618 3.0172 3.28316 1.85519 2.89117 .94516 3.28316 
.94516 3.54218 1.59618 3.28317 1.59616 .94516 3.40921 3.0172 1.72221 3.28316 3.40919 3.28317 
.94516 3.28316 1.59618 3.66821 3.28316 1.59618 4.83716 4.31923 4.06021 4.57816 4.83716 3.80119 
1.59619 1.59616 3.28317 3.40918 1.59619 .94516 3.54218 3.01718 1.59619 1.72223 3.28314 1.85519 
5.48111 .94519 3.40918 3.54218 3.01721 1.59619 2.89114 1.59616 1.4632 3.54221 1.85519 5.48114 
3.28317 1.59619 3.66824 .94516 3.01721 3.66824 3.40918 3.2832 3.01721 1.72223 3.54218 3.01721 
1.59619 3.28314 3.40924 1.59619 .94519 3.28314 3.01721 1.59619 4.57819 4.57813 4.83716 4.83722 
0 ]xsh
84.9344 189.669 mo
(v\).)
[2.7138 1.1598 0 ]xsh
92.6844 189.669 mo
(En el caso de los CP en tarifas  y sin perjuicio de los anteriores supuestos, si la tarifa dejara de aplicarse por raz\227n de cam)
[3.7568 3.36479 1.50738 3.23876 .900764 1.50738 3.23875 3.23876 2.97279 3.49778 1.50738 3.62382 
3.23876 1.50737 .900772 3.49777 2.97279 1.50739 4.53374 4.01581 1.50739 3.23877 3.36479 1.50737 
1.67783 3.23875 1.81079 .900772 1.41879 3.23875 2.97279 1.50739 1.50739 2.84676 1.50737 2.97281 
.900757 3.36479 1.50737 3.62383 3.23875 1.81079 .900772 3.36479 .900757 3.23877 .900757 3.4978 
1.50737 3.62383 3.23877 1.50737 .900772 3.49777 2.97281 1.50739 3.23875 3.36481 1.67783 3.23877 
1.81079 .900772 3.49779 1.81081 3.23875 2.97281 1.50739 2.97279 3.36481 3.62384 3.36481 3.23874 
2.97281 1.67783 3.49777 2.97281 1.55179 1.50739 2.97278 .900787 1.50739 .900757 3.23877 1.50739 
1.67783 3.23877 1.81079 .900757 1.41882 3.23877 1.50739 3.62378 3.23877 .900757 3.23877 1.81079 
3.23877 1.50739 3.62384 3.23877 1.50739 3.23877 3.62378 .900787 .900787 3.23877 3.23877 1.81079 
2.97278 3.23877 1.50739 3.62384 3.49774 1.81085 1.50732 1.81085 3.23877 2.84674 3.4978 3.36481 
1.50732 3.62384 3.23877 1.50739 3.23877 3.23877 0 ]xsh
408.855 189.669 mo
(bio de tarifa, baja, suspensi\227n o interrupci\227n)
[3.62384 .900757 3.4978 1.50739 3.62378 3.23877 1.50739 1.67786 3.23877 1.81079 .900757 1.41882 
3.23877 1.55176 1.50739 3.62384 3.23877 .900757 3.23877 1.55176 1.50739 2.97278 3.36481 2.97284 
3.62378 3.23877 3.36481 2.97284 .900757 3.4978 3.36481 1.50732 3.4978 1.50739 .900757 3.36481 
1.67786 3.23877 1.81079 1.81079 3.36481 3.62384 3.23871 .900818 3.49774 0 ]xsh
92.1844 196.368 mo
(del servicio por cualquier causa.)
[3.66821 3.28316 .94516 1.59618 3.0172 3.28316 1.85519 2.89116 .94516 3.28316 .94516 3.54218 
1.59618 3.66821 3.54218 1.85519 1.59616 3.28317 3.40918 3.28316 .94516 3.66821 3.40919 .94516 
3.28317 1.85519 1.59618 3.28316 3.28316 3.40919 3.01721 3.28314 0 ]xsh
RPTEAH+HelveticaNeue-Roman*1 [7 0 0 -7 0 0 ]msf
71.1844 203.068 mo
(a.3.)
[3.43672 1.6237 3.5697 0 ]xsh
RPTEAG+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
81.4375 203.068 mo
( Los CP son acumulativos, de tal forma que un mismo Cliente puede estar sujeto simult\207neamente a uno o varios CP y, por tanto, )
[1.73358 3.43669 3.56968 3.0447 1.73358 4.60564 4.08772 1.73357 3.0447 3.56968 3.4367 1.73358 
3.31065 3.31066 3.4367 5.50862 3.43671 .972656 3.31067 1.74971 .972672 2.91866 3.56969 3.04471 
1.62367 1.73358 3.69572 3.31065 1.73358 1.74973 3.31067 .972656 1.73358 1.49069 3.56969 1.88271 
5.50864 3.31065 1.73358 3.69572 3.43669 3.31065 1.73358 3.43671 3.43671 1.73357 5.50864 .972672 
3.04469 5.50864 3.56969 1.73357 4.60565 .972672 .972656 3.31067 3.43669 1.74973 3.31067 1.73357 
3.69572 3.43669 3.31067 3.69574 3.31064 1.73358 3.31067 3.04471 1.74969 3.31067 1.88269 1.73358 
3.04474 3.43668 .972687 3.31067 1.74969 3.5697 1.73358 3.04468 .972656 5.50861 3.43671 .972656 
1.74969 3.31067 3.43668 3.31064 3.31067 5.50861 3.31064 3.43671 1.74969 3.31064 1.73358 3.31067 
1.73358 3.43668 3.43668 3.56967 1.73358 3.56967 1.73358 2.91864 3.31067 1.88266 .972656 3.56967 
3.04468 1.73358 4.60565 4.08771 1.73358 2.91864 1.62366 1.73358 3.69571 3.56967 1.88269 1.73358 
1.74969 3.31064 3.43671 1.74969 3.56967 1.62366 0 ]xsh
436.134 203.068 mo
(verse obligado al pago de uno o)
[2.91867 3.31064 1.88269 3.04468 3.31067 1.73358 3.56964 3.69571 .972656 .972656 3.56967 3.31064 
3.69571 3.56967 1.73358 3.31064 .972656 1.73358 3.69571 3.31064 3.56967 3.56967 1.73358 3.69571 
3.31064 1.73358 3.43668 3.43668 3.5697 1.73358 0 ]xsh
71.1844 209.768 mo
(alguno de los correspondientes cargos asociados a los mismos.)
[3.28316 .945168 3.54218 3.4092 3.40919 3.54218 1.59618 3.66821 3.28316 1.59618 .94516 3.54218 
3.0172 1.59618 3.28316 3.54218 1.85519 1.85519 3.28316 3.0172 3.66822 3.54218 3.40919 3.66821 
.94516 3.28316 3.40919 1.72221 3.28317 3.01718 1.59619 3.28316 3.28316 1.85519 3.54218 3.54218 
3.01721 1.59616 3.28317 3.0172 3.54218 3.28316 .94516 3.28317 3.66821 3.54218 3.0172 1.59618 
3.28316 1.59618 .94516 3.54218 3.0172 1.59619 5.48112 .94516 3.0172 5.48112 3.54218 3.0172 
0 ]xsh
RPTEAH+HelveticaNeue-Roman*1 [7 0 0 -7 0 0 ]msf
71.1844 216.468 mo
(a.4. )
[3.32824 1.51522 3.46122 1.51522 0 ]xsh
RPTEAG+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
82.4375 216.468 mo
(El Cliente abonar\207 a ORANGE los importes por incumplimiento de los CP a trav\216s del correspondiente cargo en factura y en el cas)
[3.72019 .864166 1.43418 4.49714 .864159 .864166 3.20216 3.3282 1.64121 3.20216 1.43417 3.20216 
3.58721 3.46117 3.3282 3.20216 1.77419 3.20216 1.43417 3.20216 1.43419 4.75615 4.23824 3.97922 
4.49713 4.75616 3.72018 1.43417 .864166 3.46118 2.93619 1.43417 .864166 5.40013 3.5872 3.46118 
1.7742 1.6412 3.20215 2.9362 1.43417 3.5872 3.46118 1.7742 1.43417 .864151 3.3282 3.20215 
3.32819 5.40013 3.5872 .864166 .864151 5.40013 .864151 3.20216 3.32819 1.64122 3.46117 1.43417 
3.58722 3.20215 1.43417 .864166 3.46118 2.93619 1.43417 4.49713 3.97922 1.43417 3.20215 1.43417 
1.6412 1.7742 3.20215 2.81015 3.20215 2.93622 1.43417 3.58719 3.20218 .864166 1.43414 3.20218 
3.46115 1.7742 1.7742 3.20215 2.93622 3.58719 3.46118 3.32819 3.58722 .864166 3.20215 3.32819 
1.64124 3.20215 1.43417 3.20215 3.20218 1.77417 3.46118 3.46118 1.43417 3.20218 3.32819 1.43417 
1.3822 3.20215 3.20215 1.64124 3.32819 1.7742 3.20215 1.43417 2.81015 1.4342 3.20215 3.32819 
1.4342 3.20215 .864166 1.43417 3.20215 3.20218 0 ]xsh
418.977 216.468 mo
(o de las Tarifas Ping\237ino, adicionalmente)
[3.46118 1.43417 3.58722 3.20215 1.43417 .864166 3.20215 2.93622 1.43417 3.46118 3.20215 1.7742 
.864166 1.38217 3.20218 2.93619 1.43417 3.97922 .864166 3.32819 3.46118 3.32819 .864166 3.32819 
3.46118 1.51517 1.43417 3.20218 3.58719 .864166 3.20215 .864166 3.46118 3.32819 3.20215 .864166 
5.40009 3.20221 3.32819 1.64124 0 ]xsh
71.1844 223.168 mo
(tambi\216n se podr\207 cargar el importe que corresponda contra el saldo de la tarjeta prepago del Cliente.)
[1.72221 3.28316 5.48112 3.66821 .94516 3.28316 3.40919 1.59618 3.0172 3.28316 1.59618 3.66821 
3.54218 3.66821 1.85519 3.28316 1.59617 3.28316 3.28316 1.85519 3.54218 3.28316 1.85519 1.59619 
3.28314 .945175 1.59618 .94516 5.48112 3.66821 3.54219 1.85519 1.7222 3.28317 1.59618 3.66821 
3.40919 3.28316 1.59618 3.28317 3.54218 1.85519 1.85519 3.28316 3.0172 3.66821 3.54218 3.40919 
3.66823 3.28316 1.59618 3.28316 3.54218 3.40919 1.72221 1.85519 3.28317 1.59618 3.28316 .94516 
1.59618 3.0172 3.28316 .945175 3.66821 3.54218 1.59618 3.66821 3.28314 1.59619 .94516 3.28317 
1.59619 1.7222 3.28317 1.85516 .94519 3.28314 1.72223 3.28314 1.59619 3.66821 1.85519 3.28317 
3.66818 3.28317 3.54214 3.54214 1.59619 3.66821 3.28314 .945129 1.59616 4.57816 .945129 .945129 
3.28314 3.40918 1.72223 3.28314 0 ]xsh
RPTEAH+HelveticaNeue-Roman*1 [7 0 0 -7 0 0 ]msf
71.1844 229.868 mo
(a.5.)
[3.41072 1.5977 3.5437 0 ]xsh
RPTEAG+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
81.3332 229.868 mo
( Los CP asumidos por el Cliente subsistir\207n durante su plazo de duraci\227n o mientras el Cliente no haya satisfecho las cantidade)
[1.60356 3.41068 3.54366 3.01869 1.60356 4.57963 4.0617 1.60356 3.28465 3.01868 3.41068 5.48261 
.946648 3.6697 3.54367 3.01868 1.60356 3.66971 3.54366 1.85669 1.60356 3.28465 .94664 1.60356 
4.57964 .94664 .946655 3.28465 3.41069 1.72369 3.28465 1.60356 3.01868 3.41071 3.66969 3.01869 
.946655 3.01868 1.72371 .94664 1.85669 3.28465 3.41068 1.60356 3.66971 3.41068 1.85667 3.28464 
3.41068 1.72371 3.28464 1.60356 3.01868 3.41068 1.60356 3.66971 .94664 3.28464 2.89264 3.54367 
1.60356 3.66969 3.28464 1.60356 3.66968 3.41071 1.85669 3.28461 3.28467 .946655 3.54364 3.41068 
1.60355 3.54367 1.60355 5.48264 .946625 3.28467 3.41064 1.72372 1.85666 3.28467 3.01868 1.60358 
3.28461 .946655 1.60358 4.57962 .946625 .946655 3.28467 3.41064 1.72369 3.28467 1.60358 3.41064 
3.54364 1.60358 3.41071 3.28461 2.89264 3.28467 1.60358 3.01868 3.28461 1.72369 .946655 3.01868 
1.46472 3.28461 3.28467 3.41064 3.5437 1.60352 .946655 3.28467 3.01868 1.60358 3.28461 3.28467 
3.41064 1.72369 .946655 3.66968 3.28467 3.66968 0 ]xsh
421.126 229.868 mo
(s derivadas de su incumplimiento, con)
[3.01868 1.60358 3.66968 3.28467 1.85663 .946655 2.89264 3.28467 3.66968 3.28467 3.01868 1.60352 
3.66974 3.28461 1.60358 3.01868 3.41071 1.60352 .946655 3.41071 3.28461 3.41071 5.4826 3.66968 
.946655 .946655 5.4826 .946655 3.28461 3.41071 1.72369 3.54364 1.59766 1.60358 3.28467 3.54364 
0 ]xsh
71.1844 236.568 mo
(independencia de si el Cliente sufre la p\216rdida, deterioro o robo del dispositivo m\227vil adquirido, o si lo transmite, grava, ce)
[.998253 3.46229 3.72131 3.33625 3.72131 3.33626 3.46229 3.72131 3.33626 3.46228 3.33626 .998253 
3.33625 1.86147 3.72131 3.33625 1.86147 3.07029 .998253 1.86147 3.33626 .998245 1.86148 4.63123 
.99826 .99826 3.33624 3.46228 1.77531 3.33626 1.86147 3.0703 3.46228 1.5163 1.90828 3.33626 
1.86147 .998245 3.33626 1.86147 3.72131 3.33626 1.90829 3.72131 .99826 3.72131 3.33626 1.64928 
1.86147 3.72131 3.33626 1.77531 3.33626 1.90829 .99826 3.59528 1.90829 3.59528 1.86148 3.59528 
1.86147 1.90829 3.59528 3.72131 3.59528 1.86147 3.72131 3.33626 .99826 1.86148 3.72131 .99826 
3.07031 3.72131 3.59528 3.07028 .99826 1.77533 .99823 2.94427 3.59528 1.86145 5.53424 3.59528 
2.94427 .99823 .998291 1.86145 3.33624 3.72131 3.72131 3.46228 .998291 1.90826 .998291 3.72131 
3.59528 1.64929 1.86145 3.59528 1.86145 3.07031 .99823 1.86145 .998291 3.59528 1.86145 1.77533 
1.90826 3.33624 3.46234 3.07025 5.53424 .998291 1.77527 3.3363 1.64923 1.86145 3.59528 1.90833 
3.33624 2.94427 3.33624 1.64929 1.86145 3.33624 0 ]xsh
403.522 236.568 mo
(de, enajena o perjudica  en cualquier forma.)
[3.72131 3.33624 1.64929 1.86145 3.33624 3.46228 3.33624 .998291 3.33624 3.46228 3.3363 1.86145 
3.59528 1.86145 3.72131 3.33624 1.90833 .99823 3.46228 3.72131 .998291 3.33624 3.33624 1.86151 
1.86145 3.33624 3.46228 1.86145 3.3363 3.46228 3.33624 .998291 3.72131 3.46228 .99823 3.3363 
1.90826 1.86145 1.5163 3.59528 1.90833 5.53418 3.3363 0 ]xsh
RPTEAH+HelveticaNeue-Roman*1 [7 0 0 -7 0 0 ]msf
71.1844 249.968 mo
(B- CARGOS POR INCUMPLIMIENTO DE LOS COMPROMISOS DE PERMANENCIA)
[4.44511 2.37318 1.59612 4.70412 4.18609 4.44511 4.96314 4.97009 4.1861 1.59612 4.18609 4.97009 
4.44511 1.59613 1.46314 4.70412 4.70413 4.70413 5.74713 4.1861 3.54211 1.46315 5.74715 1.46313 
3.92708 4.70412 3.66817 4.97008 1.59613 4.57809 3.92706 1.59613 3.54213 4.97008 4.1861 1.59613 
4.70412 4.97009 5.74713 4.1861 4.44511 4.97008 5.74715 1.46315 4.18608 4.97009 4.18608 1.59615 
4.57806 3.92706 1.59613 4.1861 3.92706 4.44513 5.74713 4.1861 4.70413 3.92703 4.70413 4.70413 
1.46313 0 ]xsh
RPTEAG+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
71.1844 256.668 mo
(El Cliente se ver\207 obligado a cumplir con los siguientes compromisos en funci\227n de los beneficios obtenidos y los CP asociados )
[3.95189 1.09585 2.34957 4.72883 1.09586 1.09585 3.43385 3.55988 1.87291 3.43385 2.34958 3.16788 
3.43385 2.34957 3.04185 3.43385 2.00589 3.43385 2.34956 3.69287 3.81891 1.09586 1.09584 3.69287 
3.43385 3.81891 3.69287 2.34955 3.43387 2.34955 3.43387 3.55988 5.63182 3.81891 1.09584 1.09586 
2.00589 2.34958 3.43384 3.69287 3.55988 2.34958 1.09586 3.69286 3.16788 2.34958 3.16788 1.09586 
3.69286 3.55988 1.09586 3.43384 3.55989 1.87289 3.43384 3.16789 2.34956 3.43385 3.69286 5.63181 
3.81891 2.00587 3.69286 5.63182 1.09583 3.16791 3.69287 3.16785 2.34961 3.43384 3.55988 2.34955 
1.61389 3.55988 3.55988 3.4339 1.09583 3.69287 3.55994 2.34955 3.81891 3.43384 2.34955 1.09589 
3.69287 3.16791 2.34955 3.81891 3.43384 3.55994 3.43384 1.61389 1.09589 3.43384 1.09583 3.69293 
3.16785 2.34961 3.69287 3.81891 1.87286 3.4339 3.55988 1.09589 3.81891 3.69287 3.16791 2.34955 
3.04187 2.34955 1.09583 3.69287 3.16791 2.34955 4.72888 4.21088 2.34955 3.4339 3.16791 3.69287 
3.43384 1.09589 3.43384 3.81891 3.69287 3.16791 0 ]xsh
445.582 256.668 mo
(que el cliente ha aceptado:)
[3.81891 3.55988 3.4339 2.34955 3.43384 1.09589 2.34955 3.43384 1.09589 1.09583 3.4339 3.55988 
1.87292 3.43384 2.34955 3.55994 3.43384 2.34955 3.43384 3.4339 3.43384 3.81891 1.87292 3.43384 
3.81891 3.69287 0 ]xsh
RPTEAH+HelveticaNeue-Roman*1 [7 0 0 -7 0 0 ]msf
71.1844 263.368 mo
(b.1. Compromiso de Permanencia asociado al alta en el servicio m\227vil postpago residencial Orange o Tarifa Ping\237ino,)
[3.82724 1.62223 3.56822 1.62222 1.72633 4.73022 3.69427 5.6472 3.82725 2.00717 3.69426 5.64721 
1.23023 3.17622 3.69426 1.72633 3.82724 3.43524 1.72632 4.2122 3.43524 2.00719 5.64719 3.43526 
3.56822 3.43524 3.56824 3.43524 1.23022 3.43524 1.72633 3.43524 3.17622 3.69427 3.43524 1.23022 
3.43524 3.82724 3.69427 1.72632 3.43524 1.23024 1.72632 3.43524 1.23024 1.88124 3.43524 1.72633 
3.43524 3.56822 1.72633 3.43524 1.23024 1.72632 3.17622 3.43526 2.00717 3.17622 1.23022 3.43526 
1.23022 3.69426 1.72633 5.6472 3.69424 3.17627 1.23022 1.23022 1.72632 3.82724 3.69424 3.17624 
1.88126 3.82724 3.43524 3.69424 3.69427 1.72632 2.00717 3.43524 3.17624 1.23022 3.82724 3.43524 
3.56821 3.43524 1.23026 3.43521 1.23029 1.72626 4.99622 2.0072 3.43524 3.56818 3.69427 3.43524 
1.72632 3.69427 1.72632 3.69427 3.43524 2.00714 1.23029 1.74823 3.43524 1.72632 4.21222 1.23022 
3.56824 3.69421 3.56824 1.23022 3.56824 3.69427 0 ]xsh
RPTEAG+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
404.066 263.368 mo
( el Cliente se compromete a permanecer de)
[1.72638 3.30927 .971283 1.72638 4.60425 .971252 .971283 3.30927 3.4353 1.74832 3.30927 1.72638 
3.0433 3.30927 1.72638 3.30927 3.56827 5.50723 3.69434 1.88129 3.5683 5.5072 3.30927 1.74832 
3.30927 1.72638 3.30927 1.72638 3.69431 3.30927 1.88132 5.50723 3.30927 3.43527 3.30927 3.30927 
3.3093 1.88129 1.72638 3.69434 0 ]xsh
71.1844 270.068 mo
(alta en el indicado servicio/Tarifa Ping\237ino y durante el tiempo aceptado por el cliente en el anverso del documento. En caso d)
[3.29665 .958649 1.7357 3.29665 1.66347 3.29665 3.42268 1.66347 3.29665 .958649 1.66346 .958649 
3.42268 3.68171 .958649 3.29665 3.29665 3.6817 3.55566 1.66347 3.03069 3.29665 1.86868 2.90465 
.958649 3.29663 .958649 3.55566 1.99461 3.55566 3.29665 1.86868 .958649 1.47668 3.29663 1.66347 
4.0737 .958649 3.42268 3.55566 3.42267 .958649 3.42268 3.55566 1.66347 2.90463 1.66348 3.6817 
3.42267 1.86868 3.29665 3.42268 1.7357 3.29665 1.66347 3.29665 .958649 1.66347 1.7357 .958649 
3.29663 5.49461 3.6817 3.55566 1.66347 3.29665 3.29665 3.29665 3.6817 1.7357 3.29663 3.6817 
3.55566 1.66345 3.6817 3.55566 1.86871 1.66345 3.29663 .958679 1.66345 3.29663 .958679 .958618 
3.29666 3.42267 1.73569 3.29669 1.66345 3.29663 3.42273 1.66345 3.29663 .958679 1.66345 3.29666 
3.4227 2.90466 3.29663 1.86871 3.0307 3.55566 1.66345 3.68173 3.29663 .958679 1.66345 3.6817 
3.55569 3.29666 3.42267 5.49463 3.29666 3.4227 1.73572 3.55566 1.60968 1.66345 3.8147 3.4227 
1.66345 3.29666 3.29666 3.0307 3.55566 1.66345 0 ]xsh
409.154 270.068 mo
(e incumplimiento, el Cliente deber\207 abonar)
[3.29663 1.66348 .958649 3.4227 3.29666 3.4227 5.4946 3.68173 .958649 .958679 5.49463 .958649 
3.29666 3.4227 1.73569 3.55569 1.60968 1.66345 3.29666 .958649 1.66345 4.59164 .958679 .958649 
3.29666 3.4227 1.73569 3.29666 1.66348 3.6817 3.29666 3.6817 3.29666 1.86868 3.29666 1.66345 
3.29666 3.68173 3.55563 3.42273 3.29663 0 ]xsh
71.1844 276.768 mo
(los siguientes importes:)
[.945145 3.54217 3.01718 1.59617 3.01718 .945145 3.54217 3.40918 .945152 3.28314 3.40919 1.7222 
3.28315 3.01718 1.59616 .945152 5.48112 3.6682 3.54216 1.85519 1.72221 3.28314 3.01718 0 
]xsh
84.9442 283.468 mo
(\245)sh
92.4442 283.468 mo
(Si al Cliente le quedan por cumplir en la l\222nea afectada menos de 6 meses del CP en Orange, deber\207 abonar a ORANGE: 70)
[4.06641 .95137 1.62718 3.28936 .95137 1.62718 4.58434 .95137 .951363 3.28936 3.41541 1.72842 
3.28937 1.62718 .951363 3.28936 1.62718 3.67442 3.41541 3.28937 3.67442 3.28935 3.41541 1.62718 
3.67441 3.54839 1.8614 1.62717 3.28937 3.41541 5.48732 3.67442 .951355 .95137 1.8614 1.62717 
3.28937 3.41541 1.62717 .95137 3.28935 1.6272 .951355 .951355 3.41541 3.28937 3.28937 1.6272 
3.28937 1.46939 3.28937 3.28937 1.72842 3.28937 3.67442 3.28937 1.62718 5.48734 3.28937 3.41541 
3.54839 3.02342 1.62717 3.67441 3.28937 1.6272 3.5484 1.62717 5.48734 3.28937 3.02341 3.28937 
3.02341 1.6272 3.67441 3.28937 .951385 1.62717 4.58435 4.06644 1.62717 3.28937 3.41541 1.62717 
4.84338 1.86139 3.28937 3.41541 3.5484 3.28937 1.60239 1.6272 3.67441 3.28937 3.67444 3.28937 
1.86139 3.28937 1.6272 3.28937 3.67444 3.54837 3.41541 3.28937 1.86142 1.6272 3.28937 1.6272 
4.84335 4.32544 4.06644 4.58435 4.84335 3.8074 1.60239 1.6272 3.54837 0 ]xsh
431.578 279.006 mo
431.171 278.524 430.418 278.222 429.703 278.222 cv
428.46 278.222 427.443 278.938 427.164 280.128 cv
426.539 280.128 li
426.313 280.603 li
427.074 280.603 li
427.066 280.701 427.066 280.768 427.066 280.844 cv
427.066 280.911 427.066 280.979 427.074 281.077 cv
426.539 281.077 li
426.313 281.552 li
427.164 281.552 li
427.443 282.742 428.46 283.472 429.665 283.472 cv
430.343 283.472 430.983 283.194 431.36 282.893 cv
431.36 282.252 li
430.983 282.704 430.38 282.998 429.703 282.998 cv
428.723 282.998 427.97 282.441 427.699 281.552 cv
430.38 281.552 li
430.607 281.077 li
427.593 281.077 li
427.586 280.994 427.579 280.927 427.579 280.851 cv
427.579 280.776 427.586 280.701 427.593 280.603 cv
430.825 280.603 li
431.051 280.128 li
427.699 280.128 li
427.932 279.314 428.686 278.697 429.627 278.697 cv
430.38 278.697 430.991 279.013 431.36 279.465 cv
431.578 279.006 li
ef
%ADOBeginSubsetFont: HIBBAA+HelveticaNeue-Light AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
RPTEAG+HelveticaNeue-Light dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/B <1C60D8A8C9B64EDF887A30A339BB6B61444BA43E40493D405A8F56A77EB1
B8F45CCDACA15F82AF688805597BBDFF88B27211867DFFD56056BC21C61A58CE
672B97D120E348B1C9E95D691E9540ACD0EADA8DD18FB2E03042E7E6961CAD54
2DC713AEAF3708F52AB8E7D5F4A28054FCC8EE18371177F17E9F036FA258A558
24DCEF0AB407> |-
systemdict /gcheck known {setglobal} if end {end} if
end
RPTEAG+HelveticaNeue-Light /Encoding get
dup 66 /B put
pop
%ADOEndSubsetFont
/RPTEAG+HelveticaNeue-Light*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /.notdef 
/period /slash /zero /one /two 2{/.notdef}rp /five /six 
/seven /eight /.notdef /colon 6{/.notdef}rp /A /B /C 
/.notdef /E /F /G /.notdef /I 2{/.notdef}rp /L 
/M /N /O /P /.notdef /R /S /T 
12{/.notdef}rp /a /b /c /d /e /f /g 
/h /i /j /.notdef /l /m /n /o 
/p /q /r /s /t /u /v /.notdef 
/x /y /z 12{/.notdef}rp /aacute 6{/.notdef}rp /eacute 3{/.notdef}rp 
/iacute 3{/.notdef}rp /ntilde /oacute 4{/.notdef}rp /uacute 2{/.notdef}rp /udieresis 
5{/.notdef}rp /bullet 27{/.notdef}rp /exclamdown 16{/.notdef}rp /quotedblleft /quotedblright 44{/.notdef}rp]
RPTEAG+HelveticaNeue-Light nf
RPTEAG+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
431.584 283.472 mo
(, impuestos indirectos no incluidos)
[1.60236 1.62714 .951324 5.4873 3.67438 3.41537 3.28934 3.02338 1.72836 3.54837 3.02335 1.62717 
.951324 3.41537 3.67438 .951324 1.86136 3.28934 3.28934 1.72836 3.54834 3.02338 1.62717 3.41534 
3.54834 1.62717 .951324 3.41534 3.28934 .951324 3.41534 .951355 3.67438 3.54834 0 ]xsh
92.444 290.172 mo
(\(en adelante \322i.i.no.i\323\) \(Pen\222nsula y Baleares: 82,60)
[1.33717 3.28316 3.40921 1.59618 3.28316 3.66822 3.28316 .945168 3.28316 3.40921 1.72222 3.28316 
1.59618 2.24015 .945175 1.59618 .945175 1.59618 3.40921 3.54218 1.59619 .94516 2.24016 1.33717 
1.59619 1.33716 4.06021 3.28317 3.40921 .94516 3.40921 3.01721 3.40919 .945175 3.28316 1.59618 
2.89117 1.59619 4.31924 3.28316 .945175 3.28316 3.28316 1.85521 3.28317 3.01721 1.59619 1.59619 
3.54219 3.54219 1.59619 3.54219 0 ]xsh
228.823 286.021 mo
228.445 285.573 227.745 285.293 227.08 285.293 cv
225.925 285.293 224.98 285.959 224.72 287.064 cv
224.139 287.064 li
223.93 287.505 li
224.636 287.505 li
224.63 287.596 224.63 287.659 224.63 287.729 cv
224.63 287.793 224.63 287.855 224.636 287.946 cv
224.139 287.946 li
223.93 288.388 li
224.72 288.388 li
224.98 289.493 225.925 290.172 227.045 290.172 cv
227.675 290.172 228.27 289.914 228.62 289.634 cv
228.62 289.039 li
228.27 289.459 227.709 289.732 227.08 289.732 cv
226.17 289.732 225.47 289.214 225.218 288.388 cv
227.709 288.388 li
227.92 287.946 li
225.12 287.946 li
225.112 287.87 225.105 287.807 225.105 287.736 cv
225.105 287.666 225.112 287.596 225.12 287.505 cv
228.122 287.505 li
228.332 287.064 li
225.218 287.064 li
225.434 286.309 226.134 285.734 227.009 285.734 cv
227.709 285.734 228.277 286.029 228.62 286.448 cv
228.823 286.021 li
ef
RPTEAG+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
228.823 290.172 mo
(, Canarias: 70)
[1.59622 1.59621 4.57819 3.28319 3.40924 3.2832 1.85522 .945206 3.2832 3.01723 1.59622 1.59622 
3.54221 0 ]xsh
270.836 286.021 mo
270.458 285.573 269.758 285.293 269.093 285.293 cv
267.938 285.293 266.993 285.959 266.734 287.064 cv
266.153 287.064 li
265.943 287.505 li
266.65 287.505 li
266.643 287.596 266.643 287.659 266.643 287.729 cv
266.643 287.793 266.643 287.855 266.65 287.946 cv
266.153 287.946 li
265.943 288.388 li
266.734 288.388 li
266.993 289.493 267.938 290.172 269.058 290.172 cv
269.688 290.172 270.283 289.914 270.633 289.634 cv
270.633 289.039 li
270.283 289.459 269.723 289.732 269.093 289.732 cv
268.183 289.732 267.483 289.214 267.231 288.388 cv
269.723 288.388 li
269.933 287.946 li
267.133 287.946 li
267.126 287.87 267.119 287.807 267.119 287.736 cv
267.119 287.666 267.126 287.596 267.133 287.505 cv
270.136 287.505 li
270.346 287.064 li
267.231 287.064 li
267.448 286.309 268.148 285.734 269.023 285.734 cv
269.723 285.734 270.29 286.029 270.633 286.448 cv
270.836 286.021 li
ef
RPTEAG+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
270.836 290.172 mo
(, Ceuta: 70)
[1.59622 1.59622 4.57816 3.2832 3.40924 1.72226 3.28317 1.59622 1.59622 3.54221 0 ]xsh
305.471 286.021 mo
305.093 285.573 304.393 285.293 303.728 285.293 cv
302.573 285.293 301.628 285.959 301.369 287.064 cv
300.788 287.064 li
300.578 287.505 li
301.285 287.505 li
301.278 287.596 301.278 287.659 301.278 287.729 cv
301.278 287.793 301.278 287.855 301.285 287.946 cv
300.788 287.946 li
300.578 288.388 li
301.369 288.388 li
301.628 289.493 302.573 290.172 303.693 290.172 cv
304.323 290.172 304.918 289.914 305.268 289.634 cv
305.268 289.039 li
304.918 289.459 304.358 289.732 303.728 289.732 cv
302.818 289.732 302.118 289.214 301.866 288.388 cv
304.358 288.388 li
304.568 287.946 li
301.768 287.946 li
301.761 287.87 301.754 287.807 301.754 287.736 cv
301.754 287.666 301.761 287.596 301.768 287.505 cv
304.771 287.505 li
304.981 287.064 li
301.866 287.064 li
302.083 286.309 302.783 285.734 303.658 285.734 cv
304.358 285.734 304.925 286.029 305.268 286.448 cv
305.471 286.021 li
ef
RPTEAG+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
305.471 290.172 mo
(, Melilla: 70)
[1.59619 1.59619 5.48111 3.28317 .94516 .94519 .94516 .94516 3.28317 1.59619 1.59619 3.54218 
0 ]xsh
339.659 286.021 mo
339.281 285.573 338.581 285.293 337.916 285.293 cv
336.761 285.293 335.816 285.959 335.557 287.064 cv
334.976 287.064 li
334.766 287.505 li
335.473 287.505 li
335.466 287.596 335.466 287.659 335.466 287.729 cv
335.466 287.793 335.466 287.855 335.473 287.946 cv
334.976 287.946 li
334.766 288.388 li
335.557 288.388 li
335.816 289.493 336.761 290.172 337.881 290.172 cv
338.511 290.172 339.106 289.914 339.456 289.634 cv
339.456 289.039 li
339.106 289.459 338.546 289.732 337.916 289.732 cv
337.006 289.732 336.306 289.214 336.054 288.388 cv
338.546 288.388 li
338.756 287.946 li
335.956 287.946 li
335.949 287.87 335.942 287.807 335.942 287.736 cv
335.942 287.666 335.949 287.596 335.956 287.505 cv
338.959 287.505 li
339.169 287.064 li
336.054 287.064 li
336.271 286.309 336.971 285.734 337.846 285.734 cv
338.546 285.734 339.113 286.029 339.456 286.448 cv
339.659 286.021 li
ef
RPTEAG+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
339.659 290.172 mo
(\))sh
84.944 296.872 mo
(\245)sh
92.444 296.872 mo
(Si al Cliente le quedan por cumplir en la l\222nea afectada entre 6 y 12 meses, deber\207 abonar: 110)
[4.06841 .953362 1.63708 3.29136 .953362 1.63708 4.58635 .953354 .953362 3.29136 3.4174 1.73042 
3.29136 1.63708 .953369 3.29135 1.63708 3.67641 3.4174 3.29137 3.67641 3.29137 3.41739 1.63708 
3.67641 3.55037 1.8634 1.63708 3.29135 3.41739 5.48932 3.67642 .953369 .953354 1.86339 1.63708 
3.29135 3.41739 1.63708 .953369 3.29135 1.63708 .953354 .953354 3.4174 3.29135 3.29137 1.63707 
3.29135 1.47139 3.29137 3.29135 1.73042 3.29135 3.67642 3.29135 1.63707 3.29137 3.41739 1.73041 
1.8634 3.29135 1.63707 3.55037 1.63708 2.89935 1.63708 3.55035 3.55038 1.63708 5.48932 3.29135 
3.02539 3.29138 3.02539 1.60437 1.63708 3.67639 3.29138 3.67639 3.29135 1.8634 3.29135 1.63708 
3.29138 3.67639 3.55042 3.41739 3.29138 1.8634 1.6044 1.63705 3.55038 3.55042 0 ]xsh
351.525 292.721 mo
351.147 292.273 350.447 291.993 349.782 291.993 cv
348.627 291.993 347.682 292.658 347.423 293.764 cv
346.842 293.764 li
346.632 294.205 li
347.339 294.205 li
347.332 294.296 347.332 294.359 347.332 294.429 cv
347.332 294.493 347.332 294.555 347.339 294.646 cv
346.842 294.646 li
346.632 295.088 li
347.423 295.088 li
347.682 296.193 348.627 296.872 349.747 296.872 cv
350.377 296.872 350.972 296.613 351.322 296.333 cv
351.322 295.738 li
350.972 296.158 350.412 296.431 349.782 296.431 cv
348.872 296.431 348.172 295.913 347.92 295.088 cv
350.412 295.088 li
350.622 294.646 li
347.822 294.646 li
347.815 294.57 347.808 294.506 347.808 294.436 cv
347.808 294.366 347.815 294.296 347.822 294.205 cv
350.825 294.205 li
351.035 293.764 li
347.92 293.764 li
348.137 293.008 348.837 292.434 349.712 292.434 cv
350.412 292.434 350.979 292.729 351.322 293.148 cv
351.525 292.721 li
ef
%ADOBeginSubsetFont: HIBBAA+HelveticaNeue-Light AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
RPTEAG+HelveticaNeue-Light dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/nine <1C60D8A8C9B7EF32A0AD778797B54ADF28F8686EEFCC387BEF399794A
EAEBF267000F58396CB8FF4A2B20F029EF1440F30DB77121AC14D5525DAD9D73
F3BBC6A7313CBB3DB128CEC311A5A8459CEC059880FB85AFC5FC6F6228B56C2C
635D09B7ECE7112F9FA1617B9C122AC25D06588570170A18A93ABF874AF809B6
8579950F07688FA5CA6EFCC470724A3F3F7EAFA0FFBC794465C0892CA6692DFF
EDC8A9843460B76CCED> |-
systemdict /gcheck known {setglobal} if end {end} if
end
RPTEAG+HelveticaNeue-Light /Encoding get
dup 57 /nine put
pop
%ADOEndSubsetFont
/RPTEAG+HelveticaNeue-Light*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /.notdef 
/period /slash /zero /one /two 2{/.notdef}rp /five /six 
/seven /eight /nine /colon 6{/.notdef}rp /A /B /C 
/.notdef /E /F /G /.notdef /I 2{/.notdef}rp /L 
/M /N /O /P /.notdef /R /S /T 
12{/.notdef}rp /a /b /c /d /e /f /g 
/h /i /j /.notdef /l /m /n /o 
/p /q /r /s /t /u /v /.notdef 
/x /y /z 12{/.notdef}rp /aacute 6{/.notdef}rp /eacute 3{/.notdef}rp 
/iacute 3{/.notdef}rp /ntilde /oacute 4{/.notdef}rp /uacute 2{/.notdef}rp /udieresis 
5{/.notdef}rp /bullet 27{/.notdef}rp /exclamdown 16{/.notdef}rp /quotedblleft /quotedblright 44{/.notdef}rp]
RPTEAG+HelveticaNeue-Light nf
RPTEAG+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
351.533 296.872 mo
(, i.i.no.i. \(Pen\222nsula y Baleares: 129,80)
[1.6044 1.63712 .953369 1.6044 .9534 1.6044 3.41742 3.55038 1.6044 .9534 1.6044 1.63708 
1.3454 4.06842 3.29138 3.41742 .9534 3.41742 3.02542 3.41742 .9534 3.29138 1.63708 2.89938 
1.63712 4.32745 3.29138 .953369 3.29141 3.29138 1.8634 3.29138 3.02542 1.6044 1.63712 3.55038 
3.55042 3.55042 1.60437 3.55042 0 ]xsh
456.827 292.721 mo
456.449 292.273 455.749 291.993 455.084 291.993 cv
453.929 291.993 452.984 292.658 452.725 293.764 cv
452.144 293.764 li
451.934 294.205 li
452.641 294.205 li
452.634 294.296 452.634 294.359 452.634 294.429 cv
452.634 294.493 452.634 294.555 452.641 294.646 cv
452.144 294.646 li
451.934 295.088 li
452.725 295.088 li
452.984 296.193 453.929 296.872 455.049 296.872 cv
455.679 296.872 456.274 296.613 456.624 296.333 cv
456.624 295.738 li
456.274 296.158 455.714 296.431 455.084 296.431 cv
454.174 296.431 453.474 295.913 453.222 295.088 cv
455.714 295.088 li
455.924 294.646 li
453.124 294.646 li
453.117 294.57 453.11 294.506 453.11 294.436 cv
453.11 294.366 453.117 294.296 453.124 294.205 cv
456.127 294.205 li
456.337 293.764 li
453.222 293.764 li
453.439 293.008 454.139 292.434 455.014 292.434 cv
455.714 292.434 456.281 292.729 456.624 293.148 cv
456.827 292.721 li
ef
RPTEAG+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
456.836 296.872 mo
(, Canarias: 110)
[1.6044 1.63712 4.5864 3.29138 3.41745 3.29138 1.86343 .9534 3.29138 3.02545 1.6044 1.63712 
3.55042 3.55042 0 ]xsh
502.579 292.721 mo
502.201 292.273 501.501 291.993 500.836 291.993 cv
499.681 291.993 498.736 292.658 498.477 293.764 cv
497.896 293.764 li
497.686 294.205 li
498.393 294.205 li
498.386 294.296 498.386 294.359 498.386 294.429 cv
498.386 294.493 498.386 294.555 498.393 294.646 cv
497.896 294.646 li
497.686 295.088 li
498.477 295.088 li
498.736 296.193 499.681 296.872 500.801 296.872 cv
501.431 296.872 502.026 296.613 502.376 296.333 cv
502.376 295.738 li
502.026 296.158 501.466 296.431 500.836 296.431 cv
499.926 296.431 499.226 295.913 498.974 295.088 cv
501.466 295.088 li
501.676 294.646 li
498.876 294.646 li
498.869 294.57 498.862 294.506 498.862 294.436 cv
498.862 294.366 498.869 294.296 498.876 294.205 cv
501.879 294.205 li
502.089 293.764 li
498.974 293.764 li
499.191 293.008 499.891 292.434 500.766 292.434 cv
501.466 292.434 502.033 292.729 502.376 293.148 cv
502.579 292.721 li
ef
RPTEAG+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
502.587 296.872 mo
(, Ceuta:)
[1.6044 1.63712 4.58636 3.29141 3.41742 1.73041 3.29144 0 ]xsh
92.444 303.572 mo
(110)
[3.5422 3.54221 0 ]xsh
107.963 299.421 mo
107.585 298.973 106.885 298.693 106.22 298.693 cv
105.065 298.693 104.12 299.359 103.861 300.464 cv
103.28 300.464 li
103.07 300.905 li
103.777 300.905 li
103.77 300.996 103.77 301.059 103.77 301.129 cv
103.77 301.193 103.77 301.255 103.777 301.346 cv
103.28 301.346 li
103.07 301.788 li
103.861 301.788 li
104.12 302.893 105.065 303.572 106.185 303.572 cv
106.815 303.572 107.41 303.313 107.76 303.034 cv
107.76 302.438 li
107.41 302.859 106.85 303.131 106.22 303.131 cv
105.31 303.131 104.61 302.613 104.358 301.788 cv
106.85 301.788 li
107.06 301.346 li
104.26 301.346 li
104.253 301.27 104.246 301.206 104.246 301.136 cv
104.246 301.066 104.253 300.996 104.26 300.905 cv
107.263 300.905 li
107.473 300.464 li
104.358 300.464 li
104.575 299.709 105.275 299.134 106.15 299.134 cv
106.85 299.134 107.417 299.429 107.76 299.848 cv
107.963 299.421 li
ef
RPTEAG+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
107.963 303.572 mo
(, Melilla: 110)
[1.59618 1.59619 5.48113 3.28316 .945175 .945168 .945168 .945168 3.28317 1.59619 1.59618 3.54219 
3.54219 0 ]xsh
145.693 299.421 mo
145.315 298.973 144.615 298.693 143.95 298.693 cv
142.795 298.693 141.85 299.359 141.591 300.464 cv
141.01 300.464 li
140.8 300.905 li
141.507 300.905 li
141.5 300.996 141.5 301.059 141.5 301.129 cv
141.5 301.193 141.5 301.255 141.507 301.346 cv
141.01 301.346 li
140.8 301.788 li
141.591 301.788 li
141.85 302.893 142.795 303.572 143.915 303.572 cv
144.545 303.572 145.14 303.313 145.49 303.034 cv
145.49 302.438 li
145.14 302.859 144.58 303.131 143.95 303.131 cv
143.04 303.131 142.34 302.613 142.088 301.788 cv
144.58 301.788 li
144.79 301.346 li
141.99 301.346 li
141.983 301.27 141.976 301.206 141.976 301.136 cv
141.976 301.066 141.983 300.996 141.99 300.905 cv
144.993 300.905 li
145.203 300.464 li
142.088 300.464 li
142.305 299.709 143.005 299.134 143.88 299.134 cv
144.58 299.134 145.147 299.429 145.49 299.848 cv
145.693 299.421 li
ef
%ADOBeginSubsetFont: HIBBAA+HelveticaNeue-Light AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
RPTEAG+HelveticaNeue-Light dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/three <1C60D8A8C9B7EF32A0AD7787014148F9F7B01B8718CF86E6C97715D6
B6A6366BA9B95A2396A693DDA225C80E4397FC914524C2C1B7CCF1E0CEFA5485
482766B25191789C24EF3EB80A349C2B7D2303AE0632FCFABC4AE8926AB2D667
2CAF89737ACD8A4E64B51ECEC4731892F7AE0914743C5F666925B1879CD745D5
2F40ADB675B3DB62D4EA0E95D592F36A582EDFB139D9F610CA262E59918ACAF5
C3C1FD51DE85E775481717131C24988FEAEA39C564FBADBA> |-
systemdict /gcheck known {setglobal} if end {end} if
end
RPTEAG+HelveticaNeue-Light /Encoding get
dup 51 /three put
pop
%ADOEndSubsetFont
/RPTEAG+HelveticaNeue-Light*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /.notdef 
/period /slash /zero /one /two /three /.notdef /five 
/six /seven /eight /nine /colon 6{/.notdef}rp /A /B 
/C /.notdef /E /F /G /.notdef /I 2{/.notdef}rp 
/L /M /N /O /P /.notdef /R /S 
/T 12{/.notdef}rp /a /b /c /d /e /f 
/g /h /i /j /.notdef /l /m /n 
/o /p /q /r /s /t /u /v 
/.notdef /x /y /z 12{/.notdef}rp /aacute 6{/.notdef}rp /eacute 
3{/.notdef}rp /iacute 3{/.notdef}rp /ntilde /oacute 4{/.notdef}rp /uacute 2{/.notdef}rp 
/udieresis 5{/.notdef}rp /bullet 27{/.notdef}rp /exclamdown 16{/.notdef}rp /quotedblleft /quotedblright 
44{/.notdef}rp]
RPTEAG+HelveticaNeue-Light nf
RPTEAG+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
145.693 303.572 mo
(\))sh
84.9446 310.272 mo
(\245)sh
92.4446 310.272 mo
(Si al Cliente le quedan por cumplir en la l\222nea afectada entre 13 y 18 meses, deber\207 abonar: 150)
[4.09422 .979164 1.76608 3.31716 .979156 1.76608 4.61214 .979164 .979164 3.31715 3.4432 1.75622 
3.31715 1.76608 .979156 3.31717 1.76607 3.70222 3.44319 3.31715 3.70221 3.31717 3.44319 1.76608 
3.70221 3.57619 1.88919 1.76607 3.31715 3.44321 5.51512 3.70222 .979156 .979156 1.88919 1.76608 
3.31715 3.44319 1.76608 .979156 3.31717 1.76607 .979172 .979156 3.44321 3.31715 3.31717 1.76607 
3.31717 1.49721 3.31717 3.31717 1.75621 3.31717 3.70222 3.31717 1.76607 3.31717 3.44319 1.75623 
1.88921 3.31717 1.76607 3.57619 3.5762 1.76605 2.92517 1.76605 3.5762 3.5762 1.76605 5.51514 
3.31717 3.05121 3.31717 3.05121 1.63019 1.76605 3.70221 3.3172 3.70221 3.31714 1.88922 3.31717 
1.76608 3.31714 3.70224 3.5762 3.44318 3.31717 1.88919 1.63019 1.76608 3.5762 3.57617 0 
]xsh
359.409 306.121 mo
359.031 305.673 358.331 305.393 357.666 305.393 cv
356.511 305.393 355.566 306.058 355.307 307.164 cv
354.726 307.164 li
354.516 307.605 li
355.223 307.605 li
355.216 307.696 355.216 307.759 355.216 307.829 cv
355.216 307.892 355.216 307.955 355.223 308.046 cv
354.726 308.046 li
354.516 308.488 li
355.307 308.488 li
355.566 309.593 356.511 310.272 357.631 310.272 cv
358.261 310.272 358.856 310.013 359.206 309.733 cv
359.206 309.138 li
358.856 309.558 358.296 309.831 357.666 309.831 cv
356.756 309.831 356.056 309.313 355.804 308.488 cv
358.296 308.488 li
358.506 308.046 li
355.706 308.046 li
355.699 307.97 355.692 307.906 355.692 307.836 cv
355.692 307.766 355.699 307.696 355.706 307.605 cv
358.709 307.605 li
358.919 307.164 li
355.804 307.164 li
356.021 306.408 356.721 305.834 357.596 305.834 cv
358.296 305.834 358.863 306.129 359.206 306.548 cv
359.409 306.121 li
ef
RPTEAG+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
359.443 310.272 mo
(, i.i.no.i \(Pen\222nsula y Baleares: 177)
[1.63019 1.76611 .979156 1.63022 .979187 1.63019 3.44321 3.5762 1.63019 .979187 1.76608 1.37119 
4.09424 3.31717 3.44321 .979187 3.44324 3.05121 3.44321 .979187 3.31717 1.76611 2.92517 1.76611 
4.35324 3.31717 .979187 3.31717 3.31717 1.88922 3.3172 3.05121 1.63019 1.76611 3.57617 3.5762 
0 ]xsh
455.899 306.121 mo
455.521 305.673 454.821 305.393 454.156 305.393 cv
453.001 305.393 452.056 306.058 451.797 307.164 cv
451.216 307.164 li
451.006 307.605 li
451.713 307.605 li
451.706 307.696 451.706 307.759 451.706 307.829 cv
451.706 307.892 451.706 307.955 451.713 308.046 cv
451.216 308.046 li
451.006 308.488 li
451.797 308.488 li
452.056 309.593 453.001 310.272 454.121 310.272 cv
454.751 310.272 455.346 310.013 455.696 309.733 cv
455.696 309.138 li
455.346 309.558 454.786 309.831 454.156 309.831 cv
453.246 309.831 452.546 309.313 452.294 308.488 cv
454.786 308.488 li
454.996 308.046 li
452.196 308.046 li
452.189 307.97 452.182 307.906 452.182 307.836 cv
452.182 307.766 452.189 307.696 452.196 307.605 cv
455.199 307.605 li
455.409 307.164 li
452.294 307.164 li
452.511 306.408 453.211 305.834 454.086 305.834 cv
454.786 305.834 455.353 306.129 455.696 306.548 cv
455.899 306.121 li
ef
RPTEAG+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
455.934 310.272 mo
(, Canarias: 150)
[1.63022 1.76611 4.61218 3.3172 3.44324 3.31717 1.88925 .979187 3.3172 3.05124 1.63022 1.76611 
3.5762 3.5762 0 ]xsh
502.27 306.121 mo
501.893 305.673 501.192 305.393 500.527 305.393 cv
499.372 305.393 498.427 306.058 498.168 307.164 cv
497.588 307.164 li
497.377 307.605 li
498.084 307.605 li
498.077 307.696 498.077 307.759 498.077 307.829 cv
498.077 307.892 498.077 307.955 498.084 308.046 cv
497.588 308.046 li
497.377 308.488 li
498.168 308.488 li
498.427 309.593 499.372 310.272 500.493 310.272 cv
501.122 310.272 501.718 310.013 502.067 309.733 cv
502.067 309.138 li
501.718 309.558 501.157 309.831 500.527 309.831 cv
499.618 309.831 498.918 309.313 498.665 308.488 cv
501.157 308.488 li
501.368 308.046 li
498.567 308.046 li
498.561 307.97 498.553 307.906 498.553 307.836 cv
498.553 307.766 498.561 307.696 498.567 307.605 cv
501.57 307.605 li
501.78 307.164 li
498.665 307.164 li
498.882 306.408 499.582 305.834 500.457 305.834 cv
501.157 305.834 501.725 306.129 502.067 306.548 cv
502.27 306.121 li
ef
RPTEAG+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
502.304 310.272 mo
(, Ceuta:)
[1.63022 1.76608 4.61218 3.31717 3.44324 1.75629 3.31714 0 ]xsh
92.444 316.972 mo
(150)
[3.5422 3.54221 0 ]xsh
107.963 312.821 mo
107.585 312.373 106.885 312.093 106.22 312.093 cv
105.065 312.093 104.12 312.758 103.861 313.864 cv
103.28 313.864 li
103.07 314.305 li
103.777 314.305 li
103.77 314.396 103.77 314.459 103.77 314.529 cv
103.77 314.592 103.77 314.655 103.777 314.746 cv
103.28 314.746 li
103.07 315.188 li
103.861 315.188 li
104.12 316.293 105.065 316.972 106.185 316.972 cv
106.815 316.972 107.41 316.713 107.76 316.433 cv
107.76 315.838 li
107.41 316.258 106.85 316.531 106.22 316.531 cv
105.31 316.531 104.61 316.013 104.358 315.188 cv
106.85 315.188 li
107.06 314.746 li
104.26 314.746 li
104.253 314.67 104.246 314.606 104.246 314.536 cv
104.246 314.466 104.253 314.396 104.26 314.305 cv
107.263 314.305 li
107.473 313.864 li
104.358 313.864 li
104.575 313.108 105.275 312.534 106.15 312.534 cv
106.85 312.534 107.417 312.829 107.76 313.248 cv
107.963 312.821 li
ef
RPTEAG+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
107.963 316.972 mo
(, Melilla: 150)
[1.59618 1.59619 5.48113 3.28316 .945175 .945168 .945168 .945168 3.28317 1.59619 1.59618 3.54219 
3.54219 0 ]xsh
145.693 312.821 mo
145.315 312.373 144.615 312.093 143.95 312.093 cv
142.795 312.093 141.85 312.758 141.591 313.864 cv
141.01 313.864 li
140.8 314.305 li
141.507 314.305 li
141.5 314.396 141.5 314.459 141.5 314.529 cv
141.5 314.592 141.5 314.655 141.507 314.746 cv
141.01 314.746 li
140.8 315.188 li
141.591 315.188 li
141.85 316.293 142.795 316.972 143.915 316.972 cv
144.545 316.972 145.14 316.713 145.49 316.433 cv
145.49 315.838 li
145.14 316.258 144.58 316.531 143.95 316.531 cv
143.04 316.531 142.34 316.013 142.088 315.188 cv
144.58 315.188 li
144.79 314.746 li
141.99 314.746 li
141.983 314.67 141.976 314.606 141.976 314.536 cv
141.976 314.466 141.983 314.396 141.99 314.305 cv
144.993 314.305 li
145.203 313.864 li
142.088 313.864 li
142.305 313.108 143.005 312.534 143.88 312.534 cv
144.58 312.534 145.147 312.829 145.49 313.248 cv
145.693 312.821 li
ef
%ADOBeginSubsetFont: HIBBAA+HelveticaNeue-Light AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
RPTEAG+HelveticaNeue-Light dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/four <1C60D8A8C9B7EF327C102745143588106C267CDE7590967441C6BE565
C97CC6A462F274D92C0632734168B18F89F0FE1B0AE0BFC76533B747CCE8ADA2
C9F8A5FE6BB55E9942B> |-
systemdict /gcheck known {setglobal} if end {end} if
end
RPTEAG+HelveticaNeue-Light /Encoding get
dup 52 /four put
pop
%ADOEndSubsetFont
/RPTEAG+HelveticaNeue-Light*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /.notdef 
/period /slash /zero /one /two /three /four /five 
/six /seven /eight /nine /colon 6{/.notdef}rp /A /B 
/C /.notdef /E /F /G /.notdef /I 2{/.notdef}rp 
/L /M /N /O /P /.notdef /R /S 
/T 12{/.notdef}rp /a /b /c /d /e /f 
/g /h /i /j /.notdef /l /m /n 
/o /p /q /r /s /t /u /v 
/.notdef /x /y /z 12{/.notdef}rp /aacute 6{/.notdef}rp /eacute 
3{/.notdef}rp /iacute 3{/.notdef}rp /ntilde /oacute 4{/.notdef}rp /uacute 2{/.notdef}rp 
/udieresis 5{/.notdef}rp /bullet 27{/.notdef}rp /exclamdown 16{/.notdef}rp /quotedblleft /quotedblright 
44{/.notdef}rp]
RPTEAG+HelveticaNeue-Light nf
RPTEAG+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
145.693 316.972 mo
(\))sh
84.9446 323.672 mo
(\245)sh
92.4446 323.672 mo
(Si al Cliente le quedan por cumplir en la l\222nea afectada entre 19 y 24 meses, deber\207 abonar: 200)
[4.09422 .979164 1.76608 3.31716 .979156 1.76608 4.61214 .979164 .979164 3.31715 3.4432 1.75622 
3.31715 1.76608 .979156 3.31717 1.76607 3.70222 3.44319 3.31715 3.70221 3.31717 3.44319 1.76608 
3.70221 3.57619 1.88919 1.76607 3.31715 3.44321 5.51512 3.70222 .979156 .979156 1.88919 1.76608 
3.31715 3.44319 1.76608 .979156 3.31717 1.76607 .979172 .979156 3.44321 3.31715 3.31717 1.76607 
3.31717 1.49721 3.31717 3.31717 1.75621 3.31717 3.70222 3.31717 1.76607 3.31717 3.44319 1.75623 
1.88921 3.31717 1.76607 3.57619 3.5762 1.76605 2.92517 1.76605 3.5762 3.5762 1.76605 5.51514 
3.31717 3.05121 3.31717 3.05121 1.63019 1.76605 3.70221 3.3172 3.70221 3.31714 1.88922 3.31717 
1.76608 3.31714 3.70224 3.5762 3.44318 3.31717 1.88919 1.63019 1.76608 3.5762 3.57617 0 
]xsh
359.409 319.521 mo
359.031 319.073 358.331 318.793 357.666 318.793 cv
356.511 318.793 355.566 319.459 355.307 320.564 cv
354.726 320.564 li
354.516 321.005 li
355.223 321.005 li
355.216 321.096 355.216 321.159 355.216 321.229 cv
355.216 321.293 355.216 321.355 355.223 321.446 cv
354.726 321.446 li
354.516 321.888 li
355.307 321.888 li
355.566 322.993 356.511 323.672 357.631 323.672 cv
358.261 323.672 358.856 323.414 359.206 323.134 cv
359.206 322.539 li
358.856 322.959 358.296 323.232 357.666 323.232 cv
356.756 323.232 356.056 322.714 355.804 321.888 cv
358.296 321.888 li
358.506 321.446 li
355.706 321.446 li
355.699 321.37 355.692 321.307 355.692 321.236 cv
355.692 321.166 355.699 321.096 355.706 321.005 cv
358.709 321.005 li
358.919 320.564 li
355.804 320.564 li
356.021 319.809 356.721 319.234 357.596 319.234 cv
358.296 319.234 358.863 319.529 359.206 319.948 cv
359.409 319.521 li
ef
RPTEAG+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
359.443 323.672 mo
(, i.i.no.i \(Pen\222nsula y Baleares: 236)
[1.63019 1.76611 .979156 1.63022 .979187 1.63019 3.44321 3.5762 1.63019 .979187 1.76608 1.37119 
4.09424 3.31717 3.44321 .979187 3.44324 3.05121 3.44321 .979187 3.31717 1.76611 2.92517 1.76611 
4.35324 3.31717 .979187 3.31717 3.31717 1.88922 3.3172 3.05121 1.63019 1.76611 3.57617 3.5762 
0 ]xsh
455.899 319.521 mo
455.521 319.073 454.821 318.793 454.156 318.793 cv
453.001 318.793 452.056 319.459 451.797 320.564 cv
451.216 320.564 li
451.006 321.005 li
451.713 321.005 li
451.706 321.096 451.706 321.159 451.706 321.229 cv
451.706 321.293 451.706 321.355 451.713 321.446 cv
451.216 321.446 li
451.006 321.888 li
451.797 321.888 li
452.056 322.993 453.001 323.672 454.121 323.672 cv
454.751 323.672 455.346 323.414 455.696 323.134 cv
455.696 322.539 li
455.346 322.959 454.786 323.232 454.156 323.232 cv
453.246 323.232 452.546 322.714 452.294 321.888 cv
454.786 321.888 li
454.996 321.446 li
452.196 321.446 li
452.189 321.37 452.182 321.307 452.182 321.236 cv
452.182 321.166 452.189 321.096 452.196 321.005 cv
455.199 321.005 li
455.409 320.564 li
452.294 320.564 li
452.511 319.809 453.211 319.234 454.086 319.234 cv
454.786 319.234 455.353 319.529 455.696 319.948 cv
455.899 319.521 li
ef
RPTEAG+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
455.934 323.672 mo
(, Canarias: 200)
[1.63022 1.76611 4.61218 3.3172 3.44324 3.31717 1.88925 .979187 3.3172 3.05124 1.63022 1.76611 
3.5762 3.5762 0 ]xsh
502.27 319.521 mo
501.893 319.073 501.192 318.793 500.527 318.793 cv
499.372 318.793 498.427 319.459 498.168 320.564 cv
497.588 320.564 li
497.377 321.005 li
498.084 321.005 li
498.077 321.096 498.077 321.159 498.077 321.229 cv
498.077 321.293 498.077 321.355 498.084 321.446 cv
497.588 321.446 li
497.377 321.888 li
498.168 321.888 li
498.427 322.993 499.372 323.672 500.493 323.672 cv
501.122 323.672 501.718 323.414 502.067 323.134 cv
502.067 322.539 li
501.718 322.959 501.157 323.232 500.527 323.232 cv
499.618 323.232 498.918 322.714 498.665 321.888 cv
501.157 321.888 li
501.368 321.446 li
498.567 321.446 li
498.561 321.37 498.553 321.307 498.553 321.236 cv
498.553 321.166 498.561 321.096 498.567 321.005 cv
501.57 321.005 li
501.78 320.564 li
498.665 320.564 li
498.882 319.809 499.582 319.234 500.457 319.234 cv
501.157 319.234 501.725 319.529 502.067 319.948 cv
502.27 319.521 li
ef
RPTEAG+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
502.304 323.672 mo
(, Ceuta:)
[1.63022 1.76608 4.61218 3.31717 3.44324 1.75629 3.31714 0 ]xsh
92.444 330.372 mo
(200)
[3.5422 3.54221 0 ]xsh
107.963 326.221 mo
107.585 325.773 106.885 325.493 106.22 325.493 cv
105.065 325.493 104.12 326.158 103.861 327.264 cv
103.28 327.264 li
103.07 327.705 li
103.777 327.705 li
103.77 327.796 103.77 327.859 103.77 327.929 cv
103.77 327.993 103.77 328.055 103.777 328.146 cv
103.28 328.146 li
103.07 328.588 li
103.861 328.588 li
104.12 329.693 105.065 330.372 106.185 330.372 cv
106.815 330.372 107.41 330.113 107.76 329.833 cv
107.76 329.238 li
107.41 329.658 106.85 329.931 106.22 329.931 cv
105.31 329.931 104.61 329.413 104.358 328.588 cv
106.85 328.588 li
107.06 328.146 li
104.26 328.146 li
104.253 328.07 104.246 328.006 104.246 327.936 cv
104.246 327.866 104.253 327.796 104.26 327.705 cv
107.263 327.705 li
107.473 327.264 li
104.358 327.264 li
104.575 326.508 105.275 325.934 106.15 325.934 cv
106.85 325.934 107.417 326.229 107.76 326.648 cv
107.963 326.221 li
ef
RPTEAG+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
107.963 330.372 mo
(, Melilla: 200)
[1.59618 1.59619 5.48113 3.28316 .945175 .945168 .945168 .945168 3.28317 1.59619 1.59618 3.54219 
3.54219 0 ]xsh
145.693 326.221 mo
145.315 325.773 144.615 325.493 143.95 325.493 cv
142.795 325.493 141.85 326.158 141.591 327.264 cv
141.01 327.264 li
140.8 327.705 li
141.507 327.705 li
141.5 327.796 141.5 327.859 141.5 327.929 cv
141.5 327.993 141.5 328.055 141.507 328.146 cv
141.01 328.146 li
140.8 328.588 li
141.591 328.588 li
141.85 329.693 142.795 330.372 143.915 330.372 cv
144.545 330.372 145.14 330.113 145.49 329.833 cv
145.49 329.238 li
145.14 329.658 144.58 329.931 143.95 329.931 cv
143.04 329.931 142.34 329.413 142.088 328.588 cv
144.58 328.588 li
144.79 328.146 li
141.99 328.146 li
141.983 328.07 141.976 328.006 141.976 327.936 cv
141.976 327.866 141.983 327.796 141.99 327.705 cv
144.993 327.705 li
145.203 327.264 li
142.088 327.264 li
142.305 326.508 143.005 325.934 143.88 325.934 cv
144.58 325.934 145.147 326.229 145.49 326.648 cv
145.693 326.221 li
ef
RPTEAG+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
145.693 330.372 mo
(\).)
[1.33727 0 ]xsh
84.9446 337.072 mo
(\245)sh
92.4446 337.072 mo
(Si al Cliente le quedan por cumplir en la l\222nea afectada entre 25 y 30 meses, deber\207 abonar: 230)
[4.05302 .937958 1.58178 3.27596 .937965 1.58178 4.57094 .937965 .937965 3.27596 3.40199 1.71502 
3.27596 1.58177 .937965 3.27596 1.58177 3.66103 3.40199 3.27596 3.66101 3.27597 3.40199 1.58177 
3.66101 3.53499 1.84799 1.58177 3.27597 3.40198 5.47394 3.66101 .937958 .937958 1.84799 1.58179 
3.27596 3.40199 1.58179 .937958 3.27596 1.58177 .937958 .937958 3.40201 3.27594 3.27597 1.58177 
3.27596 1.45601 3.27596 3.27597 1.71501 3.27597 3.66101 3.27597 1.58177 3.27596 3.40201 1.71503 
1.84799 3.27597 1.58176 3.53499 3.535 1.58173 2.88397 1.58179 3.53497 3.53497 1.58179 5.47394 
3.27594 3.01001 3.27597 3.00998 1.58899 1.58179 3.66101 3.27597 3.66104 3.27594 1.84802 3.27594 
1.58179 3.27594 3.66101 3.53497 3.40204 3.27594 1.84802 1.58899 1.58173 3.535 3.535 0 
]xsh
352.873 332.921 mo
352.495 332.473 351.795 332.193 351.13 332.193 cv
349.975 332.193 349.03 332.858 348.771 333.964 cv
348.19 333.964 li
347.98 334.405 li
348.688 334.405 li
348.68 334.496 348.68 334.559 348.68 334.629 cv
348.68 334.693 348.68 334.755 348.688 334.846 cv
348.19 334.846 li
347.98 335.288 li
348.771 335.288 li
349.03 336.393 349.975 337.072 351.095 337.072 cv
351.725 337.072 352.32 336.813 352.67 336.533 cv
352.67 335.938 li
352.32 336.358 351.761 336.631 351.13 336.631 cv
350.22 336.631 349.52 336.113 349.268 335.288 cv
351.761 335.288 li
351.97 334.846 li
349.17 334.846 li
349.164 334.77 349.156 334.706 349.156 334.636 cv
349.156 334.566 349.164 334.496 349.17 334.405 cv
352.173 334.405 li
352.384 333.964 li
349.268 333.964 li
349.486 333.208 350.186 332.634 351.061 332.634 cv
351.761 332.634 352.327 332.929 352.67 333.348 cv
352.873 332.921 li
ef
RPTEAG+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
352.866 337.072 mo
(, i.i.no.i  \(Pen\222nsula y Baleares: 271,40)
[1.58899 1.58182 .937988 1.58899 .937988 1.58899 3.40204 3.535 1.58899 .937988 1.58182 1.58179 
1.32999 4.05304 3.27597 3.40204 .937988 3.40201 3.01001 3.40204 .937988 3.27597 1.58179 2.884 
1.58182 4.31204 3.27597 .937988 3.276 3.27597 1.84802 3.27597 3.01004 1.58899 1.58182 3.53497 
3.535 3.535 1.58899 3.53503 0 ]xsh
457.321 332.921 mo
456.943 332.473 456.243 332.193 455.578 332.193 cv
454.423 332.193 453.478 332.858 453.219 333.964 cv
452.638 333.964 li
452.428 334.405 li
453.135 334.405 li
453.128 334.496 453.128 334.559 453.128 334.629 cv
453.128 334.693 453.128 334.755 453.135 334.846 cv
452.638 334.846 li
452.428 335.288 li
453.219 335.288 li
453.478 336.393 454.423 337.072 455.543 337.072 cv
456.173 337.072 456.768 336.813 457.118 336.533 cv
457.118 335.938 li
456.768 336.358 456.208 336.631 455.578 336.631 cv
454.668 336.631 453.968 336.113 453.716 335.288 cv
456.208 335.288 li
456.418 334.846 li
453.618 334.846 li
453.611 334.77 453.604 334.706 453.604 334.636 cv
453.604 334.566 453.611 334.496 453.618 334.405 cv
456.621 334.405 li
456.831 333.964 li
453.716 333.964 li
453.933 333.208 454.633 332.634 455.508 332.634 cv
456.208 332.634 456.775 332.929 457.118 333.348 cv
457.321 332.921 li
ef
RPTEAG+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
457.314 337.072 mo
(, Canarias: 230)
[1.58902 1.58182 4.57098 3.27597 3.40204 3.276 1.84802 .938019 3.276 3.01001 1.58902 1.58182 
3.535 3.53503 0 ]xsh
502.746 332.921 mo
502.368 332.473 501.668 332.193 501.002 332.193 cv
499.848 332.193 498.902 332.858 498.643 333.964 cv
498.062 333.964 li
497.852 334.405 li
498.559 334.405 li
498.552 334.496 498.552 334.559 498.552 334.629 cv
498.552 334.693 498.552 334.755 498.559 334.846 cv
498.062 334.846 li
497.852 335.288 li
498.643 335.288 li
498.902 336.393 499.848 337.072 500.968 337.072 cv
501.598 337.072 502.193 336.813 502.543 336.533 cv
502.543 335.938 li
502.193 336.358 501.632 336.631 501.002 336.631 cv
500.093 336.631 499.393 336.113 499.141 335.288 cv
501.632 335.288 li
501.843 334.846 li
499.043 334.846 li
499.036 334.77 499.029 334.706 499.029 334.636 cv
499.029 334.566 499.036 334.496 499.043 334.405 cv
502.045 334.405 li
502.255 333.964 li
499.141 333.964 li
499.357 333.208 500.057 332.634 500.932 332.634 cv
501.632 332.634 502.2 332.929 502.543 333.348 cv
502.746 332.921 li
ef
RPTEAG+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
502.738 337.072 mo
(, Ceuta:)
[1.58902 1.58179 4.57098 3.276 3.40204 1.71503 3.276 0 ]xsh
92.444 343.772 mo
(230)
[3.5422 3.54221 0 ]xsh
107.963 339.621 mo
107.585 339.173 106.885 338.893 106.22 338.893 cv
105.065 338.893 104.12 339.558 103.861 340.664 cv
103.28 340.664 li
103.07 341.105 li
103.777 341.105 li
103.77 341.196 103.77 341.259 103.77 341.329 cv
103.77 341.393 103.77 341.455 103.777 341.546 cv
103.28 341.546 li
103.07 341.988 li
103.861 341.988 li
104.12 343.093 105.065 343.772 106.185 343.772 cv
106.815 343.772 107.41 343.513 107.76 343.233 cv
107.76 342.638 li
107.41 343.058 106.85 343.331 106.22 343.331 cv
105.31 343.331 104.61 342.813 104.358 341.988 cv
106.85 341.988 li
107.06 341.546 li
104.26 341.546 li
104.253 341.47 104.246 341.406 104.246 341.336 cv
104.246 341.266 104.253 341.196 104.26 341.105 cv
107.263 341.105 li
107.473 340.664 li
104.358 340.664 li
104.575 339.908 105.275 339.334 106.15 339.334 cv
106.85 339.334 107.417 339.629 107.76 340.048 cv
107.963 339.621 li
ef
RPTEAG+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
107.963 343.772 mo
(, Melilla: 230)
[1.59618 1.59619 5.48113 3.28316 .945175 .945168 .945168 .945168 3.28317 1.59619 1.59618 3.54219 
3.54219 0 ]xsh
145.693 339.621 mo
145.315 339.173 144.615 338.893 143.95 338.893 cv
142.795 338.893 141.85 339.558 141.591 340.664 cv
141.01 340.664 li
140.8 341.105 li
141.507 341.105 li
141.5 341.196 141.5 341.259 141.5 341.329 cv
141.5 341.393 141.5 341.455 141.507 341.546 cv
141.01 341.546 li
140.8 341.988 li
141.591 341.988 li
141.85 343.093 142.795 343.772 143.915 343.772 cv
144.545 343.772 145.14 343.513 145.49 343.233 cv
145.49 342.638 li
145.14 343.058 144.58 343.331 143.95 343.331 cv
143.04 343.331 142.34 342.813 142.088 341.988 cv
144.58 341.988 li
144.79 341.546 li
141.99 341.546 li
141.983 341.47 141.976 341.406 141.976 341.336 cv
141.976 341.266 141.983 341.196 141.99 341.105 cv
144.993 341.105 li
145.203 340.664 li
142.088 340.664 li
142.305 339.908 143.005 339.334 143.88 339.334 cv
144.58 339.334 145.147 339.629 145.49 340.048 cv
145.693 339.621 li
ef
RPTEAG+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
145.693 343.772 mo
(\))sh
84.9446 350.472 mo
(\245)sh
92.4446 350.472 mo
(Si al Cliente le quedan por cumplir en la l\222nea afectada entre 31 y 36 meses del CP, deber\207 abonar: 250)
[4.09132 .976265 1.75168 3.31426 .976265 1.75168 4.60925 .976265 .976265 3.31426 3.44029 1.75332 
3.31426 1.75168 .976265 3.31426 1.75168 3.69931 3.44031 3.31425 3.69933 3.31425 3.44029 1.75169 
3.69931 3.57329 1.88629 1.75168 3.31427 3.44029 5.51222 3.69933 .976273 .976257 1.88629 1.75168 
3.31427 3.44031 1.75168 .976257 3.31427 1.75168 .976257 .976257 3.44031 3.31427 3.31425 1.75168 
3.31425 1.49429 3.31425 3.31425 1.75331 3.31425 3.69931 3.31425 1.75168 3.31427 3.44028 1.75333 
1.88629 3.31424 1.75169 3.57327 3.57327 1.75168 2.92227 1.75165 3.5733 3.57324 1.75171 5.51221 
3.31427 3.04828 3.31427 3.04828 1.75171 3.69928 3.31427 .976257 1.75168 4.60922 4.09131 1.62729 
1.75168 3.69931 3.31424 3.69934 3.31424 1.88629 3.31424 1.75171 3.31427 3.69928 3.5733 3.44025 
3.31427 1.88629 1.62726 1.75171 3.57324 3.5733 0 ]xsh
379.489 346.006 mo
379.082 345.523 378.329 345.222 377.613 345.222 cv
376.37 345.222 375.354 345.938 375.075 347.128 cv
374.45 347.128 li
374.223 347.602 li
374.984 347.602 li
374.977 347.7 374.977 347.768 374.977 347.843 cv
374.977 347.911 374.977 347.979 374.984 348.077 cv
374.45 348.077 li
374.223 348.552 li
375.075 348.552 li
375.354 349.742 376.37 350.472 377.575 350.472 cv
378.254 350.472 378.894 350.194 379.27 349.893 cv
379.27 349.252 li
378.894 349.704 378.291 349.998 377.613 349.998 cv
376.634 349.998 375.881 349.441 375.61 348.552 cv
378.291 348.552 li
378.517 348.077 li
375.504 348.077 li
375.496 347.994 375.489 347.927 375.489 347.851 cv
375.489 347.776 375.496 347.7 375.504 347.602 cv
378.736 347.602 li
378.961 347.128 li
375.61 347.128 li
375.843 346.314 376.596 345.697 377.538 345.697 cv
378.291 345.697 378.901 346.013 379.27 346.465 cv
379.489 346.006 li
ef
RPTEAG+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
379.52 350.472 mo
(, i.i.no.i \(Pen\222nsula y Baleares: 295)
[1.62729 1.75171 .976288 1.62729 .976288 1.62729 3.44031 3.5733 1.62729 .976288 1.75168 1.36829 
4.09134 3.31427 3.44031 .976288 3.44031 3.04834 3.44031 .976288 3.31427 1.75171 2.92227 1.75168 
4.35034 3.3143 .976257 3.3143 3.31427 1.88629 3.31427 3.04834 1.62729 1.75168 3.5733 3.5733 
0 ]xsh
475.812 346.321 mo
475.434 345.873 474.734 345.593 474.069 345.593 cv
472.914 345.593 471.969 346.258 471.71 347.364 cv
471.129 347.364 li
470.919 347.805 li
471.626 347.805 li
471.619 347.896 471.619 347.959 471.619 348.029 cv
471.619 348.093 471.619 348.155 471.626 348.246 cv
471.129 348.246 li
470.919 348.688 li
471.71 348.688 li
471.969 349.793 472.914 350.472 474.034 350.472 cv
474.664 350.472 475.259 350.213 475.609 349.933 cv
475.609 349.338 li
475.259 349.758 474.699 350.031 474.069 350.031 cv
473.159 350.031 472.459 349.513 472.207 348.688 cv
474.699 348.688 li
474.909 348.246 li
472.109 348.246 li
472.102 348.17 472.095 348.106 472.095 348.036 cv
472.095 347.966 472.102 347.896 472.109 347.805 cv
475.112 347.805 li
475.322 347.364 li
472.207 347.364 li
472.424 346.608 473.124 346.034 473.999 346.034 cv
474.699 346.034 475.266 346.329 475.609 346.748 cv
475.812 346.321 li
ef
RPTEAG+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
475.843 350.472 mo
(, Canarias: 250)
[1.62732 1.75171 4.60928 3.3143 3.44034 3.31427 1.88635 .976288 3.3143 3.04834 1.62729 1.75174 
3.5733 3.5733 0 ]xsh
522.114 346.321 mo
521.736 345.873 521.036 345.593 520.371 345.593 cv
519.216 345.593 518.271 346.258 518.012 347.364 cv
517.43 347.364 li
517.221 347.805 li
517.928 347.805 li
517.921 347.896 517.921 347.959 517.921 348.029 cv
517.921 348.093 517.921 348.155 517.928 348.246 cv
517.43 348.246 li
517.221 348.688 li
518.012 348.688 li
518.271 349.793 519.216 350.472 520.336 350.472 cv
520.966 350.472 521.561 350.213 521.911 349.933 cv
521.911 349.338 li
521.561 349.758 521.001 350.031 520.371 350.031 cv
519.461 350.031 518.761 349.513 518.509 348.688 cv
521.001 348.688 li
521.211 348.246 li
518.411 348.246 li
518.404 348.17 518.396 348.106 518.396 348.036 cv
518.396 347.966 518.404 347.896 518.411 347.805 cv
521.414 347.805 li
521.624 347.364 li
518.509 347.364 li
518.726 346.608 519.426 346.034 520.301 346.034 cv
521.001 346.034 521.568 346.329 521.911 346.748 cv
522.114 346.321 li
ef
RPTEAG+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
522.145 350.472 mo
(,)sh
92.445 357.172 mo
(Ceuta: 250)
[4.57816 3.28318 3.40921 1.72224 3.28318 1.59619 1.5962 3.5422 3.5422 0 ]xsh
127.43 353.021 mo
127.052 352.573 126.352 352.293 125.687 352.293 cv
124.532 352.293 123.587 352.959 123.328 354.064 cv
122.747 354.064 li
122.537 354.505 li
123.244 354.505 li
123.237 354.596 123.237 354.659 123.237 354.729 cv
123.237 354.793 123.237 354.855 123.244 354.946 cv
122.747 354.946 li
122.537 355.388 li
123.328 355.388 li
123.587 356.493 124.532 357.172 125.652 357.172 cv
126.282 357.172 126.877 356.914 127.227 356.634 cv
127.227 356.039 li
126.877 356.459 126.317 356.732 125.687 356.732 cv
124.777 356.732 124.077 356.214 123.825 355.388 cv
126.317 355.388 li
126.527 354.946 li
123.727 354.946 li
123.72 354.87 123.713 354.807 123.713 354.736 cv
123.713 354.666 123.72 354.596 123.727 354.505 cv
126.73 354.505 li
126.94 354.064 li
123.825 354.064 li
124.042 353.309 124.742 352.734 125.617 352.734 cv
126.317 352.734 126.884 353.029 127.227 353.448 cv
127.43 353.021 li
ef
RPTEAG+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
127.43 357.172 mo
(, Melilla: 250)
[1.59618 1.59619 5.48112 3.28317 .945175 .94516 .945175 .945175 3.28317 1.59618 1.59619 3.54219 
3.54218 0 ]xsh
165.159 353.021 mo
164.781 352.573 164.081 352.293 163.416 352.293 cv
162.261 352.293 161.316 352.959 161.057 354.064 cv
160.476 354.064 li
160.266 354.505 li
160.973 354.505 li
160.966 354.596 160.966 354.659 160.966 354.729 cv
160.966 354.793 160.966 354.855 160.973 354.946 cv
160.476 354.946 li
160.266 355.388 li
161.057 355.388 li
161.316 356.493 162.261 357.172 163.381 357.172 cv
164.011 357.172 164.606 356.914 164.956 356.634 cv
164.956 356.039 li
164.606 356.459 164.046 356.732 163.416 356.732 cv
162.506 356.732 161.806 356.214 161.554 355.388 cv
164.046 355.388 li
164.256 354.946 li
161.456 354.946 li
161.449 354.87 161.442 354.807 161.442 354.736 cv
161.442 354.666 161.449 354.596 161.456 354.505 cv
164.459 354.505 li
164.67 354.064 li
161.554 354.064 li
161.771 353.309 162.471 352.734 163.346 352.734 cv
164.046 352.734 164.613 353.029 164.956 353.448 cv
165.159 353.021 li
ef
RPTEAG+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
165.159 357.172 mo
(\))sh
71.184 363.872 mo
(Si el dispositivo m\227vil a precio promocional adquirido por el Cliente fuera un iPhone, el cargo que finalmente le sea de aplica)
[4.0291 .91404 1.53396 3.25204 .91404 1.53397 3.63709 .914047 2.98608 3.6371 3.51105 2.98608 
.91404 1.6911 .91404 2.86004 3.51106 1.53396 5.45 3.51106 2.86005 .91404 .91404 1.53397 
3.25204 1.53395 3.63712 1.82407 3.25204 3.25204 .914047 3.51106 1.53397 3.63708 1.8241 3.51105 
5.45001 3.51108 3.25204 .914032 3.51106 3.37808 3.25204 .914047 1.53395 3.25203 3.6371 3.6371 
3.37807 .914047 1.82407 .914032 3.63712 3.51105 1.53397 3.63708 3.51105 1.82407 1.53397 3.25204 
.914032 1.53397 4.54703 .914032 .914032 3.25204 3.37808 1.69107 3.25204 1.53397 1.43207 3.37808 
3.25204 1.82407 3.25204 1.53397 3.37805 3.37808 1.53397 .914032 4.02908 3.37808 3.51105 3.37808 
3.25204 1.56506 1.53394 3.25204 .914032 1.53397 3.25204 3.25201 1.8241 3.51105 3.51105 1.53394 
3.63712 3.37805 3.25204 1.53397 1.43207 .914032 3.37808 3.25201 .914063 5.44998 3.25204 3.37808 
1.6911 3.25201 1.53397 .914032 3.25204 1.53394 2.98608 3.25204 3.25201 1.53397 3.63708 3.25204 
1.53394 3.25204 3.63708 .914032 .914063 3.25201 0 ]xsh
394.691 363.872 mo
(ci\227n en funci\227n de las cantidades arriba definidas)
[3.25204 .914032 3.51105 3.37808 1.53397 3.25201 3.37808 1.53394 1.4321 3.37805 3.37808 3.25204 
.914032 3.51105 3.37808 1.53394 3.63712 3.25204 1.53394 .914032 3.25204 2.98608 1.53394 3.25204 
3.25204 3.37805 1.6911 .914032 3.63712 3.25201 3.63708 3.25204 2.98608 1.53394 3.25204 1.82407 
1.8241 .914032 3.63708 3.25204 1.53394 3.63712 3.25201 1.43207 .914063 3.37808 .914063 3.63708 
3.25201 0 ]xsh
71.184 370.572 mo
(por Compromiso en el Servicio, ser\207 incrementado con 120)
[3.65273 3.52669 1.83971 1.56519 4.56265 3.5267 5.46564 3.65273 1.83971 3.52669 5.46564 .929672 
3.00171 3.5267 1.56519 3.26768 3.39371 1.56519 3.26767 .929688 1.56519 4.04471 3.26768 1.83971 
2.87567 .929688 3.26767 .929657 3.5267 1.58069 1.56519 3.00171 3.26767 1.83972 3.26767 1.56519 
.929672 3.39371 3.26767 1.83971 3.26767 5.46564 3.26767 3.39371 1.70674 3.26765 3.65274 3.5267 
1.56519 3.26767 3.52667 3.39371 1.56522 3.52667 3.5267 0 ]xsh
235.344 366.421 mo
234.966 365.973 234.266 365.693 233.601 365.693 cv
232.446 365.693 231.501 366.358 231.242 367.464 cv
230.661 367.464 li
230.451 367.905 li
231.158 367.905 li
231.151 367.996 231.151 368.059 231.151 368.129 cv
231.151 368.193 231.151 368.255 231.158 368.346 cv
230.661 368.346 li
230.451 368.788 li
231.242 368.788 li
231.501 369.893 232.446 370.572 233.566 370.572 cv
234.196 370.572 234.791 370.313 235.141 370.033 cv
235.141 369.438 li
234.791 369.858 234.231 370.131 233.601 370.131 cv
232.691 370.131 231.991 369.613 231.739 368.788 cv
234.231 368.788 li
234.441 368.346 li
231.641 368.346 li
231.634 368.27 231.627 368.206 231.627 368.136 cv
231.627 368.066 231.634 367.996 231.641 367.905 cv
234.644 367.905 li
234.854 367.464 li
231.739 367.464 li
231.956 366.708 232.656 366.134 233.531 366.134 cv
234.231 366.134 234.798 366.429 235.141 366.848 cv
235.344 366.421 li
ef
RPTEAG+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
235.329 370.572 mo
( adicionales, impuestos indirectos no incluidos \(Pen\222nsula y Baleares: 141,6)
[1.56517 3.26764 3.65271 .929657 3.26764 .929657 3.52666 3.39369 3.26764 .929657 3.26764 3.00171 
1.58066 1.56516 .929657 5.46564 3.65268 3.39371 3.26764 3.00168 1.7067 3.52667 3.00171 1.56516 
.929657 3.39368 3.65271 .929657 1.83969 3.26764 3.26767 1.7067 3.52667 3.00171 1.56516 3.39371 
3.52667 1.56516 .929657 3.39368 3.26764 .929688 3.39368 .929626 3.65271 3.52667 3.00168 1.56516 
1.32166 4.04468 3.26767 3.39368 .929657 3.39368 3.00168 3.39371 .929626 3.26764 1.56519 2.87561 
1.56519 4.30371 3.26764 .929657 3.26764 3.26767 1.83966 3.26764 3.00171 1.58063 1.56519 3.52667 
3.52667 3.52664 1.58066 0 ]xsh
438.942 366.421 mo
438.564 365.973 437.864 365.693 437.199 365.693 cv
436.044 365.693 435.099 366.358 434.84 367.464 cv
434.259 367.464 li
434.049 367.905 li
434.756 367.905 li
434.749 367.996 434.749 368.059 434.749 368.129 cv
434.749 368.193 434.749 368.255 434.756 368.346 cv
434.259 368.346 li
434.049 368.788 li
434.84 368.788 li
435.099 369.893 436.044 370.572 437.164 370.572 cv
437.794 370.572 438.389 370.313 438.739 370.033 cv
438.739 369.438 li
438.389 369.858 437.829 370.131 437.199 370.131 cv
436.289 370.131 435.589 369.613 435.337 368.788 cv
437.829 368.788 li
438.039 368.346 li
435.239 368.346 li
435.232 368.27 435.225 368.206 435.225 368.136 cv
435.225 368.066 435.232 367.996 435.239 367.905 cv
438.242 367.905 li
438.452 367.464 li
435.337 367.464 li
435.554 366.708 436.254 366.134 437.129 366.134 cv
437.829 366.134 438.396 366.429 438.739 366.848 cv
438.942 366.421 li
ef
RPTEAG+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
438.926 370.572 mo
(, Canarias: 120)
[1.58072 1.56522 4.56268 3.26767 3.39374 3.2677 1.83972 .929718 3.2677 3.00171 1.58072 1.56522 
3.5267 3.52673 0 ]xsh
484.217 366.421 mo
483.839 365.973 483.139 365.693 482.474 365.693 cv
481.319 365.693 480.374 366.358 480.115 367.464 cv
479.534 367.464 li
479.324 367.905 li
480.031 367.905 li
480.024 367.996 480.024 368.059 480.024 368.129 cv
480.024 368.193 480.024 368.255 480.031 368.346 cv
479.534 368.346 li
479.324 368.788 li
480.115 368.788 li
480.374 369.893 481.319 370.572 482.439 370.572 cv
483.069 370.572 483.664 370.313 484.014 370.033 cv
484.014 369.438 li
483.664 369.858 483.104 370.131 482.474 370.131 cv
481.564 370.131 480.864 369.613 480.612 368.788 cv
483.104 368.788 li
483.314 368.346 li
480.514 368.346 li
480.507 368.27 480.5 368.206 480.5 368.136 cv
480.5 368.066 480.507 367.996 480.514 367.905 cv
483.517 367.905 li
483.727 367.464 li
480.612 367.464 li
480.829 366.708 481.529 366.134 482.404 366.134 cv
483.104 366.134 483.671 366.429 484.014 366.848 cv
484.217 366.421 li
ef
RPTEAG+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
484.202 370.572 mo
(, Ceuta: 120)
[1.58072 1.56522 4.56268 3.26767 3.39374 1.70676 3.2677 1.58072 1.56522 3.5267 3.52673 0 
]xsh
522.162 366.421 mo
521.784 365.973 521.084 365.693 520.419 365.693 cv
519.264 365.693 518.319 366.358 518.06 367.464 cv
517.479 367.464 li
517.269 367.905 li
517.975 367.905 li
517.969 367.996 517.969 368.059 517.969 368.129 cv
517.969 368.193 517.969 368.255 517.975 368.346 cv
517.479 368.346 li
517.269 368.788 li
518.06 368.788 li
518.319 369.893 519.264 370.572 520.384 370.572 cv
521.014 370.572 521.609 370.313 521.959 370.033 cv
521.959 369.438 li
521.609 369.858 521.048 370.131 520.419 370.131 cv
519.509 370.131 518.809 369.613 518.557 368.788 cv
521.048 368.788 li
521.259 368.346 li
518.459 368.346 li
518.452 368.27 518.445 368.206 518.445 368.136 cv
518.445 368.066 518.452 367.996 518.459 367.905 cv
521.462 367.905 li
521.671 367.464 li
518.557 367.464 li
518.773 366.708 519.473 366.134 520.348 366.134 cv
521.048 366.134 521.616 366.429 521.959 366.848 cv
522.162 366.421 li
ef
RPTEAG+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
522.146 370.572 mo
(,)sh
71.185 377.272 mo
(Melilla: 120)
[5.48112 3.28315 .945152 .945152 .945152 .945152 3.28314 1.59618 1.59616 3.54218 3.54216 0 
]xsh
105.722 373.121 mo
105.344 372.673 104.644 372.393 103.979 372.393 cv
102.824 372.393 101.879 373.058 101.62 374.164 cv
101.039 374.164 li
100.829 374.605 li
101.536 374.605 li
101.529 374.696 101.529 374.759 101.529 374.829 cv
101.529 374.893 101.529 374.955 101.536 375.046 cv
101.039 375.046 li
100.829 375.488 li
101.62 375.488 li
101.879 376.593 102.824 377.272 103.944 377.272 cv
104.574 377.272 105.169 377.013 105.519 376.733 cv
105.519 376.138 li
105.169 376.558 104.609 376.831 103.979 376.831 cv
103.069 376.831 102.369 376.313 102.117 375.488 cv
104.609 375.488 li
104.819 375.046 li
102.019 375.046 li
102.012 374.97 102.005 374.906 102.005 374.836 cv
102.005 374.766 102.012 374.696 102.019 374.605 cv
105.022 374.605 li
105.232 374.164 li
102.117 374.164 li
102.334 373.408 103.034 372.834 103.909 372.834 cv
104.609 372.834 105.176 373.129 105.519 373.548 cv
105.722 373.121 li
ef
RPTEAG+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
105.722 377.272 mo
(\))sh
%ADOBeginSubsetFont: HIBBAA+HelveticaNeue-Roman AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
RPTEAH+HelveticaNeue-Roman dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/z <1C60D8A8C9B75BE5656FDF07D83A5FDE8B4B1DDC95280943DF78465A42D7
44CA0D308200AA602EA1FFB4A3DAA735C784AC6D874F0174284B6F4AA86229C2
99F47E88> |-
systemdict /gcheck known {setglobal} if end {end} if
end
RPTEAH+HelveticaNeue-Roman /Encoding get
dup 122 /z put
pop
%ADOEndSubsetFont
/RPTEAH+HelveticaNeue-Roman*1 
[32{/.notdef}rp /space 11{/.notdef}rp /comma /hyphen /period 2{/.notdef}rp /one 
/two /three /four /five 11{/.notdef}rp /A /B /C 
/D /E /.notdef /G /.notdef /I 2{/.notdef}rp /L 
/M /N /O /P /.notdef /R /S /T 
/U 11{/.notdef}rp /a /b /c /d /e /f 
/g /.notdef /i 2{/.notdef}rp /l /m /n /o 
/p /.notdef /r /s /t /.notdef /v 3{/.notdef}rp 
/z 28{/.notdef}rp /oacute 7{/.notdef}rp /udieresis 96{/.notdef}rp]
RPTEAH+HelveticaNeue-Roman nf
RPTEAH+HelveticaNeue-Roman*1 [7 0 0 -7 0 0 ]msf
71.1845 390.672 mo
(b.2. Compromiso de Permanencia asociado a la contrataci\227n de tarifas de voz del servicio m\227vil postpago residencial ORANGE,)
[3.75385 1.54883 3.49483 1.54882 1.50153 4.65682 3.62086 5.57381 3.75385 1.93378 3.62086 5.57381 
1.15683 3.10283 3.62086 1.50153 3.75384 3.36185 1.50153 4.13879 3.36185 1.93378 5.57379 3.36185 
3.49484 3.36185 3.49481 3.36185 1.15683 3.36185 1.50153 3.36185 3.10284 3.62085 3.36185 1.15683 
3.36185 3.75385 3.62085 1.50153 3.36185 1.50153 1.15683 3.36185 1.50153 3.36182 3.62088 3.49481 
1.80783 1.93378 3.36185 1.80783 3.36185 3.36182 1.15683 3.62085 3.49484 1.50153 3.75385 3.36182 
1.50153 1.80786 3.36182 1.93378 1.15683 1.67487 3.36182 3.10284 1.50153 3.75385 3.36182 1.50153 
3.10284 3.62085 2.9628 1.50153 3.75385 3.36182 1.15683 1.50153 3.10281 3.36185 1.93378 3.10281 
1.15683 3.36185 1.1568 3.62088 1.50153 5.57379 3.62088 3.10281 1.15683 1.1568 1.50153 3.75385 
3.62085 3.10284 1.80783 3.75385 3.36182 3.62088 3.62085 1.50153 1.93378 3.36182 3.10284 1.1568 
3.75385 3.36185 3.49481 3.36185 1.15683 3.36185 1.1568 1.50153 4.92279 4.3978 4.13879 4.65683 
4.91583 3.87976 0 ]xsh
RPTEAG+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
423.273 390.672 mo
( el Cliente se compromete a mantener)
[1.50159 3.23584 .897858 1.50159 4.53085 .897858 .897858 3.23587 3.36188 1.67493 3.23587 1.50156 
2.96991 3.23587 1.50156 3.23587 3.49487 5.43384 3.62091 1.80789 3.49487 5.43384 3.23587 1.6749 
3.23587 1.50159 3.23584 1.50159 5.43384 3.23584 3.36191 1.6749 3.2359 3.36188 3.23584 0 
]xsh
71.1845 397.372 mo
(la tarifa contratada durante el tiempo aceptado en el anverso del documento. En caso de incumplimiento, el Cliente deber\207 abona)
[1.11335 3.45135 2.43686 1.8904 3.45135 2.02338 1.11335 1.63139 3.45135 2.43686 3.45135 3.71037 
3.57738 1.8904 2.02338 3.45135 1.8904 3.45135 3.8364 3.45135 2.43686 3.83641 3.57738 2.02339 
3.45134 3.57739 1.8904 3.45135 2.43686 3.45134 1.11336 2.43687 1.8904 1.11336 3.45134 5.64931 
3.83641 3.71037 2.43686 3.45135 3.45134 3.45134 3.83641 1.8904 3.45135 3.8364 3.71037 2.43686 
3.45135 3.57738 2.43687 3.45134 1.11336 2.43686 3.45134 3.57739 3.05936 3.45134 2.02339 3.18538 
3.71037 2.43686 3.8364 3.45135 1.11334 2.43689 3.83636 3.71039 3.45135 3.57739 5.64929 3.45135 
3.57739 1.89038 3.71039 1.76434 2.43689 3.96939 3.57736 2.43689 3.45135 3.45135 3.18536 3.71039 
2.43686 3.8364 3.45135 2.43689 1.11334 3.57739 3.45135 3.57736 5.64932 3.8364 1.11337 1.11334 
5.64932 1.11334 3.45135 3.57736 1.89041 3.71036 1.76437 2.43689 3.45132 1.11337 2.43686 4.74634 
1.11334 1.11337 3.45132 3.57739 1.89041 3.45135 2.43686 3.83643 3.45132 3.8364 3.45135 2.02338 
3.45135 2.43689 3.45135 3.8364 3.71036 3.57739 0 ]xsh
451.726 397.372 mo
(r los siguientes importes:)
[2.02338 2.43689 1.11334 3.71036 3.18539 2.43686 3.18539 1.11334 3.71039 3.57736 1.11337 3.45132 
3.57739 1.89041 3.45135 3.18536 2.43689 1.11334 5.64932 3.8364 3.71039 2.02338 1.89038 3.45135 
3.18542 0 ]xsh
83.9443 404.072 mo
(\245)sh
92.4443 404.072 mo
(Si el Cliente hubiere cumplido en la l\222nea afectada menos de 6 meses del CP, deber\207 abonar a ORANGE: 50)
[4.06111 .94606 1.60058 3.28407 .94606 1.60058 4.57904 .94606 .946068 3.28406 3.4101 1.72311 
3.28406 1.60058 3.4101 3.4101 3.66911 .94606 3.28407 1.85608 3.28407 1.60057 3.28406 3.4101 
5.48204 3.66911 .94606 .94606 3.66913 3.54308 1.60057 3.28406 3.4101 1.60059 .94606 3.28407 
1.60057 .94606 .94606 3.41011 3.28406 3.28406 1.60057 3.28407 1.46408 3.28406 3.28406 1.72311 
3.28404 3.66911 3.28406 1.60059 5.48201 3.28406 3.4101 3.54308 3.01808 1.60059 3.66911 3.28406 
1.60059 3.54306 1.60059 5.48203 3.28406 3.0181 3.28406 3.01807 1.60059 3.66913 3.28406 .946045 
1.60059 4.57904 4.0611 1.59708 1.60059 3.6691 3.28406 3.66913 3.28406 1.85608 3.28406 1.60056 
3.28406 3.6691 3.54309 3.4101 3.28406 1.85608 1.60059 3.28406 1.60056 4.83804 4.32013 4.06113 
4.57901 4.83807 3.80209 1.59705 1.60059 3.54306 0 ]xsh
388.339 399.606 mo
387.932 399.123 387.179 398.822 386.463 398.822 cv
385.22 398.822 384.204 399.538 383.925 400.728 cv
383.3 400.728 li
383.074 401.202 li
383.834 401.202 li
383.827 401.3 383.827 401.368 383.827 401.443 cv
383.827 401.511 383.827 401.579 383.834 401.677 cv
383.3 401.677 li
383.074 402.152 li
383.925 402.152 li
384.204 403.342 385.22 404.072 386.426 404.072 cv
387.104 404.072 387.744 403.794 388.12 403.493 cv
388.12 402.852 li
387.744 403.304 387.141 403.598 386.463 403.598 cv
385.484 403.598 384.731 403.041 384.46 402.152 cv
387.141 402.152 li
387.367 401.677 li
384.354 401.677 li
384.347 401.594 384.339 401.527 384.339 401.451 cv
384.339 401.376 384.347 401.3 384.354 401.202 cv
387.586 401.202 li
387.812 400.728 li
384.46 400.728 li
384.693 399.914 385.446 399.297 386.388 399.297 cv
387.141 399.297 387.751 399.613 388.12 400.065 cv
388.339 399.606 li
ef
RPTEAG+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
388.34 404.072 mo
( i.i.no.i. \(Pen\222nsula y Baleares: 59)
[1.60059 .946075 1.59711 .946075 1.59711 3.41013 3.54309 1.59708 .946075 1.59711 1.60059 1.3381 
4.06113 3.28406 3.41013 .946075 3.41013 3.0181 3.41013 .946075 3.28409 1.60059 2.89209 1.60059 
4.32016 3.28409 .946075 3.28409 3.28409 1.85611 3.28409 3.0181 1.59711 1.60062 3.54309 0 
]xsh
479.738 399.606 mo
479.332 399.123 478.578 398.822 477.863 398.822 cv
476.62 398.822 475.603 399.538 475.324 400.728 cv
474.699 400.728 li
474.473 401.202 li
475.234 401.202 li
475.226 401.3 475.226 401.368 475.226 401.443 cv
475.226 401.511 475.226 401.579 475.234 401.677 cv
474.699 401.677 li
474.473 402.152 li
475.324 402.152 li
475.603 403.342 476.62 404.072 477.825 404.072 cv
478.503 404.072 479.143 403.794 479.52 403.493 cv
479.52 402.852 li
479.143 403.304 478.541 403.598 477.863 403.598 cv
476.884 403.598 476.13 403.041 475.859 402.152 cv
478.541 402.152 li
478.767 401.677 li
475.754 401.677 li
475.746 401.594 475.739 401.527 475.739 401.451 cv
475.739 401.376 475.746 401.3 475.754 401.202 cv
478.985 401.202 li
479.211 400.728 li
475.859 400.728 li
476.093 399.914 476.846 399.297 477.788 399.297 cv
478.541 399.297 479.151 399.613 479.52 400.065 cv
479.738 399.606 li
ef
RPTEAG+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
479.739 404.072 mo
(, Canarias: 50)
[1.59711 1.60062 4.5791 3.28409 3.41013 3.28409 1.85614 .946106 3.28409 3.01816 1.59711 1.60062 
3.54312 0 ]xsh
522.144 399.606 mo
521.737 399.123 520.984 398.822 520.268 398.822 cv
519.025 398.822 518.008 399.538 517.73 400.728 cv
517.104 400.728 li
516.879 401.202 li
517.639 401.202 li
517.632 401.3 517.632 401.368 517.632 401.443 cv
517.632 401.511 517.632 401.579 517.639 401.677 cv
517.104 401.677 li
516.879 402.152 li
517.73 402.152 li
518.008 403.342 519.025 404.072 520.23 404.072 cv
520.908 404.072 521.548 403.794 521.925 403.493 cv
521.925 402.852 li
521.548 403.304 520.946 403.598 520.268 403.598 cv
519.289 403.598 518.536 403.041 518.264 402.152 cv
520.946 402.152 li
521.172 401.677 li
518.159 401.677 li
518.152 401.594 518.144 401.527 518.144 401.451 cv
518.144 401.376 518.152 401.3 518.159 401.202 cv
521.39 401.202 li
521.616 400.728 li
518.264 400.728 li
518.498 399.914 519.251 399.297 520.193 399.297 cv
520.946 399.297 521.556 399.613 521.925 400.065 cv
522.144 399.606 li
ef
RPTEAG+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
522.145 404.072 mo
(,)sh
92.445 410.772 mo
(Ceuta: 54)
[4.57816 3.28318 3.40921 1.72224 3.28318 1.59619 1.5962 3.5422 0 ]xsh
123.888 406.621 mo
123.51 406.173 122.81 405.893 122.145 405.893 cv
120.99 405.893 120.045 406.558 119.786 407.664 cv
119.205 407.664 li
118.995 408.105 li
119.702 408.105 li
119.695 408.196 119.695 408.259 119.695 408.329 cv
119.695 408.393 119.695 408.455 119.702 408.546 cv
119.205 408.546 li
118.995 408.988 li
119.786 408.988 li
120.045 410.093 120.99 410.772 122.11 410.772 cv
122.74 410.772 123.335 410.513 123.685 410.233 cv
123.685 409.638 li
123.335 410.058 122.775 410.331 122.145 410.331 cv
121.235 410.331 120.535 409.813 120.283 408.988 cv
122.775 408.988 li
122.985 408.546 li
120.185 408.546 li
120.178 408.47 120.171 408.406 120.171 408.336 cv
120.171 408.266 120.178 408.196 120.185 408.105 cv
123.188 408.105 li
123.398 407.664 li
120.283 407.664 li
120.5 406.908 121.2 406.334 122.075 406.334 cv
122.775 406.334 123.342 406.629 123.685 407.048 cv
123.888 406.621 li
ef
RPTEAG+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
123.888 410.772 mo
(, Melilla: 52)
[1.59618 1.59618 5.48114 3.28316 .945175 .945175 .94516 .945175 3.28316 1.59619 1.59618 3.54219 
0 ]xsh
158.075 406.621 mo
157.697 406.173 156.997 405.893 156.332 405.893 cv
155.177 405.893 154.232 406.558 153.973 407.664 cv
153.392 407.664 li
153.182 408.105 li
153.889 408.105 li
153.882 408.196 153.882 408.259 153.882 408.329 cv
153.882 408.393 153.882 408.455 153.889 408.546 cv
153.392 408.546 li
153.182 408.988 li
153.973 408.988 li
154.232 410.093 155.177 410.772 156.297 410.772 cv
156.927 410.772 157.522 410.513 157.872 410.233 cv
157.872 409.638 li
157.522 410.058 156.962 410.331 156.332 410.331 cv
155.422 410.331 154.722 409.813 154.47 408.988 cv
156.962 408.988 li
157.172 408.546 li
154.372 408.546 li
154.365 408.47 154.358 408.406 154.358 408.336 cv
154.358 408.266 154.365 408.196 154.372 408.105 cv
157.375 408.105 li
157.586 407.664 li
154.47 407.664 li
154.688 406.908 155.388 406.334 156.262 406.334 cv
156.962 406.334 157.529 406.629 157.872 407.048 cv
158.075 406.621 li
ef
RPTEAG+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
158.075 410.772 mo
(\))sh
83.9441 417.472 mo
(\245)sh
92.4441 417.472 mo
(Si el Cliente hubiere cumplido en la l\222nea afectada entre 7 y 12 meses y hubiera adquirido un CP de 12 \227 18 meses, deber\207 abona)
[4.00621 .891167 1.48817 3.22916 .891159 1.48818 4.52414 .891159 .891159 3.22916 3.35519 1.66821 
3.22916 1.48817 3.3552 3.35519 3.61423 .891159 3.22916 1.80119 3.22916 1.48819 3.22916 3.35519 
5.42712 3.61423 .891144 .891174 3.61421 3.48817 1.48819 3.22916 3.35519 1.48817 .891159 3.22916 
1.48819 .891144 .891174 3.35519 3.22916 3.22916 1.48819 3.22916 1.40919 3.22916 3.22914 1.66821 
3.22916 3.61421 3.22914 1.48819 3.22916 3.35519 1.66821 1.80118 3.22916 1.48816 3.48819 1.48816 
2.83716 1.48819 3.48816 3.48819 1.48816 5.42712 3.22916 2.9632 3.22916 2.9632 1.48816 2.83716 
1.48819 3.35519 3.35519 3.6142 .891144 3.22916 1.80121 3.22913 1.48819 3.22916 3.6142 3.61423 
3.35519 .891144 1.80118 .891174 3.6142 3.48819 1.48816 3.35519 3.35519 1.48819 4.52414 4.0062 
1.48819 3.6142 3.22916 1.48816 3.48819 3.48816 1.48819 3.48816 1.48819 3.48816 3.48816 1.48819 
5.42712 3.22916 2.9632 3.22916 2.96317 1.54218 1.48819 3.6142 3.22916 3.61423 3.22916 1.80118 
3.22916 1.48816 3.22916 3.61423 3.48816 3.35519 0 ]xsh
431.297 417.472 mo
(r: 35)
[1.80118 1.54218 1.48819 3.48816 0 ]xsh
448.338 413.006 mo
447.931 412.523 447.177 412.222 446.462 412.222 cv
445.219 412.222 444.202 412.938 443.923 414.128 cv
443.298 414.128 li
443.072 414.602 li
443.833 414.602 li
443.825 414.7 443.825 414.768 443.825 414.843 cv
443.825 414.911 443.825 414.979 443.833 415.077 cv
443.298 415.077 li
443.072 415.552 li
443.923 415.552 li
444.202 416.742 445.219 417.472 446.424 417.472 cv
447.102 417.472 447.743 417.194 448.119 416.893 cv
448.119 416.252 li
447.743 416.704 447.14 416.998 446.462 416.998 cv
445.483 416.998 444.729 416.441 444.458 415.552 cv
447.14 415.552 li
447.366 415.077 li
444.353 415.077 li
444.345 414.994 444.338 414.927 444.338 414.851 cv
444.338 414.776 444.345 414.7 444.353 414.602 cv
447.584 414.602 li
447.81 414.128 li
444.458 414.128 li
444.692 413.314 445.445 412.697 446.386 412.697 cv
447.14 412.697 447.75 413.013 448.119 413.465 cv
448.338 413.006 li
ef
RPTEAG+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
448.283 417.472 mo
( i.i.no.i. \(Pen\222nsula y Baleares:)
[1.48819 .891174 1.54221 .891174 1.54218 3.35522 3.48819 1.54221 .891174 1.54218 1.48819 1.2832 
4.00623 3.22916 3.35522 .891174 3.35519 2.96323 3.35519 .891174 3.22919 1.48819 2.83719 1.48819 
4.26523 3.22919 .891174 3.22916 3.22916 1.80127 3.22913 2.96326 0 ]xsh
92.444 424.172 mo
(41,30)
[3.54222 3.54222 1.59622 3.54222 0 ]xsh
113.101 420.021 mo
112.723 419.573 112.023 419.293 111.358 419.293 cv
110.203 419.293 109.258 419.958 108.999 421.064 cv
108.418 421.064 li
108.208 421.505 li
108.915 421.505 li
108.908 421.596 108.908 421.659 108.908 421.729 cv
108.908 421.793 108.908 421.855 108.915 421.946 cv
108.418 421.946 li
108.208 422.388 li
108.999 422.388 li
109.258 423.493 110.203 424.172 111.323 424.172 cv
111.953 424.172 112.548 423.913 112.898 423.633 cv
112.898 423.038 li
112.548 423.458 111.988 423.731 111.358 423.731 cv
110.448 423.731 109.748 423.213 109.496 422.388 cv
111.988 422.388 li
112.198 421.946 li
109.398 421.946 li
109.391 421.87 109.384 421.806 109.384 421.736 cv
109.384 421.666 109.391 421.596 109.398 421.505 cv
112.401 421.505 li
112.611 421.064 li
109.496 421.064 li
109.713 420.308 110.413 419.734 111.288 419.734 cv
111.988 419.734 112.555 420.029 112.898 420.448 cv
113.101 420.021 li
ef
RPTEAG+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
113.101 424.172 mo
(, Canarias: 35)
[1.59621 1.59621 4.57819 3.2832 3.40923 3.2832 1.85522 .945206 3.2832 3.01723 1.59622 1.59621 
3.54222 0 ]xsh
155.114 420.021 mo
154.736 419.573 154.036 419.293 153.371 419.293 cv
152.216 419.293 151.271 419.958 151.012 421.064 cv
150.431 421.064 li
150.221 421.505 li
150.928 421.505 li
150.921 421.596 150.921 421.659 150.921 421.729 cv
150.921 421.793 150.921 421.855 150.928 421.946 cv
150.431 421.946 li
150.221 422.388 li
151.012 422.388 li
151.271 423.493 152.216 424.172 153.336 424.172 cv
153.966 424.172 154.561 423.913 154.911 423.633 cv
154.911 423.038 li
154.561 423.458 154.002 423.731 153.371 423.731 cv
152.461 423.731 151.761 423.213 151.509 422.388 cv
154.002 422.388 li
154.211 421.946 li
151.411 421.946 li
151.404 421.87 151.397 421.806 151.397 421.736 cv
151.397 421.666 151.404 421.596 151.411 421.505 cv
154.414 421.505 li
154.624 421.064 li
151.509 421.064 li
151.727 420.308 152.427 419.734 153.302 419.734 cv
154.002 419.734 154.568 420.029 154.911 420.448 cv
155.114 420.021 li
ef
RPTEAG+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
155.114 424.172 mo
(, Ceuta: 37,80)
[1.59622 1.59622 4.57817 3.2832 3.40924 1.72226 3.2832 1.59622 1.59622 3.54221 3.54222 1.59622 
3.54222 0 ]xsh
198.43 420.021 mo
198.052 419.573 197.352 419.293 196.687 419.293 cv
195.532 419.293 194.587 419.958 194.328 421.064 cv
193.747 421.064 li
193.537 421.505 li
194.244 421.505 li
194.237 421.596 194.237 421.659 194.237 421.729 cv
194.237 421.793 194.237 421.855 194.244 421.946 cv
193.747 421.946 li
193.537 422.388 li
194.328 422.388 li
194.587 423.493 195.532 424.172 196.652 424.172 cv
197.282 424.172 197.877 423.913 198.227 423.633 cv
198.227 423.038 li
197.877 423.458 197.317 423.731 196.687 423.731 cv
195.777 423.731 195.077 423.213 194.825 422.388 cv
197.317 422.388 li
197.527 421.946 li
194.727 421.946 li
194.72 421.87 194.713 421.806 194.713 421.736 cv
194.713 421.666 194.72 421.596 194.727 421.505 cv
197.73 421.505 li
197.94 421.064 li
194.825 421.064 li
195.042 420.308 195.742 419.734 196.617 419.734 cv
197.317 419.734 197.884 420.029 198.227 420.448 cv
198.43 420.021 li
ef
RPTEAG+HelveticaNeue-Light*1 [7 0 0 -7 0 0 ]msf
198.43 424.172 mo
(, Melilla: 36,40)
[1.59619 1.59619 5.48116 3.28317 .945175 .945175 .945175 .945175 3.28319 1.59619 1.59619 3.54219 
3.54219 1.59621 3.54219 0 ]xsh
241.67 419.705 mo
241.263 419.223 240.509 418.922 239.794 418.922 cv
238.551 418.922 237.534 419.638 237.255 420.828 cv
236.63 420.828 li
236.404 421.302 li
237.165 421.302 li
237.157 421.4 237.157 421.468 237.157 421.543 cv
237.157 421.611 237.157 421.679 237.165 421.777 cv
236.63 421.777 li
236.404 422.252 li
237.255 422.252 li
237.534 423.442 238.551 424.172 239.756 424.172 cv
240.434 424.172 241.075 423.894 241.451 423.592 cv
241.451 422.952 li
241.075 423.404 240.472 423.698 239.794 423.698 cv
238.815 423.698 238.061 423.14 237.79 422.252 cv
240.472 422.252 li
240.698 421.777 li
237.685 421.777 li
237.677 421.694 237.67 421.626 237.67 421.551 cv
237.67 421.476 237.677 421.4 237.685 421.302 cv
240.916 421.302 li
241.142 420.828 li
237.79 420.828 li
238.024 420.014 238.777 419.396 239.719 419.396 cv
240.472 419.396 241.082 419.713 241.451 420.165 cv
241.67 419.705 li
ef
RPTEAG+HelveticaNeue-Light*1 [7.00014 0 0 -7.00014 0 0 ]msf
241.663 424.184 mo
(\))sh
83.934 430.884 mo
(\245)sh
92.4344 430.884 mo
(Si el Cliente hubiere cumplido en la l\222nea afectada entre 13 y 18 meses y hubiera adquirido un CP de 18 meses, deber\207 abonar: 1)
[4.05904 .943939 1.59366 3.28197 .943932 1.59367 4.57699 .943932 .943932 3.28197 3.40801 1.72101 
3.28197 1.59367 3.40802 3.40802 3.66702 .943939 3.28198 1.85397 3.28198 1.59366 3.28198 3.40802 
5.47998 3.66705 .943924 .943924 3.66705 3.54099 1.59366 3.28198 3.40802 1.59366 .943939 3.28198 
1.59366 .943924 .943924 3.40802 3.28198 3.28198 1.59366 3.28198 1.46198 3.28198 3.28198 1.72101 
3.28198 3.66705 3.28198 1.59366 3.28198 3.40802 1.72101 1.854 3.28198 1.59366 3.54099 3.54102 
1.59366 2.88998 1.59366 3.54102 3.54099 1.59366 5.48001 3.28198 3.01602 3.28198 3.01602 1.59366 
2.88995 1.59369 3.40802 3.40802 3.66705 .943939 3.28198 1.85397 3.28198 1.59366 3.28198 3.66705 
3.66702 3.40802 .943939 1.854 .943939 3.66705 3.54102 1.59366 3.40802 3.40802 1.59366 4.577 
4.05905 1.59366 3.66705 3.28198 1.59366 3.54102 3.54099 1.59366 5.48001 3.28198 3.01602 3.28198 
3.01602 1.59497 1.59366 3.66702 3.28198 3.66705 3.28198 1.854 3.28198 1.59366 3.28198 3.66705 
3.54099 3.40802 3.28201 1.85397 1.59497 1.59366 0 ]xsh
437.627 430.884 mo
(5)sh
446.387 426.417 mo
445.98 425.935 445.227 425.634 444.511 425.634 cv
443.268 425.634 442.252 426.349 441.973 427.539 cv
441.348 427.539 li
441.122 428.014 li
441.882 428.014 li
441.875 428.112 441.875 428.18 441.875 428.255 cv
441.875 428.323 441.875 428.391 441.882 428.488 cv
441.348 428.488 li
441.122 428.963 li
441.973 428.963 li
442.252 430.153 443.268 430.884 444.474 430.884 cv
445.152 430.884 445.792 430.605 446.168 430.304 cv
446.168 429.664 li
445.792 430.115 445.189 430.409 444.511 430.409 cv
443.532 430.409 442.779 429.852 442.508 428.963 cv
445.189 428.963 li
445.415 428.488 li
442.402 428.488 li
442.395 428.405 442.387 428.338 442.387 428.262 cv
442.387 428.187 442.395 428.112 442.402 428.014 cv
445.634 428.014 li
445.86 427.539 li
442.508 427.539 li
442.741 426.726 443.495 426.108 444.436 426.108 cv
445.189 426.108 445.799 426.425 446.168 426.876 cv
446.387 426.417 li
ef
RPTEAG+HelveticaNeue-Light*1 [7.00014 0 0 -7.00014 0 0 ]msf
446.386 430.884 mo
(, i.i.no.i \(Pen\222nsula y Baleares:)
[1.59497 1.59366 .943939 1.59497 .943939 1.59497 3.40802 3.54099 1.59497 .943939 1.59366 1.33597 
4.05905 3.28198 3.40802 .943909 3.40802 3.01602 3.40802 .943939 3.28198 1.59366 2.88998 1.59366 
4.31808 3.28198 .943939 3.28198 3.28195 1.854 3.28198 3.01605 0 ]xsh
92.436 437.584 mo
(17,70)
[3.54236 3.54236 1.59633 3.54236 0 ]xsh
113.092 433.433 mo
112.714 432.985 112.014 432.705 111.349 432.705 cv
110.194 432.705 109.249 433.37 108.99 434.476 cv
108.409 434.476 li
108.199 434.917 li
108.906 434.917 li
108.899 435.008 108.899 435.071 108.899 435.141 cv
108.899 435.204 108.899 435.267 108.906 435.358 cv
108.409 435.358 li
108.199 435.799 li
108.99 435.799 li
109.249 436.905 110.194 437.584 111.314 437.584 cv
111.944 437.584 112.539 437.325 112.889 437.045 cv
112.889 436.45 li
112.539 436.87 111.979 437.143 111.349 437.143 cv
110.439 437.143 109.739 436.625 109.487 435.799 cv
111.979 435.799 li
112.189 435.358 li
109.389 435.358 li
109.382 435.281 109.375 435.218 109.375 435.148 cv
109.375 435.078 109.382 435.008 109.389 434.917 cv
112.392 434.917 li
112.602 434.476 li
109.487 434.476 li
109.704 433.72 110.404 433.146 111.279 433.146 cv
111.979 433.146 112.546 433.44 112.889 433.86 cv
113.092 433.433 li
ef
RPTEAG+HelveticaNeue-Light*1 [7.00014 0 0 -7.00014 0 0 ]msf
113.092 437.584 mo
(, Canarias: 15)
[1.59631 1.59631 4.57833 3.28333 3.40936 3.28333 1.85533 .945267 3.28333 3.01736 1.5963 1.59631 
3.54234 0 ]xsh
155.106 433.433 mo
154.729 432.985 154.029 432.705 153.363 432.705 cv
152.208 432.705 151.263 433.37 151.004 434.476 cv
150.423 434.476 li
150.213 434.917 li
150.92 434.917 li
150.913 435.008 150.913 435.071 150.913 435.141 cv
150.913 435.204 150.913 435.267 150.92 435.358 cv
150.423 435.358 li
150.213 435.799 li
151.004 435.799 li
151.263 436.905 152.208 437.584 153.329 437.584 cv
153.959 437.584 154.554 437.325 154.904 437.045 cv
154.904 436.45 li
154.554 436.87 153.993 437.143 153.363 437.143 cv
152.454 437.143 151.754 436.625 151.502 435.799 cv
153.993 435.799 li
154.204 435.358 li
151.403 435.358 li
151.396 435.281 151.389 435.218 151.389 435.148 cv
151.389 435.078 151.396 435.008 151.403 434.917 cv
154.406 434.917 li
154.616 434.476 li
151.502 434.476 li
151.718 433.72 152.418 433.146 153.293 433.146 cv
153.993 433.146 154.561 433.44 154.904 433.86 cv
155.106 433.433 li
ef
RPTEAG+HelveticaNeue-Light*1 [7.00014 0 0 -7.00014 0 0 ]msf
155.107 437.584 mo
(, Ceuta: 16,20)
[1.59631 1.59631 4.57834 3.28333 3.40936 1.72235 3.28333 1.59631 1.59631 3.54236 3.54234 1.59631 
3.54234 0 ]xsh
198.423 433.433 mo
198.045 432.985 197.345 432.705 196.68 432.705 cv
195.525 432.705 194.58 433.37 194.321 434.476 cv
193.739 434.476 li
193.53 434.917 li
194.237 434.917 li
194.23 435.008 194.23 435.071 194.23 435.141 cv
194.23 435.204 194.23 435.267 194.237 435.358 cv
193.739 435.358 li
193.53 435.799 li
194.321 435.799 li
194.58 436.905 195.525 437.584 196.645 437.584 cv
197.275 437.584 197.87 437.325 198.22 437.045 cv
198.22 436.45 li
197.87 436.87 197.31 437.143 196.68 437.143 cv
195.77 437.143 195.07 436.625 194.818 435.799 cv
197.31 435.799 li
197.52 435.358 li
194.72 435.358 li
194.713 435.281 194.705 435.218 194.705 435.148 cv
194.705 435.078 194.713 435.008 194.72 434.917 cv
197.723 434.917 li
197.933 434.476 li
194.818 434.476 li
195.035 433.72 195.735 433.146 196.61 433.146 cv
197.31 433.146 197.877 433.44 198.22 433.86 cv
198.423 433.433 li
ef
RPTEAG+HelveticaNeue-Light*1 [7.00014 0 0 -7.00014 0 0 ]msf
198.423 437.584 mo
(, Melilla: 15,60)
[1.59628 1.59628 5.48131 3.28329 .945236 .945251 .945251 .945251 3.28329 1.59628 1.59628 3.54231 
3.54233 1.59628 3.54231 0 ]xsh
241.291 433.433 mo
240.913 432.985 240.213 432.705 239.548 432.705 cv
238.393 432.705 237.448 433.37 237.189 434.476 cv
236.608 434.476 li
236.398 434.917 li
237.105 434.917 li
237.098 435.008 237.098 435.071 237.098 435.141 cv
237.098 435.204 237.098 435.267 237.105 435.358 cv
236.608 435.358 li
236.398 435.799 li
237.189 435.799 li
237.448 436.905 238.393 437.584 239.513 437.584 cv
240.143 437.584 240.738 437.325 241.088 437.045 cv
241.088 436.45 li
240.738 436.87 240.178 437.143 239.548 437.143 cv
238.638 437.143 237.938 436.625 237.686 435.799 cv
240.178 435.799 li
240.388 435.358 li
237.588 435.358 li
237.581 435.281 237.574 435.218 237.574 435.148 cv
237.574 435.078 237.581 435.008 237.588 434.917 cv
240.591 434.917 li
240.801 434.476 li
237.686 434.476 li
237.903 433.72 238.603 433.146 239.478 433.146 cv
240.178 433.146 240.745 433.44 241.088 433.86 cv
241.291 433.433 li
ef
RPTEAG+HelveticaNeue-Light*1 [7.00014 0 0 -7.00014 0 0 ]msf
241.291 437.584 mo
(\))sh
71.175 444.284 mo
(Si el dispositivo m\227vil a precio promocional adquirido por el Cliente fuera un iPhone, el cargo que finalmente le sea de aplica)
[4.02923 .914116 1.53405 3.25216 .914116 1.53405 3.63722 .914116 2.98619 3.63723 3.51118 2.9862 
.914116 1.69118 .914124 2.86015 3.51118 1.53404 5.45018 3.51118 2.86015 .914124 .914108 1.53405 
3.25216 1.53404 3.63722 1.82419 3.25215 3.25217 .914108 3.5112 1.53403 3.63724 1.82416 3.5112 
5.45016 3.5112 3.25215 .914108 3.5112 3.3782 3.25217 .914108 1.53404 3.25217 3.63721 3.63722 
3.37819 .914124 1.82416 .914108 3.63722 3.51117 1.53406 3.63721 3.51118 1.82416 1.53406 3.25215 
.914108 1.53404 4.54716 .914108 .914124 3.25215 3.37819 1.69118 3.25217 1.53404 1.43216 3.37819 
3.25215 1.82419 3.25214 1.53406 3.37817 3.3782 1.53403 .914124 4.02924 3.37817 3.5112 3.3782 
3.25214 1.56516 1.53403 3.25217 .914093 1.53406 3.25217 3.25217 1.82416 3.51117 3.51117 1.53406 
3.63724 3.3782 3.25214 1.53406 1.43219 .914063 3.37823 3.25214 .914124 5.45013 3.2522 3.37817 
1.69116 3.2522 1.53406 .914124 3.25214 1.53406 2.98621 3.25214 3.25214 1.53406 3.63721 3.2522 
1.53406 3.25214 3.63721 .914124 .914124 3.25214 0 ]xsh
394.696 444.284 mo
(ci\227n en funci\227n de las cantidades arriba definidas)
[3.25214 .914124 3.51117 3.37817 1.53406 3.25214 3.37823 1.53406 1.43213 3.37823 3.37817 3.25214 
.914124 3.51117 3.37823 1.53406 3.63721 3.25214 1.53406 .914124 3.25214 2.98621 1.53406 3.25214 
3.2522 3.37817 1.69116 .914124 3.63721 3.2522 3.63721 3.25214 2.98621 1.53406 3.25214 1.82416 
1.82416 .914124 3.63721 3.2522 1.53406 3.63721 3.25214 1.43219 .914063 3.37823 .914124 3.63721 
3.25214 0 ]xsh
71.175 450.984 mo
(por Compromiso en tarifa de voz, ser\207 incrementado con 130)
[3.72836 3.60231 1.91531 1.89598 4.6383 3.60231 5.54131 3.72836 1.9153 3.60231 5.54131 1.00525 
3.07732 3.60232 1.89599 3.34328 3.46934 1.89598 1.78232 3.34329 1.9153 1.00525 1.5233 3.34329 
1.89598 3.72836 3.34329 1.89598 2.95129 3.60231 2.95129 1.65628 1.89598 3.07733 3.34329 1.9153 
3.34329 1.896 1.00525 3.46933 3.34329 1.9153 3.34331 5.54129 3.34329 3.46935 1.78232 3.34329 
3.72836 3.60231 1.89598 3.34329 3.60233 3.46933 1.89598 3.60233 3.60231 0 ]xsh
247.729 446.517 mo
247.322 446.035 246.569 445.734 245.854 445.734 cv
244.611 445.734 243.594 446.45 243.315 447.639 cv
242.69 447.639 li
242.464 448.114 li
243.225 448.114 li
243.217 448.212 243.217 448.28 243.217 448.355 cv
243.217 448.423 243.217 448.491 243.225 448.589 cv
242.69 448.589 li
242.464 449.063 li
243.315 449.063 li
243.594 450.254 244.611 450.984 245.816 450.984 cv
246.494 450.984 247.134 450.705 247.511 450.404 cv
247.511 449.764 li
247.134 450.216 246.531 450.51 245.854 450.51 cv
244.874 450.51 244.121 449.952 243.85 449.063 cv
246.531 449.063 li
246.757 448.589 li
243.744 448.589 li
243.737 448.506 243.729 448.438 243.729 448.363 cv
243.729 448.288 243.737 448.212 243.744 448.114 cv
246.976 448.114 li
247.202 447.639 li
243.85 447.639 li
244.083 446.826 244.836 446.209 245.778 446.209 cv
246.531 446.209 247.141 446.525 247.511 446.977 cv
247.729 446.517 li
ef
RPTEAG+HelveticaNeue-Light*1 [7.00014 0 0 -7.00014 0 0 ]msf
247.789 450.984 mo
( adicionales, i.i.no.i. \(Pen\222nsula y Baleares: 153,4)
[1.89598 3.34328 3.72836 1.00522 3.34329 1.00525 3.60229 3.46933 3.34329 1.00522 3.34329 3.07733 
1.65625 1.89597 1.00525 1.65628 1.00522 1.65628 3.46933 3.60229 1.65628 1.00525 1.65625 1.896 
1.39725 4.12033 3.34329 3.46933 1.00522 3.46933 3.0773 3.46933 1.00525 3.34326 1.896 2.95126 
1.896 4.37936 3.34329 1.00522 3.34329 3.34326 1.91528 3.34329 3.07733 1.65625 1.89597 3.60233 
3.60229 3.60229 1.65628 0 ]xsh
385.17 446.517 mo
384.764 446.035 384.01 445.734 383.295 445.734 cv
382.052 445.734 381.035 446.45 380.756 447.639 cv
380.131 447.639 li
379.905 448.114 li
380.666 448.114 li
380.658 448.212 380.658 448.28 380.658 448.355 cv
380.658 448.423 380.658 448.491 380.666 448.589 cv
380.131 448.589 li
379.905 449.063 li
380.756 449.063 li
381.035 450.254 382.052 450.984 383.257 450.984 cv
383.935 450.984 384.575 450.705 384.952 450.404 cv
384.952 449.764 li
384.575 450.216 383.973 450.51 383.295 450.51 cv
382.316 450.51 381.562 449.952 381.291 449.063 cv
383.973 449.063 li
384.199 448.589 li
381.186 448.589 li
381.178 448.506 381.171 448.438 381.171 448.363 cv
381.171 448.288 381.178 448.212 381.186 448.114 cv
384.417 448.114 li
384.643 447.639 li
381.291 447.639 li
381.525 446.826 382.278 446.209 383.22 446.209 cv
383.973 446.209 384.583 446.525 384.952 446.977 cv
385.17 446.517 li
ef
RPTEAG+HelveticaNeue-Light*1 [7.00014 0 0 -7.00014 0 0 ]msf
385.23 450.984 mo
(, Canarias: 130)
[1.65631 1.896 4.63834 3.34332 3.46936 3.34332 1.91534 1.00528 3.34332 3.07736 1.65631 1.896 
3.60236 3.60236 0 ]xsh
432.538 446.517 mo
432.131 446.035 431.377 445.734 430.662 445.734 cv
429.419 445.734 428.402 446.45 428.123 447.639 cv
427.498 447.639 li
427.272 448.114 li
428.033 448.114 li
428.025 448.212 428.025 448.28 428.025 448.355 cv
428.025 448.423 428.025 448.491 428.033 448.589 cv
427.498 448.589 li
427.272 449.063 li
428.123 449.063 li
428.402 450.254 429.419 450.984 430.624 450.984 cv
431.302 450.984 431.943 450.705 432.319 450.404 cv
432.319 449.764 li
431.943 450.216 431.34 450.51 430.662 450.51 cv
429.683 450.51 428.929 449.952 428.658 449.063 cv
431.34 449.063 li
431.566 448.589 li
428.553 448.589 li
428.545 448.506 428.538 448.438 428.538 448.363 cv
428.538 448.288 428.545 448.212 428.553 448.114 cv
431.784 448.114 li
432.01 447.639 li
428.658 447.639 li
428.892 446.826 429.645 446.209 430.587 446.209 cv
431.34 446.209 431.95 446.525 432.319 446.977 cv
432.538 446.517 li
ef
RPTEAG+HelveticaNeue-Light*1 [7.00014 0 0 -7.00014 0 0 ]msf
432.597 450.984 mo
(, Ceuta: 140,4)
[1.65631 1.89603 4.63834 3.34332 3.46936 1.78235 3.34335 1.65631 1.896 3.60236 3.60236 3.60236 
1.65631 0 ]xsh
477.604 446.517 mo
477.198 446.035 476.444 445.734 475.729 445.734 cv
474.486 445.734 473.469 446.45 473.19 447.639 cv
472.565 447.639 li
472.339 448.114 li
473.1 448.114 li
473.092 448.212 473.092 448.28 473.092 448.355 cv
473.092 448.423 473.092 448.491 473.1 448.589 cv
472.565 448.589 li
472.339 449.063 li
473.19 449.063 li
473.469 450.254 474.486 450.984 475.691 450.984 cv
476.369 450.984 477.009 450.705 477.386 450.404 cv
477.386 449.764 li
477.009 450.216 476.407 450.51 475.729 450.51 cv
474.75 450.51 473.996 449.952 473.725 449.063 cv
476.407 449.063 li
476.633 448.589 li
473.62 448.589 li
473.612 448.506 473.605 448.438 473.605 448.363 cv
473.605 448.288 473.612 448.212 473.62 448.114 cv
476.851 448.114 li
477.077 447.639 li
473.725 447.639 li
473.959 446.826 474.712 446.209 475.654 446.209 cv
476.407 446.209 477.017 446.525 477.386 446.977 cv
477.604 446.517 li
ef
RPTEAG+HelveticaNeue-Light*1 [7.00014 0 0 -7.00014 0 0 ]msf
477.664 450.984 mo
(, Melilla: 135,2)
[1.65628 1.896 5.54129 3.34329 1.00525 1.00528 1.00525 1.00525 3.34329 1.65628 1.896 3.60229 
3.60233 3.60233 1.65631 0 ]xsh
522.344 446.517 mo
521.937 446.035 521.184 445.734 520.468 445.734 cv
519.225 445.734 518.208 446.45 517.929 447.639 cv
517.304 447.639 li
517.079 448.114 li
517.839 448.114 li
517.832 448.212 517.832 448.28 517.832 448.355 cv
517.832 448.423 517.832 448.491 517.839 448.589 cv
517.304 448.589 li
517.079 449.063 li
517.929 449.063 li
518.208 450.254 519.225 450.984 520.43 450.984 cv
521.108 450.984 521.748 450.705 522.125 450.404 cv
522.125 449.764 li
521.748 450.216 521.146 450.51 520.468 450.51 cv
519.489 450.51 518.736 449.952 518.464 449.063 cv
521.146 449.063 li
521.372 448.589 li
518.359 448.589 li
518.352 448.506 518.344 448.438 518.344 448.363 cv
518.344 448.288 518.352 448.212 518.359 448.114 cv
521.59 448.114 li
521.816 447.639 li
518.464 447.639 li
518.698 446.826 519.451 446.209 520.393 446.209 cv
521.146 446.209 521.756 446.525 522.125 446.977 cv
522.344 446.517 li
ef
RPTEAG+HelveticaNeue-Light*1 [7.00014 0 0 -7.00014 0 0 ]msf
522.403 450.984 mo
(\))sh
RPTEAH+HelveticaNeue-Roman*1 [7.00014 0 0 -7.00014 0 0 ]msf
71.175 464.384 mo
(b.3. Compromiso de Permanencia asociado a la contrataci\227n de tarifas de datos del servicio m\227vil postpago residencial ORANGE,)
[3.85438 1.64931 3.59535 1.64931 1.86172 4.75738 3.72139 5.67438 3.85437 2.03427 3.72139 5.67437 
1.25731 3.20335 3.72139 1.86171 3.85438 3.46236 1.86172 4.23932 3.46237 2.03427 5.67438 3.46236 
3.59535 3.46236 3.59535 3.46237 1.25729 3.46237 1.86171 3.46237 3.20334 3.72139 3.46237 1.25729 
3.46237 3.85437 3.72139 1.86172 3.46236 1.86172 1.25731 3.46236 1.86172 3.46237 3.72137 3.59535 
1.90834 2.03426 3.46237 1.90833 3.46237 3.46236 1.25731 3.72139 3.59535 1.86172 3.85437 3.46236 
1.86172 1.90833 3.46237 2.03427 1.25729 1.77536 3.46234 3.20337 1.86169 3.85437 3.4624 1.86169 
3.85437 3.46237 1.90836 3.72137 3.20334 1.86172 3.85437 3.46234 1.25732 1.86169 3.20334 3.46237 
2.03424 3.20337 1.25729 3.46237 1.25729 3.72141 1.86169 5.67438 3.72137 3.20334 1.25732 1.25729 
1.86172 3.85437 3.72137 3.20334 1.90833 3.85437 3.46237 3.72141 3.72137 1.86172 2.03424 3.46237 
3.20334 1.25732 3.85437 3.46234 3.59537 3.46234 1.25732 3.46237 1.25729 1.86169 5.02335 4.49835 
4.23932 4.75739 5.01639 3.98032 0 ]xsh
RPTEAG+HelveticaNeue-Light*1 [7.00014 0 0 -7.00014 0 0 ]msf
446.196 464.384 mo
( el Cliente se compromete a)
[1.86179 3.3364 .998352 1.86179 4.63141 .998322 .998352 3.3364 3.46243 1.77542 3.3364 1.86179 
3.07043 3.3364 1.86179 3.3364 3.59543 5.53439 3.72147 1.90839 3.59543 5.53439 3.33636 1.77545 
3.33636 1.86182 0 ]xsh
71.175 471.084 mo
(mantener la tarifa de datos contratada durante el tiempo aceptado por el cliente en el anverso del documento. En caso de incump)
[5.50958 3.31157 3.43761 1.7506 3.31157 3.43761 3.31157 1.88358 1.73766 .973526 3.31157 1.73766 
1.7506 3.31157 1.88358 .973526 1.49158 3.31157 1.73766 3.69664 3.31157 1.73766 3.69664 3.31157 
1.7506 3.5706 3.04559 1.73766 3.31157 3.5706 3.43761 1.7506 1.88359 3.31155 1.75061 3.31155 
3.69664 3.31157 1.73767 3.69662 3.43762 1.88358 3.31157 3.43761 1.75061 3.31155 1.73767 3.31157 
.973526 1.73766 1.7506 .973526 3.31157 5.50958 3.69664 3.57059 1.73766 3.31157 3.31157 3.31157 
3.69664 1.7506 3.31157 3.69664 3.57059 1.73766 3.69662 3.57062 1.88358 1.73764 3.31158 .973511 
1.73767 3.31158 .973511 .973511 3.31158 3.43762 1.75061 3.31155 1.73764 3.31158 3.43762 1.73767 
3.31155 .973541 1.73767 3.31158 3.43759 2.91956 3.31158 1.88358 3.04559 3.57062 1.73767 3.69662 
3.31155 .973541 1.73767 3.69662 3.57059 3.31158 3.43762 5.50958 3.31155 3.43762 1.75058 3.57059 
1.62457 1.73767 3.82962 3.43759 1.73767 3.31158 3.31158 3.04559 3.57059 1.73767 3.69662 3.31158 
1.73767 .973541 3.43759 3.31158 3.43759 5.50958 0 ]xsh
424.338 471.084 mo
(limiento, el Cliente deber\207 abonar los)
[.973511 .973541 5.50958 .973511 3.31158 3.43759 1.75061 3.57059 1.62457 1.73767 3.31155 .973541 
1.73767 4.60657 .973541 .973511 3.31158 3.43759 1.75061 3.31155 1.73767 3.69666 3.31155 3.69662 
3.31158 1.88358 3.31158 1.73767 3.31155 3.69666 3.57059 3.43759 3.31161 1.88354 1.73767 .973511 
3.57062 0 ]xsh
71.175 477.784 mo
(siguientes importes:)
[3.0173 .945221 3.54229 3.4093 .945221 3.28326 3.4093 1.72229 3.28326 3.0173 1.59625 .945221 
5.48127 3.66833 3.54228 1.85528 1.72229 3.28326 3.0173 0 ]xsh
85.675 484.484 mo
(\245)sh
92.4352 484.484 mo
(Si al Cliente le quedan por cumplir en la l\222nea afectada menos de 6 meses del CP, deber\207 abonar a ORANGE: 20)
[4.03396 .918846 1.54357 3.25689 .918846 1.54357 4.5519 .918846 .918846 3.25689 3.38293 1.69592 
3.25689 1.54358 .918839 3.2569 1.54356 3.64195 3.38293 3.25688 3.64195 3.2569 3.38292 1.54358 
3.64195 3.5159 1.8289 1.54356 3.2569 3.38293 5.4549 3.64195 .918839 .918854 1.82889 1.54358 
3.2569 3.38292 1.54356 .918854 3.2569 1.54355 .918854 .918854 3.38292 3.25688 3.2569 1.54358 
3.2569 1.4369 3.25688 3.25691 1.69591 3.2569 3.64197 3.2569 1.54358 5.4549 3.2569 3.38293 
3.51593 2.99092 1.54358 3.64195 3.2569 1.54358 3.51593 1.54358 5.4549 3.2569 2.99094 3.2569 
2.99094 1.54358 3.64194 3.2569 .918854 1.54358 4.55191 4.03397 1.56989 1.54358 3.64197 3.25687 
3.64194 3.2569 1.82889 3.25687 1.54358 3.2569 3.64194 3.5159 3.38293 3.25687 1.82889 1.54358 
3.25687 1.54358 4.81091 4.29297 4.03397 4.55188 4.81091 3.77493 1.56985 1.54358 3.5159 0 
]xsh
396.774 480.018 mo
396.367 479.536 395.614 479.235 394.898 479.235 cv
393.655 479.235 392.638 479.95 392.359 481.14 cv
391.734 481.14 li
391.509 481.615 li
392.269 481.615 li
392.262 481.713 392.262 481.78 392.262 481.856 cv
392.262 481.924 392.262 481.991 392.269 482.089 cv
391.734 482.089 li
391.509 482.564 li
392.359 482.564 li
392.638 483.754 393.655 484.485 394.861 484.485 cv
395.538 484.485 396.179 484.206 396.555 483.905 cv
396.555 483.264 li
396.179 483.716 395.576 484.01 394.898 484.01 cv
393.919 484.01 393.166 483.453 392.895 482.564 cv
395.576 482.564 li
395.802 482.089 li
392.789 482.089 li
392.782 482.007 392.774 481.939 392.774 481.863 cv
392.774 481.788 392.782 481.713 392.789 481.615 cv
396.02 481.615 li
396.246 481.14 li
392.895 481.14 li
393.128 480.327 393.881 479.709 394.823 479.709 cv
395.576 479.709 396.186 480.025 396.555 480.477 cv
396.774 480.018 li
ef
RPTEAG+HelveticaNeue-Light*1 [7.00014 0 0 -7.00014 0 0 ]msf
396.747 484.485 mo
(, i.i.no.i \(Pen\222nsula y Baleares: 23,60)
[1.56989 1.54358 .918823 1.56989 .918854 1.56985 3.38293 3.51593 1.56985 .918854 1.54358 1.31085 
4.03397 3.25687 3.38293 .918854 3.38293 2.99094 3.3829 .918854 3.2569 1.54358 2.86487 1.54358 
4.29297 3.2569 .918854 3.25687 3.2569 1.82892 3.25687 2.99094 1.56985 1.54358 3.51593 3.5159 
1.56989 3.5159 0 ]xsh
495.618 480.018 mo
495.211 479.536 494.457 479.235 493.742 479.235 cv
492.499 479.235 491.482 479.95 491.203 481.14 cv
490.578 481.14 li
490.352 481.615 li
491.113 481.615 li
491.105 481.713 491.105 481.78 491.105 481.856 cv
491.105 481.924 491.105 481.991 491.113 482.089 cv
490.578 482.089 li
490.352 482.564 li
491.203 482.564 li
491.482 483.754 492.499 484.485 493.704 484.485 cv
494.382 484.485 495.022 484.206 495.399 483.905 cv
495.399 483.264 li
495.022 483.716 494.42 484.01 493.742 484.01 cv
492.762 484.01 492.009 483.453 491.738 482.564 cv
494.42 482.564 li
494.646 482.089 li
491.632 482.089 li
491.625 482.007 491.618 481.939 491.618 481.863 cv
491.618 481.788 491.625 481.713 491.632 481.615 cv
494.864 481.615 li
495.09 481.14 li
491.738 481.14 li
491.972 480.327 492.725 479.709 493.666 479.709 cv
494.42 479.709 495.03 480.025 495.399 480.477 cv
495.618 480.018 li
ef
RPTEAG+HelveticaNeue-Light*1 [7.00014 0 0 -7.00014 0 0 ]msf
495.591 484.485 mo
(, Canarias:)
[1.56989 1.54361 4.55194 3.2569 3.38297 3.2569 1.82892 .918884 3.2569 2.99097 0 ]xsh
92.435 491.185 mo
(20)
[3.54235 0 ]xsh
104.784 486.718 mo
104.378 486.236 103.624 485.935 102.909 485.935 cv
101.666 485.935 100.649 486.65 100.37 487.84 cv
99.7449 487.84 li
99.5191 488.315 li
100.28 488.315 li
100.272 488.413 100.272 488.481 100.272 488.556 cv
100.272 488.624 100.272 488.691 100.28 488.789 cv
99.7449 488.789 li
99.5191 489.264 li
100.37 489.264 li
100.649 490.454 101.666 491.185 102.871 491.185 cv
103.549 491.185 104.189 490.906 104.566 490.605 cv
104.566 489.964 li
104.189 490.416 103.587 490.71 102.909 490.71 cv
101.93 490.71 101.176 490.153 100.905 489.264 cv
103.587 489.264 li
103.812 488.789 li
100.8 488.789 li
100.792 488.707 100.784 488.639 100.784 488.564 cv
100.784 488.488 100.792 488.413 100.8 488.315 cv
104.031 488.315 li
104.257 487.84 li
100.905 487.84 li
101.139 487.027 101.892 486.409 102.833 486.409 cv
103.587 486.409 104.197 486.725 104.566 487.177 cv
104.784 486.718 li
ef
RPTEAG+HelveticaNeue-Light*1 [7.00014 0 0 -7.00014 0 0 ]msf
104.784 491.185 mo
(, Ceuta: 21,60)
[1.59631 1.59631 4.57833 3.28333 3.40936 1.72235 3.28333 1.59631 1.59631 3.54236 3.54234 1.59631 
3.54234 0 ]xsh
148.473 486.718 mo
148.066 486.236 147.313 485.935 146.597 485.935 cv
145.354 485.935 144.338 486.65 144.059 487.84 cv
143.434 487.84 li
143.208 488.315 li
143.968 488.315 li
143.961 488.413 143.961 488.481 143.961 488.556 cv
143.961 488.624 143.961 488.691 143.968 488.789 cv
143.434 488.789 li
143.208 489.264 li
144.059 489.264 li
144.338 490.454 145.354 491.185 146.56 491.185 cv
147.238 491.185 147.878 490.906 148.254 490.605 cv
148.254 489.964 li
147.878 490.416 147.275 490.71 146.597 490.71 cv
145.618 490.71 144.865 490.153 144.594 489.264 cv
147.275 489.264 li
147.501 488.789 li
144.488 488.789 li
144.48 488.707 144.473 488.639 144.473 488.564 cv
144.473 488.488 144.48 488.413 144.488 488.315 cv
147.72 488.315 li
147.946 487.84 li
144.594 487.84 li
144.827 487.027 145.58 486.409 146.522 486.409 cv
147.275 486.409 147.885 486.725 148.254 487.177 cv
148.473 486.718 li
ef
RPTEAG+HelveticaNeue-Light*1 [7.00014 0 0 -7.00014 0 0 ]msf
148.473 491.185 mo
(, Melilla: 20,80)
[1.59628 1.59628 5.48131 3.28329 .945251 .945251 .945236 .945251 3.28329 1.59628 1.59628 3.54231 
3.54233 1.59628 3.54231 0 ]xsh
191.714 486.718 mo
191.307 486.236 190.554 485.935 189.838 485.935 cv
188.595 485.935 187.578 486.65 187.299 487.84 cv
186.674 487.84 li
186.448 488.315 li
187.209 488.315 li
187.202 488.413 187.202 488.481 187.202 488.556 cv
187.202 488.624 187.202 488.691 187.209 488.789 cv
186.674 488.789 li
186.448 489.264 li
187.299 489.264 li
187.578 490.454 188.595 491.185 189.8 491.185 cv
190.478 491.185 191.118 490.906 191.495 490.605 cv
191.495 489.964 li
191.118 490.416 190.516 490.71 189.838 490.71 cv
188.859 490.71 188.105 490.153 187.834 489.264 cv
190.516 489.264 li
190.742 488.789 li
187.729 488.789 li
187.721 488.707 187.714 488.639 187.714 488.564 cv
187.714 488.488 187.721 488.413 187.729 488.315 cv
190.96 488.315 li
191.186 487.84 li
187.834 487.84 li
188.068 487.027 188.821 486.409 189.762 486.409 cv
190.516 486.409 191.126 486.725 191.495 487.177 cv
191.714 486.718 li
ef
RPTEAG+HelveticaNeue-Light*1 [7.00014 0 0 -7.00014 0 0 ]msf
191.714 491.185 mo
(\))sh
85.676 497.885 mo
(\245)sh
92.4358 497.885 mo
(Si al Cliente le quedan por cumplir en la l\222nea afectada entre 7 y 12 meses, deber\207 abonar: 60)
[4.11125 .996132 1.85057 3.33418 .99614 1.85057 4.62919 .99614 .99614 3.33418 3.46023 1.7732 
3.33418 1.85057 .99614 3.33418 1.85057 3.71925 3.46022 3.33418 3.71924 3.33418 3.46022 1.85057 
3.71924 3.59322 1.90619 1.85057 3.33418 3.46022 5.5322 3.71924 .996155 .996124 1.90619 1.85059 
3.33417 3.46024 1.85056 .996155 3.33417 1.85059 .996124 .996155 3.46021 3.33417 3.33418 1.85057 
3.33418 1.51418 3.33417 3.33418 1.77319 3.33418 3.71924 3.33417 1.85059 3.33417 3.46022 1.77319 
1.90619 3.33415 1.85059 3.5932 1.85059 2.94214 1.85059 3.5932 3.5932 1.85059 5.53217 3.33417 
3.06824 3.33417 3.06821 1.64719 1.85056 3.71924 3.33417 3.71924 3.3342 1.90616 3.3342 1.85059 
3.33417 3.71924 3.59323 3.46024 3.33417 1.90619 1.64719 1.85059 3.5932 0 ]xsh
355.427 493.418 mo
355.02 492.936 354.267 492.635 353.552 492.635 cv
352.309 492.635 351.292 493.35 351.013 494.54 cv
350.388 494.54 li
350.162 495.015 li
350.923 495.015 li
350.915 495.113 350.915 495.181 350.915 495.256 cv
350.915 495.324 350.915 495.392 350.923 495.489 cv
350.388 495.489 li
350.162 495.964 li
351.013 495.964 li
351.292 497.154 352.309 497.885 353.514 497.885 cv
354.192 497.885 354.832 497.606 355.209 497.305 cv
355.209 496.665 li
354.832 497.117 354.229 497.411 353.552 497.411 cv
352.572 497.411 351.819 496.853 351.548 495.964 cv
354.229 495.964 li
354.455 495.489 li
351.442 495.489 li
351.435 495.407 351.427 495.339 351.427 495.264 cv
351.427 495.188 351.435 495.113 351.442 495.015 cv
354.674 495.015 li
354.9 494.54 li
351.548 494.54 li
351.781 493.727 352.535 493.109 353.476 493.109 cv
354.229 493.109 354.839 493.426 355.209 493.878 cv
355.427 493.418 li
ef
RPTEAG+HelveticaNeue-Light*1 [7.00014 0 0 -7.00014 0 0 ]msf
355.478 497.885 mo
(, i.i.no.i \(Pen\222nsula y Baleares: 70,80)
[1.64719 1.85059 .996124 1.64719 .996155 1.64716 3.46024 3.59323 1.64719 .996124 1.85059 1.38815 
4.11127 3.3342 3.46024 .996124 3.46024 3.06824 3.46024 .996155 3.33417 1.85059 2.9422 1.85059 
4.37027 3.3342 .996155 3.3342 3.3342 1.90619 3.3342 3.06824 1.64719 1.85059 3.5932 3.59323 
1.64719 3.5932 0 ]xsh
458.51 493.418 mo
458.104 492.936 457.35 492.635 456.635 492.635 cv
455.392 492.635 454.375 493.35 454.096 494.54 cv
453.471 494.54 li
453.245 495.015 li
454.006 495.015 li
453.998 495.113 453.998 495.181 453.998 495.256 cv
453.998 495.324 453.998 495.392 454.006 495.489 cv
453.471 495.489 li
453.245 495.964 li
454.096 495.964 li
454.375 497.154 455.392 497.885 456.597 497.885 cv
457.275 497.885 457.915 497.606 458.292 497.305 cv
458.292 496.665 li
457.915 497.117 457.312 497.411 456.635 497.411 cv
455.655 497.411 454.902 496.853 454.631 495.964 cv
457.312 495.964 li
457.539 495.489 li
454.525 495.489 li
454.518 495.407 454.511 495.339 454.511 495.264 cv
454.511 495.188 454.518 495.113 454.525 495.015 cv
457.757 495.015 li
457.983 494.54 li
454.631 494.54 li
454.864 493.727 455.618 493.109 456.559 493.109 cv
457.312 493.109 457.923 493.426 458.292 493.878 cv
458.51 493.418 li
ef
RPTEAG+HelveticaNeue-Light*1 [7.00014 0 0 -7.00014 0 0 ]msf
458.561 497.885 mo
(, Canarias: 60)
[1.64722 1.85062 4.62921 3.33423 3.46027 3.33423 1.90622 .996185 3.33423 3.06827 1.64719 1.85062 
3.59326 0 ]xsh
502.066 493.418 mo
501.66 492.936 500.906 492.635 500.191 492.635 cv
498.948 492.635 497.931 493.35 497.652 494.54 cv
497.027 494.54 li
496.801 495.015 li
497.562 495.015 li
497.554 495.113 497.554 495.181 497.554 495.256 cv
497.554 495.324 497.554 495.392 497.562 495.489 cv
497.027 495.489 li
496.801 495.964 li
497.652 495.964 li
497.931 497.154 498.948 497.885 500.153 497.885 cv
500.831 497.885 501.471 497.606 501.848 497.305 cv
501.848 496.665 li
501.471 497.117 500.869 497.411 500.191 497.411 cv
499.212 497.411 498.458 496.853 498.187 495.964 cv
500.869 495.964 li
501.095 495.489 li
498.082 495.489 li
498.074 495.407 498.066 495.339 498.066 495.264 cv
498.066 495.188 498.074 495.113 498.082 495.015 cv
501.313 495.015 li
501.539 494.54 li
498.187 494.54 li
498.421 493.727 499.174 493.109 500.115 493.109 cv
500.869 493.109 501.479 493.426 501.848 493.878 cv
502.066 493.418 li
ef
RPTEAG+HelveticaNeue-Light*1 [7.00014 0 0 -7.00014 0 0 ]msf
502.117 497.885 mo
(, Ceuta:)
[1.64719 1.85062 4.62921 3.33423 3.46027 1.77325 3.33417 0 ]xsh
92.435 504.585 mo
(64,80)
[3.54236 3.54236 1.59633 3.54236 0 ]xsh
113.464 500.118 mo
113.057 499.636 112.304 499.335 111.589 499.335 cv
110.346 499.335 109.329 500.051 109.05 501.241 cv
108.425 501.241 li
108.199 501.715 li
108.96 501.715 li
108.952 501.813 108.952 501.881 108.952 501.956 cv
108.952 502.024 108.952 502.092 108.96 502.19 cv
108.425 502.19 li
108.199 502.664 li
109.05 502.664 li
109.329 503.854 110.346 504.585 111.551 504.585 cv
112.229 504.585 112.869 504.307 113.246 504.005 cv
113.246 503.365 li
112.869 503.817 112.267 504.111 111.589 504.111 cv
110.609 504.111 109.856 503.553 109.585 502.664 cv
112.267 502.664 li
112.493 502.19 li
109.48 502.19 li
109.472 502.107 109.464 502.039 109.464 501.964 cv
109.464 501.889 109.472 501.813 109.48 501.715 cv
112.711 501.715 li
112.937 501.241 li
109.585 501.241 li
109.819 500.427 110.572 499.81 111.513 499.81 cv
112.267 499.81 112.877 500.126 113.246 500.578 cv
113.464 500.118 li
ef
RPTEAG+HelveticaNeue-Light*1 [7.00014 0 0 -7.00014 0 0 ]msf
113.464 504.585 mo
(, Melilla: 62,40)
[1.59628 1.59628 5.48131 3.28329 .945251 .945251 .945251 .945251 3.28329 1.59628 1.59627 3.54233 
3.54231 1.59628 3.54231 0 ]xsh
156.705 500.118 mo
156.298 499.636 155.545 499.335 154.829 499.335 cv
153.586 499.335 152.57 500.051 152.291 501.241 cv
151.666 501.241 li
151.44 501.715 li
152.2 501.715 li
152.193 501.813 152.193 501.881 152.193 501.956 cv
152.193 502.024 152.193 502.092 152.2 502.19 cv
151.666 502.19 li
151.44 502.664 li
152.291 502.664 li
152.57 503.854 153.586 504.585 154.792 504.585 cv
155.47 504.585 156.11 504.307 156.487 504.005 cv
156.487 503.365 li
156.11 503.817 155.507 504.111 154.829 504.111 cv
153.85 504.111 153.097 503.553 152.826 502.664 cv
155.507 502.664 li
155.733 502.19 li
152.72 502.19 li
152.713 502.107 152.705 502.039 152.705 501.964 cv
152.705 501.889 152.713 501.813 152.72 501.715 cv
155.952 501.715 li
156.178 501.241 li
152.826 501.241 li
153.059 500.427 153.812 499.81 154.754 499.81 cv
155.507 499.81 156.118 500.126 156.487 500.578 cv
156.705 500.118 li
ef
RPTEAG+HelveticaNeue-Light*1 [7.00014 0 0 -7.00014 0 0 ]msf
156.705 504.585 mo
(\))sh
85.6749 511.285 mo
(\245)sh
92.4351 511.285 mo
(Si al Cliente le quedan por cumplir en la l\222nea afectada entre 13 y 18 meses, deber\207 abonar: 100)
[4.08395 .968834 1.71397 3.30688 .968834 1.71397 4.60189 .968842 .968834 3.30688 3.43292 1.74591 
3.30688 1.71397 .968842 3.30688 1.71396 3.69194 3.43292 3.30688 3.69196 3.30687 3.43292 1.71397 
3.69196 3.56589 1.87891 1.71396 3.30688 3.43292 5.50488 3.69196 .968842 .968842 1.87889 1.71397 
3.30688 3.43292 1.71396 .968842 3.30688 1.71396 .968842 .968842 3.43292 3.30688 3.30688 1.71396 
3.30688 1.48689 3.3069 3.30685 1.74591 3.30688 3.69196 3.30688 1.71399 3.30688 3.43292 1.74591 
1.87888 3.30688 1.71399 3.56589 3.56592 1.71396 2.91489 1.71396 3.56592 3.56592 1.71396 5.50491 
3.30688 3.04089 3.30688 3.04092 1.61987 1.71399 3.69193 3.30688 3.69196 3.30688 1.87891 3.30685 
1.71396 3.30688 3.69193 3.56589 3.43292 3.30685 1.87888 1.61987 1.71396 3.56589 3.56589 0 
]xsh
358.022 506.818 mo
357.616 506.336 356.862 506.035 356.147 506.035 cv
354.904 506.035 353.887 506.751 353.608 507.941 cv
352.983 507.941 li
352.757 508.415 li
353.518 508.415 li
353.511 508.513 353.511 508.581 353.511 508.656 cv
353.511 508.724 353.511 508.792 353.518 508.89 cv
352.983 508.89 li
352.757 509.364 li
353.608 509.364 li
353.887 510.555 354.904 511.285 356.109 511.285 cv
356.787 511.285 357.427 511.007 357.804 510.705 cv
357.804 510.065 li
357.427 510.517 356.825 510.811 356.147 510.811 cv
355.168 510.811 354.414 510.253 354.143 509.364 cv
356.825 509.364 li
357.051 508.89 li
354.038 508.89 li
354.03 508.807 354.023 508.739 354.023 508.664 cv
354.023 508.589 354.03 508.513 354.038 508.415 cv
357.269 508.415 li
357.495 507.941 li
354.143 507.941 li
354.377 507.127 355.13 506.51 356.071 506.51 cv
356.825 506.51 357.435 506.826 357.804 507.278 cv
358.022 506.818 li
ef
RPTEAG+HelveticaNeue-Light*1 [7.00014 0 0 -7.00014 0 0 ]msf
358.046 511.285 mo
(, i.i.no.i. \(Pen\222nsula y Baleares: 118)
[1.61987 1.71399 .968842 1.61987 .968842 1.61987 3.43292 3.56592 1.61987 .968842 1.6199 1.71396 
1.36087 4.08395 3.30688 3.43292 .968842 3.43295 3.04092 3.43292 .968842 3.30688 1.71399 2.91489 
1.71396 4.34299 3.30688 .968842 3.30692 3.30688 1.87891 3.30688 3.04092 1.61987 1.71399 3.56592 
3.56592 0 ]xsh
455.9 506.818 mo
455.493 506.336 454.74 506.035 454.024 506.035 cv
452.781 506.035 451.764 506.751 451.486 507.941 cv
450.861 507.941 li
450.635 508.415 li
451.395 508.415 li
451.388 508.513 451.388 508.581 451.388 508.656 cv
451.388 508.724 451.388 508.792 451.395 508.89 cv
450.861 508.89 li
450.635 509.364 li
451.486 509.364 li
451.764 510.555 452.781 511.285 453.987 511.285 cv
454.664 511.285 455.305 511.007 455.681 510.705 cv
455.681 510.065 li
455.305 510.517 454.702 510.811 454.024 510.811 cv
453.045 510.811 452.292 510.253 452.021 509.364 cv
454.702 509.364 li
454.928 508.89 li
451.915 508.89 li
451.908 508.807 451.9 508.739 451.9 508.664 cv
451.9 508.589 451.908 508.513 451.915 508.415 cv
455.146 508.415 li
455.373 507.941 li
452.021 507.941 li
452.254 507.127 453.007 506.51 453.949 506.51 cv
454.702 506.51 455.312 506.826 455.681 507.278 cv
455.9 506.818 li
ef
RPTEAG+HelveticaNeue-Light*1 [7.00014 0 0 -7.00014 0 0 ]msf
455.924 511.285 mo
(, Canarias: 100)
[1.6199 1.71402 4.60193 3.30692 3.43295 3.30695 1.87891 .968903 3.30692 3.04095 1.6199 1.71402 
3.56592 3.56595 0 ]xsh
502.393 506.818 mo
501.987 506.336 501.233 506.035 500.518 506.035 cv
499.275 506.035 498.258 506.751 497.979 507.941 cv
497.354 507.941 li
497.128 508.415 li
497.889 508.415 li
497.881 508.513 497.881 508.581 497.881 508.656 cv
497.881 508.724 497.881 508.792 497.889 508.89 cv
497.354 508.89 li
497.128 509.364 li
497.979 509.364 li
498.258 510.555 499.275 511.285 500.48 511.285 cv
501.158 511.285 501.798 511.007 502.175 510.705 cv
502.175 510.065 li
501.798 510.517 501.196 510.811 500.518 510.811 cv
499.539 510.811 498.785 510.253 498.514 509.364 cv
501.196 509.364 li
501.422 508.89 li
498.409 508.89 li
498.401 508.807 498.394 508.739 498.394 508.664 cv
498.394 508.589 498.401 508.513 498.409 508.415 cv
501.64 508.415 li
501.866 507.941 li
498.514 507.941 li
498.748 507.127 499.501 506.51 500.443 506.51 cv
501.196 506.51 501.806 506.826 502.175 507.278 cv
502.393 506.818 li
ef
RPTEAG+HelveticaNeue-Light*1 [7.00014 0 0 -7.00014 0 0 ]msf
502.417 511.285 mo
(, Ceuta:)
[1.6199 1.71399 4.60193 3.30692 3.43298 1.74591 3.30695 0 ]xsh
92.435 517.985 mo
(108)
[3.54235 3.54235 0 ]xsh
108.327 513.519 mo
107.92 513.036 107.166 512.735 106.451 512.735 cv
105.208 512.735 104.191 513.451 103.912 514.641 cv
103.287 514.641 li
103.061 515.115 li
103.822 515.115 li
103.814 515.213 103.814 515.281 103.814 515.356 cv
103.814 515.424 103.814 515.492 103.822 515.59 cv
103.287 515.59 li
103.061 516.064 li
103.912 516.064 li
104.191 517.255 105.208 517.985 106.413 517.985 cv
107.091 517.985 107.731 517.707 108.108 517.405 cv
108.108 516.765 li
107.731 517.217 107.129 517.511 106.451 517.511 cv
105.471 517.511 104.718 516.954 104.447 516.064 cv
107.129 516.064 li
107.355 515.59 li
104.341 515.59 li
104.334 515.507 104.327 515.439 104.327 515.364 cv
104.327 515.289 104.334 515.213 104.341 515.115 cv
107.573 515.115 li
107.799 514.641 li
104.447 514.641 li
104.68 513.827 105.434 513.21 106.375 513.21 cv
107.129 513.21 107.739 513.526 108.108 513.978 cv
108.327 513.519 li
ef
RPTEAG+HelveticaNeue-Light*1 [7.00014 0 0 -7.00014 0 0 ]msf
108.327 517.985 mo
(, Melilla: 104)
[1.59628 1.59627 5.4813 3.28329 .945244 .945244 .945236 .945244 3.28329 1.59627 1.59628 3.54231 
3.5423 0 ]xsh
146.429 513.519 mo
146.022 513.036 145.269 512.735 144.554 512.735 cv
143.311 512.735 142.294 513.451 142.015 514.641 cv
141.389 514.641 li
141.164 515.115 li
141.924 515.115 li
141.917 515.213 141.917 515.281 141.917 515.356 cv
141.917 515.424 141.917 515.492 141.924 515.59 cv
141.389 515.59 li
141.164 516.064 li
142.015 516.064 li
142.294 517.255 143.311 517.985 144.516 517.985 cv
145.193 517.985 145.834 517.707 146.211 517.405 cv
146.211 516.765 li
145.834 517.217 145.231 517.511 144.554 517.511 cv
143.574 517.511 142.821 516.954 142.55 516.064 cv
145.231 516.064 li
145.457 515.59 li
142.444 515.59 li
142.437 515.507 142.429 515.439 142.429 515.364 cv
142.429 515.289 142.437 515.213 142.444 515.115 cv
145.676 515.115 li
145.902 514.641 li
142.55 514.641 li
142.783 513.827 143.536 513.21 144.478 513.21 cv
145.231 513.21 145.841 513.526 146.211 513.978 cv
146.429 513.519 li
ef
RPTEAG+HelveticaNeue-Light*1 [7.00014 0 0 -7.00014 0 0 ]msf
146.429 517.985 mo
(\))sh
85.6751 524.685 mo
(\245)sh
92.4353 524.685 mo
(Si al Cliente le quedan por cumplir en la l\222nea afectada entre 19 y 24 meses, deber\207 abonar: 200)
[4.08395 .968834 1.71397 3.30688 .968834 1.71397 4.60189 .968842 .968834 3.30688 3.43292 1.74591 
3.30688 1.71397 .968842 3.30688 1.71396 3.69196 3.43292 3.30687 3.69194 3.30688 3.43292 1.71397 
3.69194 3.56592 1.87888 1.71397 3.30688 3.43292 5.5049 3.69194 .968842 .968842 1.87889 1.71396 
3.30688 3.43292 1.71397 .968842 3.30688 1.71396 .968842 .968842 3.43291 3.30688 3.30688 1.71399 
3.30688 1.48688 3.30688 3.30688 1.74591 3.30688 3.69196 3.30688 1.71396 3.30688 3.43292 1.74591 
1.87891 3.30688 1.71396 3.56592 3.56589 1.71399 2.91489 1.71396 3.56592 3.56589 1.71399 5.50488 
3.30688 3.04092 3.30688 3.04092 1.61987 1.71396 3.69196 3.30688 3.69193 3.30688 1.87891 3.30688 
1.71396 3.30685 3.69193 3.56592 3.43289 3.30688 1.87888 1.61984 1.71396 3.56592 3.56589 0 
]xsh
358.022 520.219 mo
357.616 519.737 356.862 519.435 356.147 519.435 cv
354.904 519.435 353.887 520.151 353.608 521.341 cv
352.983 521.341 li
352.757 521.816 li
353.518 521.816 li
353.511 521.914 353.511 521.981 353.511 522.057 cv
353.511 522.125 353.511 522.192 353.518 522.29 cv
352.983 522.29 li
352.757 522.765 li
353.608 522.765 li
353.887 523.955 354.904 524.686 356.109 524.686 cv
356.787 524.686 357.427 524.407 357.804 524.105 cv
357.804 523.465 li
357.427 523.917 356.825 524.211 356.147 524.211 cv
355.168 524.211 354.414 523.654 354.143 522.765 cv
356.825 522.765 li
357.051 522.29 li
354.038 522.29 li
354.03 522.207 354.023 522.139 354.023 522.064 cv
354.023 521.989 354.03 521.914 354.038 521.816 cv
357.269 521.816 li
357.495 521.341 li
354.143 521.341 li
354.377 520.527 355.13 519.91 356.071 519.91 cv
356.825 519.91 357.435 520.226 357.804 520.678 cv
358.022 520.219 li
ef
RPTEAG+HelveticaNeue-Light*1 [7.00014 0 0 -7.00014 0 0 ]msf
358.046 524.686 mo
(, i.i.no.i. \(Pen\222nsula y Baleares: 236)
[1.61987 1.71399 .968842 1.61987 .968842 1.61987 3.43292 3.56592 1.61987 .968842 1.6199 1.71396 
1.36087 4.08395 3.30688 3.43292 .968842 3.43295 3.04092 3.43292 .968842 3.30688 1.71399 2.91489 
1.71396 4.34299 3.30688 .968842 3.30692 3.30688 1.87891 3.30688 3.04092 1.61987 1.71399 3.56592 
3.56592 0 ]xsh
455.9 520.219 mo
455.493 519.737 454.74 519.435 454.024 519.435 cv
452.781 519.435 451.764 520.151 451.486 521.341 cv
450.861 521.341 li
450.635 521.816 li
451.395 521.816 li
451.388 521.914 451.388 521.981 451.388 522.057 cv
451.388 522.125 451.388 522.192 451.395 522.29 cv
450.861 522.29 li
450.635 522.765 li
451.486 522.765 li
451.764 523.955 452.781 524.686 453.987 524.686 cv
454.664 524.686 455.305 524.407 455.681 524.105 cv
455.681 523.465 li
455.305 523.917 454.702 524.211 454.024 524.211 cv
453.045 524.211 452.292 523.654 452.021 522.765 cv
454.702 522.765 li
454.928 522.29 li
451.915 522.29 li
451.908 522.207 451.9 522.139 451.9 522.064 cv
451.9 521.989 451.908 521.914 451.915 521.816 cv
455.146 521.816 li
455.373 521.341 li
452.021 521.341 li
452.254 520.527 453.007 519.91 453.949 519.91 cv
454.702 519.91 455.312 520.226 455.681 520.678 cv
455.9 520.219 li
ef
RPTEAG+HelveticaNeue-Light*1 [7.00014 0 0 -7.00014 0 0 ]msf
455.924 524.686 mo
(, Canarias: 200)
[1.6199 1.71402 4.60193 3.30692 3.43295 3.30695 1.87891 .968903 3.30692 3.04095 1.6199 1.71402 
3.56592 3.56595 0 ]xsh
502.393 520.219 mo
501.987 519.737 501.233 519.435 500.518 519.435 cv
499.275 519.435 498.258 520.151 497.979 521.341 cv
497.354 521.341 li
497.128 521.816 li
497.889 521.816 li
497.881 521.914 497.881 521.981 497.881 522.057 cv
497.881 522.125 497.881 522.192 497.889 522.29 cv
497.354 522.29 li
497.128 522.765 li
497.979 522.765 li
498.258 523.955 499.275 524.686 500.48 524.686 cv
501.158 524.686 501.798 524.407 502.175 524.105 cv
502.175 523.465 li
501.798 523.917 501.196 524.211 500.518 524.211 cv
499.539 524.211 498.785 523.654 498.514 522.765 cv
501.196 522.765 li
501.422 522.29 li
498.409 522.29 li
498.401 522.207 498.394 522.139 498.394 522.064 cv
498.394 521.989 498.401 521.914 498.409 521.816 cv
501.64 521.816 li
501.866 521.341 li
498.514 521.341 li
498.748 520.527 499.501 519.91 500.443 519.91 cv
501.196 519.91 501.806 520.226 502.175 520.678 cv
502.393 520.219 li
ef
RPTEAG+HelveticaNeue-Light*1 [7.00014 0 0 -7.00014 0 0 ]msf
502.417 524.686 mo
(, Ceuta:)
[1.6199 1.71399 4.60193 3.30692 3.43298 1.74591 3.30695 0 ]xsh
92.435 531.386 mo
(216)
[3.54235 3.54235 0 ]xsh
108.327 526.919 mo
107.92 526.437 107.166 526.136 106.451 526.136 cv
105.208 526.136 104.191 526.851 103.912 528.041 cv
103.287 528.041 li
103.061 528.516 li
103.822 528.516 li
103.814 528.614 103.814 528.682 103.814 528.757 cv
103.814 528.825 103.814 528.893 103.822 528.99 cv
103.287 528.99 li
103.061 529.465 li
103.912 529.465 li
104.191 530.655 105.208 531.386 106.413 531.386 cv
107.091 531.386 107.731 531.107 108.108 530.805 cv
108.108 530.165 li
107.731 530.617 107.129 530.911 106.451 530.911 cv
105.471 530.911 104.718 530.354 104.447 529.465 cv
107.129 529.465 li
107.355 528.99 li
104.341 528.99 li
104.334 528.907 104.327 528.839 104.327 528.764 cv
104.327 528.689 104.334 528.614 104.341 528.516 cv
107.573 528.516 li
107.799 528.041 li
104.447 528.041 li
104.68 527.228 105.434 526.61 106.375 526.61 cv
107.129 526.61 107.739 526.926 108.108 527.378 cv
108.327 526.919 li
ef
RPTEAG+HelveticaNeue-Light*1 [7.00014 0 0 -7.00014 0 0 ]msf
108.327 531.386 mo
(, Melilla: 208)
[1.59628 1.59627 5.4813 3.28329 .945244 .945244 .945236 .945244 3.28329 1.59627 1.59628 3.54231 
3.5423 0 ]xsh
146.429 526.919 mo
146.022 526.437 145.269 526.136 144.554 526.136 cv
143.311 526.136 142.294 526.851 142.015 528.041 cv
141.389 528.041 li
141.164 528.516 li
141.924 528.516 li
141.917 528.614 141.917 528.682 141.917 528.757 cv
141.917 528.825 141.917 528.893 141.924 528.99 cv
141.389 528.99 li
141.164 529.465 li
142.015 529.465 li
142.294 530.655 143.311 531.386 144.516 531.386 cv
145.193 531.386 145.834 531.107 146.211 530.805 cv
146.211 530.165 li
145.834 530.617 145.231 530.911 144.554 530.911 cv
143.574 530.911 142.821 530.354 142.55 529.465 cv
145.231 529.465 li
145.457 528.99 li
142.444 528.99 li
142.437 528.907 142.429 528.839 142.429 528.764 cv
142.429 528.689 142.437 528.614 142.444 528.516 cv
145.676 528.516 li
145.902 528.041 li
142.55 528.041 li
142.783 527.228 143.536 526.61 144.478 526.61 cv
145.231 526.61 145.841 526.926 146.211 527.378 cv
146.429 526.919 li
ef
RPTEAG+HelveticaNeue-Light*1 [7.00014 0 0 -7.00014 0 0 ]msf
146.429 531.386 mo
(\))sh
85.6751 538.086 mo
(\245)sh
92.4353 538.086 mo
(Si al Cliente le quedan por cumplir en la l\222nea afectada entre 25 y 30 meses, deber\207 abonar: 250)
[4.08395 .968834 1.71397 3.30688 .968834 1.71397 4.60189 .968842 .968834 3.30688 3.43292 1.74591 
3.30688 1.71397 .968842 3.30688 1.71396 3.69196 3.43292 3.30687 3.69194 3.30688 3.43292 1.71397 
3.69194 3.56592 1.87888 1.71397 3.30688 3.43292 5.5049 3.69194 .968842 .968842 1.87889 1.71396 
3.30688 3.43292 1.71397 .968842 3.30688 1.71396 .968842 .968842 3.43291 3.30688 3.30688 1.71399 
3.30688 1.48688 3.30688 3.30688 1.74591 3.30688 3.69196 3.30688 1.71396 3.30688 3.43292 1.74591 
1.87891 3.30688 1.71396 3.56592 3.56589 1.71399 2.91489 1.71396 3.56592 3.56589 1.71399 5.50488 
3.30688 3.04092 3.30688 3.04092 1.61987 1.71396 3.69196 3.30688 3.69193 3.30688 1.87891 3.30688 
1.71396 3.30685 3.69193 3.56592 3.43289 3.30688 1.87888 1.61984 1.71396 3.56592 3.56589 0 
]xsh
358.022 533.619 mo
357.616 533.137 356.862 532.836 356.147 532.836 cv
354.904 532.836 353.887 533.551 353.608 534.741 cv
352.983 534.741 li
352.757 535.216 li
353.518 535.216 li
353.511 535.314 353.511 535.382 353.511 535.457 cv
353.511 535.525 353.511 535.593 353.518 535.691 cv
352.983 535.691 li
352.757 536.165 li
353.608 536.165 li
353.887 537.355 354.904 538.086 356.109 538.086 cv
356.787 538.086 357.427 537.807 357.804 537.506 cv
357.804 536.866 li
357.427 537.318 356.825 537.611 356.147 537.611 cv
355.168 537.611 354.414 537.054 354.143 536.165 cv
356.825 536.165 li
357.051 535.691 li
354.038 535.691 li
354.03 535.608 354.023 535.54 354.023 535.464 cv
354.023 535.389 354.03 535.314 354.038 535.216 cv
357.269 535.216 li
357.495 534.741 li
354.143 534.741 li
354.377 533.928 355.13 533.31 356.071 533.31 cv
356.825 533.31 357.435 533.627 357.804 534.079 cv
358.022 533.619 li
ef
RPTEAG+HelveticaNeue-Light*1 [7.00014 0 0 -7.00014 0 0 ]msf
358.046 538.086 mo
(, i.i.no.i. \(Pen\222nsula y Baleares: 295)
[1.61987 1.71399 .968842 1.61987 .968842 1.61987 3.43292 3.56592 1.61987 .968842 1.6199 1.71396 
1.36087 4.08395 3.30688 3.43292 .968842 3.43295 3.04092 3.43292 .968842 3.30688 1.71399 2.91489 
1.71396 4.34299 3.30688 .968842 3.30692 3.30688 1.87891 3.30688 3.04092 1.61987 1.71399 3.56592 
3.56592 0 ]xsh
455.9 533.619 mo
455.493 533.137 454.74 532.836 454.024 532.836 cv
452.781 532.836 451.764 533.551 451.486 534.741 cv
450.861 534.741 li
450.635 535.216 li
451.395 535.216 li
451.388 535.314 451.388 535.382 451.388 535.457 cv
451.388 535.525 451.388 535.593 451.395 535.691 cv
450.861 535.691 li
450.635 536.165 li
451.486 536.165 li
451.764 537.355 452.781 538.086 453.987 538.086 cv
454.664 538.086 455.305 537.807 455.681 537.506 cv
455.681 536.866 li
455.305 537.318 454.702 537.611 454.024 537.611 cv
453.045 537.611 452.292 537.054 452.021 536.165 cv
454.702 536.165 li
454.928 535.691 li
451.915 535.691 li
451.908 535.608 451.9 535.54 451.9 535.464 cv
451.9 535.389 451.908 535.314 451.915 535.216 cv
455.146 535.216 li
455.373 534.741 li
452.021 534.741 li
452.254 533.928 453.007 533.31 453.949 533.31 cv
454.702 533.31 455.312 533.627 455.681 534.079 cv
455.9 533.619 li
ef
RPTEAG+HelveticaNeue-Light*1 [7.00014 0 0 -7.00014 0 0 ]msf
455.924 538.086 mo
(, Canarias: 250)
[1.6199 1.71402 4.60193 3.30692 3.43295 3.30695 1.87891 .968903 3.30692 3.04095 1.6199 1.71402 
3.56592 3.56595 0 ]xsh
502.393 533.619 mo
501.987 533.137 501.233 532.836 500.518 532.836 cv
499.275 532.836 498.258 533.551 497.979 534.741 cv
497.354 534.741 li
497.128 535.216 li
497.889 535.216 li
497.881 535.314 497.881 535.382 497.881 535.457 cv
497.881 535.525 497.881 535.593 497.889 535.691 cv
497.354 535.691 li
497.128 536.165 li
497.979 536.165 li
498.258 537.355 499.275 538.086 500.48 538.086 cv
501.158 538.086 501.798 537.807 502.175 537.506 cv
502.175 536.866 li
501.798 537.318 501.196 537.611 500.518 537.611 cv
499.539 537.611 498.785 537.054 498.514 536.165 cv
501.196 536.165 li
501.422 535.691 li
498.409 535.691 li
498.401 535.608 498.394 535.54 498.394 535.464 cv
498.394 535.389 498.401 535.314 498.409 535.216 cv
501.64 535.216 li
501.866 534.741 li
498.514 534.741 li
498.748 533.928 499.501 533.31 500.443 533.31 cv
501.196 533.31 501.806 533.627 502.175 534.079 cv
502.393 533.619 li
ef
RPTEAG+HelveticaNeue-Light*1 [7.00014 0 0 -7.00014 0 0 ]msf
502.417 538.086 mo
(, Ceuta:)
[1.6199 1.71399 4.60193 3.30692 3.43298 1.74591 3.30695 0 ]xsh
92.435 544.786 mo
(270)
[3.54235 3.54235 0 ]xsh
108.327 540.319 mo
107.92 539.837 107.166 539.536 106.451 539.536 cv
105.208 539.536 104.191 540.251 103.912 541.441 cv
103.287 541.441 li
103.061 541.916 li
103.822 541.916 li
103.814 542.014 103.814 542.082 103.814 542.157 cv
103.814 542.225 103.814 542.293 103.822 542.391 cv
103.287 542.391 li
103.061 542.865 li
103.912 542.865 li
104.191 544.055 105.208 544.786 106.413 544.786 cv
107.091 544.786 107.731 544.507 108.108 544.206 cv
108.108 543.566 li
107.731 544.018 107.129 544.311 106.451 544.311 cv
105.471 544.311 104.718 543.754 104.447 542.865 cv
107.129 542.865 li
107.355 542.391 li
104.341 542.391 li
104.334 542.308 104.327 542.24 104.327 542.164 cv
104.327 542.089 104.334 542.014 104.341 541.916 cv
107.573 541.916 li
107.799 541.441 li
104.447 541.441 li
104.68 540.628 105.434 540.01 106.375 540.01 cv
107.129 540.01 107.739 540.327 108.108 540.779 cv
108.327 540.319 li
ef
RPTEAG+HelveticaNeue-Light*1 [7.00014 0 0 -7.00014 0 0 ]msf
108.327 544.786 mo
(, Melilla: 260)
[1.59628 1.59627 5.4813 3.28329 .945244 .945244 .945236 .945244 3.28329 1.59627 1.59628 3.54231 
3.5423 0 ]xsh
146.429 540.319 mo
146.022 539.837 145.269 539.536 144.554 539.536 cv
143.311 539.536 142.294 540.251 142.015 541.441 cv
141.389 541.441 li
141.164 541.916 li
141.924 541.916 li
141.917 542.014 141.917 542.082 141.917 542.157 cv
141.917 542.225 141.917 542.293 141.924 542.391 cv
141.389 542.391 li
141.164 542.865 li
142.015 542.865 li
142.294 544.055 143.311 544.786 144.516 544.786 cv
145.193 544.786 145.834 544.507 146.211 544.206 cv
146.211 543.566 li
145.834 544.018 145.231 544.311 144.554 544.311 cv
143.574 544.311 142.821 543.754 142.55 542.865 cv
145.231 542.865 li
145.457 542.391 li
142.444 542.391 li
142.437 542.308 142.429 542.24 142.429 542.164 cv
142.429 542.089 142.437 542.014 142.444 541.916 cv
145.676 541.916 li
145.902 541.441 li
142.55 541.441 li
142.783 540.628 143.536 540.01 144.478 540.01 cv
145.231 540.01 145.841 540.327 146.211 540.779 cv
146.429 540.319 li
ef
RPTEAG+HelveticaNeue-Light*1 [7.00014 0 0 -7.00014 0 0 ]msf
146.429 544.786 mo
(\))sh
85.6751 551.486 mo
(\245)sh
92.4353 551.486 mo
(Si al Cliente le quedan por cumplir en la l\222nea afectada entre 31 y 36, deber\207 abonar: 300)
[4.08615 .971031 1.72517 3.30908 .971031 1.72517 4.60409 .971039 .971031 3.30908 3.43512 1.7481 
3.30908 1.72517 .971031 3.30908 1.72517 3.69414 3.43512 3.30908 3.69415 3.30908 3.43512 1.72516 
3.69415 3.5681 1.88109 1.72516 3.30908 3.43512 5.5071 3.69414 .971039 .971039 1.8811 1.72516 
3.30908 3.43512 1.72516 .971039 3.30908 1.72516 .971039 .971039 3.43512 3.30908 3.30908 1.72516 
3.30907 1.48907 3.30907 3.30908 1.74811 3.30905 3.69415 3.30908 1.72516 3.30905 3.43512 1.74811 
1.88107 3.30908 1.72516 3.56812 3.56808 1.72516 2.91705 1.72519 3.56808 3.56808 1.62207 1.72516 
3.69415 3.30905 3.69415 3.30905 1.8811 3.30908 1.72516 3.30905 3.69415 3.56808 3.43512 3.30908 
1.8811 1.62207 1.72516 3.56812 3.56812 0 ]xsh
338.466 547.019 mo
338.06 546.537 337.306 546.236 336.591 546.236 cv
335.348 546.236 334.331 546.952 334.052 548.141 cv
333.427 548.141 li
333.201 548.616 li
333.962 548.616 li
333.954 548.714 333.954 548.782 333.954 548.857 cv
333.954 548.925 333.954 548.993 333.962 549.091 cv
333.427 549.091 li
333.201 549.565 li
334.052 549.565 li
334.331 550.755 335.348 551.486 336.553 551.486 cv
337.231 551.486 337.871 551.207 338.248 550.906 cv
338.248 550.266 li
337.871 550.718 337.269 551.012 336.591 551.012 cv
335.612 551.012 334.858 550.454 334.587 549.565 cv
337.269 549.565 li
337.495 549.091 li
334.482 549.091 li
334.474 549.008 334.466 548.94 334.466 548.865 cv
334.466 548.789 334.474 548.714 334.482 548.616 cv
337.713 548.616 li
337.939 548.141 li
334.587 548.141 li
334.821 547.328 335.574 546.711 336.515 546.711 cv
337.269 546.711 337.879 547.027 338.248 547.479 cv
338.466 547.019 li
ef
RPTEAG+HelveticaNeue-Light*1 [7.00014 0 0 -7.00014 0 0 ]msf
338.492 551.486 mo
(, i.i.no.i. \(Pen\222nsula y Baleares: 354)
[1.62207 1.72519 .971039 1.62207 .971069 1.62207 3.43512 3.56812 1.62207 .971069 1.62207 1.72516 
1.36307 4.08615 3.30908 3.43515 .971039 3.43512 3.04312 3.43515 .971039 3.30908 1.72519 2.91708 
1.72519 4.34518 3.30908 .971039 3.30911 3.30908 1.8811 3.30911 3.04312 1.62207 1.72519 3.56812 
3.56812 0 ]xsh
436.478 547.019 mo
436.071 546.537 435.318 546.236 434.602 546.236 cv
433.359 546.236 432.342 546.952 432.064 548.141 cv
431.438 548.141 li
431.212 548.616 li
431.973 548.616 li
431.966 548.714 431.966 548.782 431.966 548.857 cv
431.966 548.925 431.966 548.993 431.973 549.091 cv
431.438 549.091 li
431.212 549.565 li
432.064 549.565 li
432.342 550.755 433.359 551.486 434.564 551.486 cv
435.242 551.486 435.883 551.207 436.259 550.906 cv
436.259 550.266 li
435.883 550.718 435.28 551.012 434.602 551.012 cv
433.623 551.012 432.87 550.454 432.598 549.565 cv
435.28 549.565 li
435.506 549.091 li
432.493 549.091 li
432.486 549.008 432.478 548.94 432.478 548.865 cv
432.478 548.789 432.486 548.714 432.493 548.616 cv
435.725 548.616 li
435.95 548.141 li
432.598 548.141 li
432.832 547.328 433.585 546.711 434.527 546.711 cv
435.28 546.711 435.89 547.027 436.259 547.479 cv
436.478 547.019 li
ef
RPTEAG+HelveticaNeue-Light*1 [7.00014 0 0 -7.00014 0 0 ]msf
436.504 551.486 mo
(, Canarias: 300)
[1.6221 1.72522 4.60413 3.30911 3.43518 3.30911 1.88113 .9711 3.30911 3.04315 1.6221 1.72522 
3.56815 3.56815 0 ]xsh
483.025 547.019 mo
482.618 546.537 481.865 546.236 481.149 546.236 cv
479.906 546.236 478.889 546.952 478.611 548.141 cv
477.986 548.141 li
477.76 548.616 li
478.52 548.616 li
478.513 548.714 478.513 548.782 478.513 548.857 cv
478.513 548.925 478.513 548.993 478.52 549.091 cv
477.986 549.091 li
477.76 549.565 li
478.611 549.565 li
478.889 550.755 479.906 551.486 481.112 551.486 cv
481.789 551.486 482.43 551.207 482.806 550.906 cv
482.806 550.266 li
482.43 550.718 481.827 551.012 481.149 551.012 cv
480.17 551.012 479.417 550.454 479.146 549.565 cv
481.827 549.565 li
482.053 549.091 li
479.04 549.091 li
479.033 549.008 479.025 548.94 479.025 548.865 cv
479.025 548.789 479.033 548.714 479.04 548.616 cv
482.271 548.616 li
482.498 548.141 li
479.146 548.141 li
479.379 547.328 480.132 546.711 481.074 546.711 cv
481.827 546.711 482.438 547.027 482.806 547.479 cv
483.025 547.019 li
ef
RPTEAG+HelveticaNeue-Light*1 [7.00014 0 0 -7.00014 0 0 ]msf
483.051 551.486 mo
(, Ceuta: 324)
[1.6221 1.72522 4.60413 3.30911 3.43518 1.74814 3.30914 1.6221 1.72522 3.56815 3.56812 0 
]xsh
522.117 547.019 mo
521.71 546.537 520.957 546.236 520.241 546.236 cv
518.998 546.236 517.982 546.952 517.703 548.141 cv
517.078 548.141 li
516.852 548.616 li
517.612 548.616 li
517.605 548.714 517.605 548.782 517.605 548.857 cv
517.605 548.925 517.605 548.993 517.612 549.091 cv
517.078 549.091 li
516.852 549.565 li
517.703 549.565 li
517.982 550.755 518.998 551.486 520.204 551.486 cv
520.882 551.486 521.522 551.207 521.898 550.906 cv
521.898 550.266 li
521.522 550.718 520.919 551.012 520.241 551.012 cv
519.262 551.012 518.509 550.454 518.238 549.565 cv
520.919 549.565 li
521.145 549.091 li
518.132 549.091 li
518.125 549.008 518.117 548.94 518.117 548.865 cv
518.117 548.789 518.125 548.714 518.132 548.616 cv
521.364 548.616 li
521.59 548.141 li
518.238 548.141 li
518.471 547.328 519.225 546.711 520.166 546.711 cv
520.919 546.711 521.529 547.027 521.898 547.479 cv
522.117 547.019 li
ef
RPTEAG+HelveticaNeue-Light*1 [7.00014 0 0 -7.00014 0 0 ]msf
522.143 551.486 mo
(,)sh
92.435 558.186 mo
(Melilla: 312)
[5.48129 3.28327 .945221 .945229 .945229 .945221 3.28328 1.59625 1.59626 3.54229 3.5423 0 
]xsh
127.346 553.72 mo
126.939 553.237 126.186 552.936 125.47 552.936 cv
124.227 552.936 123.21 553.652 122.931 554.842 cv
122.306 554.842 li
122.08 555.316 li
122.841 555.316 li
122.834 555.414 122.834 555.482 122.834 555.557 cv
122.834 555.625 122.834 555.693 122.841 555.791 cv
122.306 555.791 li
122.08 556.266 li
122.931 556.266 li
123.21 557.455 124.227 558.186 125.432 558.186 cv
126.11 558.186 126.75 557.907 127.127 557.606 cv
127.127 556.966 li
126.75 557.418 126.148 557.712 125.47 557.712 cv
124.491 557.712 123.738 557.154 123.466 556.266 cv
126.148 556.266 li
126.374 555.791 li
123.361 555.791 li
123.353 555.708 123.346 555.64 123.346 555.565 cv
123.346 555.489 123.353 555.414 123.361 555.316 cv
126.592 555.316 li
126.818 554.842 li
123.466 554.842 li
123.7 554.028 124.453 553.411 125.395 553.411 cv
126.148 553.411 126.758 553.727 127.127 554.179 cv
127.346 553.72 li
ef
RPTEAG+HelveticaNeue-Light*1 [7.00014 0 0 -7.00014 0 0 ]msf
127.345 558.186 mo
(\))sh
71.1747 564.886 mo
(En el caso de que el Cliente haya adquirido un CP en tarifa de datos como consecuencia de un beneficio relacionado con descuent)
[3.77922 3.38721 1.55206 3.26118 .923126 1.55206 3.26118 3.26117 2.99521 3.5202 1.55206 3.64624 
3.26118 1.55206 3.64623 3.38722 3.26117 1.55206 3.26117 .923134 1.55206 4.55618 .923141 .923126 
3.26117 3.38721 1.70021 3.26117 1.55205 3.38722 3.26118 2.86917 3.26117 1.55206 3.26117 3.64624 
3.64624 3.38721 .923126 1.83319 .923126 3.64624 3.52019 1.55205 3.38721 3.38721 1.55206 4.55618 
4.03824 1.55205 3.26117 3.38721 1.55206 1.7002 3.26117 1.83318 .923111 1.44118 3.26117 1.55205 
3.64624 3.26117 1.55205 3.64624 3.26115 1.7002 3.5202 2.99519 1.55206 3.26117 3.52017 5.4592 
3.52017 1.55206 3.26117 3.5202 3.38721 2.99518 3.26117 3.26117 3.38721 3.26117 3.38724 3.2612 
.923096 3.2612 1.55206 3.64624 3.2612 1.55203 3.38724 3.38721 1.55206 3.64624 3.26117 3.38721 
3.26123 1.44116 .923157 3.26117 .923157 3.5202 1.552 1.83319 3.26123 .923096 3.26117 3.26123 
.923096 3.5202 3.38727 3.26117 3.64624 3.5202 1.55206 3.26117 3.5202 3.38721 1.55206 3.64624 
3.26117 2.99524 3.26117 3.38721 3.26123 3.38721 0 ]xsh
419.241 564.886 mo
(os asociados a tarifas, le ser\207 asimismo)
[3.5202 2.99524 1.55206 3.26117 2.99518 3.5202 3.26123 .923096 3.26123 3.64624 3.5202 2.99518 
1.55206 3.26117 1.55206 1.7002 3.26123 1.83319 .923096 1.44122 3.26117 2.99518 1.57422 1.552 
.923157 3.26117 1.55206 2.99524 3.26117 1.83319 3.26117 1.55206 3.26117 2.99524 .923096 5.45923 
.923157 2.99518 5.45923 0 ]xsh
71.1747 571.586 mo
(de aplicaci\227n lo dispuesto en el presente apartado b.3.)
[3.66833 3.28326 1.59626 3.28326 3.66833 .945221 .945229 3.28326 3.28327 3.28326 .945229 3.54229 
3.40931 1.59625 .945221 3.5423 1.59625 3.66833 .945221 3.0173 3.66833 3.40931 3.28328 3.0173 
1.72229 3.5423 1.59625 3.28328 3.40932 1.59625 3.28326 .945236 1.59625 3.66833 1.85527 3.28328 
3.01732 3.28326 3.4093 1.72231 3.28328 1.59625 3.28326 3.66833 3.28326 1.85526 1.72229 3.28326 
3.66833 3.5423 1.59625 3.66832 1.59625 3.54228 0 ]xsh
%ADOBeginSubsetFont: HIBBAA+HelveticaNeue-Roman AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
RPTEAH+HelveticaNeue-Roman dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/quotedblleft <1C60D8A8C9B71131DFA7C515CFB85D196BCA86D038625D55B
383AC0EC935CA38251DF534D0B97E6D75AA9D6D5E68C42EF77FE84619FC83C7A
93A038882C4B92A63BFE7C10D08235635434751574AAF933C2F> |-
/quotedblright <1C60D8A8C9B71131DFA7C515CFB85D196BCA86A1227DB640
2B5698D1351BFDD9084BCC45AE298C830869C2E9DABADDAE7061AFF7F9E59E2E
A507BE64D1B1823117881B7F3F9A379DEA2BBBDBDC989F347DFE> |-
/Aacute <1C60D8A8C9B67DB5F4521B3BF37E772ED849F49A> |-
systemdict /gcheck known {setglobal} if end {end} if
end
RPTEAH+HelveticaNeue-Roman /Encoding get
dup 210 /quotedblleft put
dup 211 /quotedblright put
dup 231 /Aacute put
pop
%ADOEndSubsetFont
/RPTEAH+HelveticaNeue-Roman*1 
[32{/.notdef}rp /space 11{/.notdef}rp /comma /hyphen /period 2{/.notdef}rp /one 
/two /three /four /five 11{/.notdef}rp /A /B /C 
/D /E /.notdef /G /.notdef /I 2{/.notdef}rp /L 
/M /N /O /P /.notdef /R /S /T 
/U 11{/.notdef}rp /a /b /c /d /e /f 
/g /.notdef /i 2{/.notdef}rp /l /m /n /o 
/p /.notdef /r /s /t /.notdef /v 3{/.notdef}rp 
/z 28{/.notdef}rp /oacute 7{/.notdef}rp /udieresis 50{/.notdef}rp /quotedblleft /quotedblright 
19{/.notdef}rp /Aacute 24{/.notdef}rp]
RPTEAH+HelveticaNeue-Roman nf
RPTEAH+HelveticaNeue-Roman*1 [7.00014 0 0 -7.00014 0 0 ]msf
71.1747 584.986 mo
(C- COMPROMISOS DE PERMANENCIA ASOCIADOS AL ALTA EN \322CONTRATO B\347SICO DE ORANGE\323)
[4.70429 2.3733 1.59622 4.70429 4.97025 5.74733 4.18625 4.44527 4.97026 5.74732 1.46324 4.18624 
4.97026 4.18625 1.59622 4.57826 3.92723 1.59622 4.18625 3.92722 4.44528 5.74733 4.18625 4.7043 
3.92722 4.70428 4.7043 1.46324 4.18625 1.59622 4.18625 4.18623 4.97026 4.70428 1.46324 4.18623 
4.57825 4.97026 4.18623 1.59622 4.18625 3.54227 1.59622 4.18623 3.54227 3.6683 4.18623 1.59622 
3.92722 4.70428 1.59625 2.6322 4.70428 4.97025 4.70428 3.6683 4.44525 4.18625 3.6683 4.97028 
1.59619 4.44528 4.18625 4.18622 1.46326 4.70428 4.97028 1.59619 4.57825 3.92725 1.59619 4.97028 
4.44525 4.18622 4.70435 4.96326 3.92725 0 ]xsh
71.1747 591.686 mo
(c.1. )
[3.45776 1.64471 3.59074 1.64471 0 ]xsh
RPTEAG+HelveticaNeue-Light*1 [7.00014 0 0 -7.00014 0 0 ]msf
83.3489 591.686 mo
(En ocasi\227n de la contrataci\227n del Servicio M\227vil Postpago Residencial de Orange en su modalidad de \322Contrato B\207sico de Orange\323,)
[3.84973 3.45772 1.83788 3.59071 3.33168 3.33168 3.06572 .993637 3.5907 3.45773 1.83787 3.71675 
3.33168 1.83788 .993637 3.33168 1.83788 3.33168 3.5907 3.45772 1.77072 1.90369 3.3317 1.77069 
3.3317 3.3317 .993622 3.59071 3.45772 1.83789 3.71674 3.3317 .993622 1.83789 4.10873 3.3317 
1.90369 2.93968 .993637 3.3317 .993637 3.59071 1.83786 5.52969 3.5907 2.93967 .993652 .993622 
1.83789 4.10873 3.5907 3.06573 1.77069 3.71674 3.3317 3.5907 3.5907 1.83786 4.3678 3.33167 
3.0657 .993652 3.71674 3.33167 3.45773 3.33167 .993652 3.33167 .993622 1.83789 3.71674 3.3317 
1.83786 4.88571 1.90369 3.33167 3.45773 3.5907 3.3317 1.83786 3.33167 3.45773 1.83786 3.0657 
3.45773 1.83786 5.52969 3.5907 3.71674 3.3317 .993622 .993652 3.71674 3.33167 3.71674 1.83789 
3.71674 3.33167 1.83786 2.28864 4.62671 3.5907 3.4577 1.77072 1.90369 3.33167 1.77072 3.5907 
1.83786 4.36777 3.33167 3.06573 .993622 3.33167 3.59073 1.83786 3.71674 3.33167 1.83786 4.88571 
1.90369 3.3317 3.4577 3.5907 3.3317 2.28864 0 ]xsh
446.465 591.686 mo
( el Cliente se compromete a)
[1.83786 3.3317 .993622 1.83786 4.62671 .993622 .993652 3.33167 3.4577 1.77072 3.33167 1.83786 
3.06573 3.33167 1.83786 3.3317 3.5907 5.52969 3.71674 1.90369 3.5907 5.52969 3.33163 1.77075 
3.33167 1.83783 0 ]xsh
71.1747 598.386 mo
(permanecer de alta en el indicado Contrato B\207sico durante un periodo de 12 meses.  En caso de incumplimiento, el Cliente deber\207)
[3.73594 3.35088 1.92288 5.54889 3.35088 3.47692 3.35088 3.35088 3.35088 1.92288 1.93398 3.73594 
3.35088 1.93396 3.35088 1.01284 1.7899 3.35088 1.93396 3.35088 3.47693 1.93396 3.35089 1.01282 
1.93398 1.01283 3.47693 3.73593 1.01283 3.35088 3.35089 3.73593 3.60989 1.93398 4.64589 3.60989 
3.47693 1.7899 1.92288 3.35088 1.78992 3.60989 1.93396 4.38698 3.35088 3.08492 1.01283 3.35088 
3.60991 1.93396 3.73595 3.47691 1.92288 3.35088 3.47693 1.7899 3.35088 1.93398 3.47691 3.47691 
1.93398 3.73593 3.35088 1.9229 1.01283 3.60989 3.73593 3.60992 1.93396 3.73596 3.35086 1.93396 
3.60989 3.60992 1.93396 5.54889 3.35089 3.0849 3.35089 3.0849 1.66388 1.93396 1.93396 3.86893 
3.4769 1.93396 3.35089 3.35089 3.0849 3.60992 1.93396 3.73596 3.35083 1.93396 1.01288 3.47693 
3.35083 3.47693 5.54889 3.73596 1.01282 1.01282 5.54889 1.01288 3.35083 3.47693 1.78992 3.60992 
1.66382 1.93402 3.35083 1.01288 1.93396 4.64587 1.01282 1.01288 3.35083 3.47693 1.78992 3.35089 
1.93396 3.7359 3.35089 3.73596 3.35089 1.92285 0 ]xsh
436.001 598.386 mo
( abonar los siguientes importes:)
[1.93396 3.35089 3.73596 3.60986 3.47693 3.35089 1.92285 1.93402 1.01282 3.60986 3.08496 1.93396 
3.0849 1.01282 3.60992 3.47693 1.01282 3.35089 3.47693 1.78986 3.35089 3.0849 1.93402 1.01282 
5.54889 3.7359 3.60992 1.92291 1.78986 3.35089 3.0849 0 ]xsh
86.1747 605.086 mo
(\245)sh
93.1747 605.086 mo
(Si el Cliente ha cumplido menos de 6 meses de CP, deber\207 abonar a Orange la cantidad de 30)
[4.08556 .970444 1.72218 3.30849 .970444 1.72218 4.60349 .970444 .970444 3.30849 3.43452 1.74751 
3.30849 1.72218 3.43452 3.30849 1.72217 3.30849 3.43452 5.5065 3.69356 .970428 .970459 3.69354 
3.5675 1.72217 5.5065 3.3085 3.43451 3.56752 3.04253 1.72217 3.69354 3.3085 1.72217 3.5675 
1.72218 5.5065 3.30849 3.04253 3.30849 3.04251 1.72217 3.69356 3.30849 1.72217 4.6035 4.08556 
1.62148 1.72217 3.69354 3.30849 3.69356 3.30849 1.88049 3.30849 1.72218 3.30847 3.69354 3.5675 
3.43454 3.3085 1.88049 1.72217 3.30847 1.72217 4.86252 1.88049 3.3085 3.43451 3.5675 3.3085 
1.72217 .970428 3.3085 1.72217 3.3085 3.30847 3.43454 1.74753 .970459 3.69354 3.3085 3.69357 
1.72217 3.69357 3.3085 1.72217 3.56754 0 ]xsh
357.866 600.62 mo
357.459 600.138 356.706 599.837 355.991 599.837 cv
354.748 599.837 353.731 600.552 353.452 601.743 cv
352.827 601.743 li
352.601 602.217 li
353.362 602.217 li
353.354 602.315 353.354 602.383 353.354 602.458 cv
353.354 602.526 353.354 602.594 353.362 602.692 cv
352.827 602.692 li
352.601 603.166 li
353.452 603.166 li
353.731 604.356 354.748 605.087 355.953 605.087 cv
356.631 605.087 357.271 604.809 357.648 604.507 cv
357.648 603.867 li
357.271 604.319 356.668 604.612 355.991 604.612 cv
355.011 604.612 354.258 604.055 353.987 603.166 cv
356.668 603.166 li
356.895 602.692 li
353.881 602.692 li
353.874 602.609 353.866 602.541 353.866 602.466 cv
353.866 602.391 353.874 602.315 353.881 602.217 cv
357.113 602.217 li
357.339 601.743 li
353.987 601.743 li
354.22 600.929 354.974 600.312 355.915 600.312 cv
356.668 600.312 357.279 600.628 357.648 601.08 cv
357.866 600.62 li
ef
RPTEAG+HelveticaNeue-Light*1 [7.00014 0 0 -7.00014 0 0 ]msf
357.891 605.087 mo
( i.i.no.i. \(Pen\222nsula y Baleares: 35,40)
[1.72217 .970459 1.62146 .970459 1.62149 3.43451 3.56754 1.62146 .970459 1.62146 1.7222 1.36246 
4.08554 3.3085 3.43451 .970459 3.43454 3.04251 3.43454 .970428 3.3085 1.72217 2.9165 1.72217 
4.34457 3.3085 .970459 3.30847 3.3085 1.88049 3.3085 3.04251 1.62149 1.7222 3.5675 3.5675 
1.62149 3.5675 0 ]xsh
459.408 600.62 mo
459.002 600.138 458.248 599.837 457.532 599.837 cv
456.29 599.837 455.273 600.552 454.994 601.743 cv
454.369 601.743 li
454.143 602.217 li
454.904 602.217 li
454.896 602.315 454.896 602.383 454.896 602.458 cv
454.896 602.526 454.896 602.594 454.904 602.692 cv
454.369 602.692 li
454.143 603.166 li
454.994 603.166 li
455.273 604.356 456.29 605.087 457.495 605.087 cv
458.173 605.087 458.813 604.809 459.19 604.507 cv
459.19 603.867 li
458.813 604.319 458.211 604.612 457.532 604.612 cv
456.554 604.612 455.8 604.055 455.529 603.166 cv
458.211 603.166 li
458.437 602.692 li
455.423 602.692 li
455.416 602.609 455.408 602.541 455.408 602.466 cv
455.408 602.391 455.416 602.315 455.423 602.217 cv
458.655 602.217 li
458.881 601.743 li
455.529 601.743 li
455.762 600.929 456.516 600.312 457.457 600.312 cv
458.211 600.312 458.821 600.628 459.19 601.08 cv
459.408 600.62 li
ef
RPTEAG+HelveticaNeue-Light*1 [7.00014 0 0 -7.00014 0 0 ]msf
459.434 605.087 mo
(, Canarias: 30)
[1.62152 1.7222 4.60352 3.30853 3.43457 3.3085 1.88055 .970459 3.30853 3.04254 1.62152 1.7222 
3.56757 0 ]xsh
502.374 600.62 mo
501.967 600.138 501.214 599.837 500.498 599.837 cv
499.255 599.837 498.239 600.552 497.96 601.743 cv
497.335 601.743 li
497.109 602.217 li
497.87 602.217 li
497.862 602.315 497.862 602.383 497.862 602.458 cv
497.862 602.526 497.862 602.594 497.87 602.692 cv
497.335 602.692 li
497.109 603.166 li
497.96 603.166 li
498.239 604.356 499.255 605.087 500.461 605.087 cv
501.139 605.087 501.779 604.809 502.155 604.507 cv
502.155 603.867 li
501.779 604.319 501.176 604.612 500.498 604.612 cv
499.519 604.612 498.766 604.055 498.495 603.166 cv
501.176 603.166 li
501.402 602.692 li
498.389 602.692 li
498.382 602.609 498.374 602.541 498.374 602.466 cv
498.374 602.391 498.382 602.315 498.389 602.217 cv
501.621 602.217 li
501.847 601.743 li
498.495 601.743 li
498.728 600.929 499.482 600.312 500.423 600.312 cv
501.176 600.312 501.786 600.628 502.155 601.08 cv
502.374 600.62 li
ef
RPTEAG+HelveticaNeue-Light*1 [7.00014 0 0 -7.00014 0 0 ]msf
502.399 605.087 mo
(, Ceuta:)
[1.62149 1.7222 4.60355 3.3085 3.43457 1.7475 3.30853 0 ]xsh
93.676 611.787 mo
(32,40)
[3.54236 3.54236 1.59633 3.54236 0 ]xsh
114.705 607.32 mo
114.298 606.838 113.545 606.537 112.829 606.537 cv
111.586 606.537 110.569 607.253 110.291 608.443 cv
109.665 608.443 li
109.439 608.917 li
110.2 608.917 li
110.193 609.015 110.193 609.083 110.193 609.158 cv
110.193 609.226 110.193 609.294 110.2 609.392 cv
109.665 609.392 li
109.439 609.866 li
110.291 609.866 li
110.569 611.057 111.586 611.787 112.791 611.787 cv
113.469 611.787 114.109 611.509 114.486 611.207 cv
114.486 610.567 li
114.109 611.019 113.507 611.313 112.829 611.313 cv
111.85 611.313 111.096 610.755 110.825 609.866 cv
113.507 609.866 li
113.733 609.392 li
110.72 609.392 li
110.712 609.309 110.705 609.241 110.705 609.166 cv
110.705 609.091 110.712 609.015 110.72 608.917 cv
113.951 608.917 li
114.177 608.443 li
110.825 608.443 li
111.059 607.629 111.812 607.012 112.754 607.012 cv
113.507 607.012 114.117 607.328 114.486 607.78 cv
114.705 607.32 li
ef
RPTEAG+HelveticaNeue-Light*1 [7.00014 0 0 -7.00014 0 0 ]msf
114.705 611.787 mo
(, Melilla: 31,20)
[1.59628 1.59628 5.48131 3.28329 .945251 .945259 .945236 .945251 3.28329 1.59628 1.59628 3.54231 
3.54233 1.59628 3.54231 0 ]xsh
157.945 607.32 mo
157.539 606.838 156.785 606.537 156.07 606.537 cv
154.827 606.537 153.81 607.253 153.531 608.443 cv
152.906 608.443 li
152.68 608.917 li
153.441 608.917 li
153.433 609.015 153.433 609.083 153.433 609.158 cv
153.433 609.226 153.433 609.294 153.441 609.392 cv
152.906 609.392 li
152.68 609.866 li
153.531 609.866 li
153.81 611.057 154.827 611.787 156.032 611.787 cv
156.71 611.787 157.35 611.509 157.727 611.207 cv
157.727 610.567 li
157.35 611.019 156.748 611.313 156.07 611.313 cv
155.091 611.313 154.337 610.755 154.066 609.866 cv
156.748 609.866 li
156.973 609.392 li
153.961 609.392 li
153.953 609.309 153.945 609.241 153.945 609.166 cv
153.945 609.091 153.953 609.015 153.961 608.917 cv
157.192 608.917 li
157.418 608.443 li
154.066 608.443 li
154.3 607.629 155.053 607.012 155.994 607.012 cv
156.748 607.012 157.358 607.328 157.727 607.78 cv
157.945 607.32 li
ef
RPTEAG+HelveticaNeue-Light*1 [7.00014 0 0 -7.00014 0 0 ]msf
157.945 611.787 mo
(\))sh
86.1747 618.487 mo
(\245)sh
92.4349 618.487 mo
(Si el Cliente ha cumplido entre 6 y 12 meses, deber\207 abonar 60)
[4.15616 1.04104 2.07528 3.37909 1.04104 2.07528 4.6741 1.04105 1.04104 3.37909 3.50513 1.81811 
3.37909 2.07528 3.50513 3.37909 2.07527 3.37909 3.50513 5.57709 3.76414 1.04105 1.04105 3.76413 
3.63812 2.07527 3.37907 3.50513 1.81812 1.95108 3.37909 2.07529 3.63809 2.07529 2.98708 2.07527 
3.63811 3.63811 2.07529 5.57709 3.37909 3.11313 3.37909 3.11313 1.69208 2.07529 3.76416 3.37909 
3.76413 3.37909 1.95111 3.37909 2.07529 3.37909 3.76416 3.63809 3.50513 3.37912 1.95108 2.07529 
3.63812 0 ]xsh
278.333 614.021 mo
277.926 613.538 277.173 613.237 276.457 613.237 cv
275.214 613.237 274.198 613.953 273.919 615.143 cv
273.293 615.143 li
273.068 615.618 li
273.828 615.618 li
273.821 615.715 273.821 615.783 273.821 615.859 cv
273.821 615.926 273.821 615.994 273.828 616.092 cv
273.293 616.092 li
273.068 616.567 li
273.919 616.567 li
274.198 617.757 275.214 618.487 276.42 618.487 cv
277.098 618.487 277.738 618.209 278.114 617.907 cv
278.114 617.267 li
277.738 617.719 277.135 618.013 276.457 618.013 cv
275.478 618.013 274.725 617.455 274.454 616.567 cv
277.135 616.567 li
277.361 616.092 li
274.348 616.092 li
274.341 616.009 274.333 615.941 274.333 615.866 cv
274.333 615.791 274.341 615.715 274.348 615.618 cv
277.58 615.618 li
277.805 615.143 li
274.454 615.143 li
274.687 614.329 275.44 613.712 276.382 613.712 cv
277.135 613.712 277.745 614.028 278.114 614.48 cv
278.333 614.021 li
ef
RPTEAG+HelveticaNeue-Light*1 [7.00014 0 0 -7.00014 0 0 ]msf
278.429 618.487 mo
( i.i.no.i. \(Pen\222nsula y Baleares: 70,80)
[2.07529 1.04105 1.69208 1.04105 1.69208 3.50513 3.63812 1.69208 1.04105 1.69208 2.07529 1.43307 
4.15616 3.37909 3.50513 1.04105 3.50516 3.1131 3.50516 1.04105 3.37909 2.07529 2.98709 2.07529 
4.41519 3.37909 1.04102 3.37912 3.37909 1.95108 3.37909 3.11313 1.69208 2.07529 3.63812 3.63812 
1.69208 3.63809 0 ]xsh
384.113 614.021 mo
383.707 613.538 382.953 613.237 382.238 613.237 cv
380.995 613.237 379.978 613.953 379.699 615.143 cv
379.074 615.143 li
378.848 615.618 li
379.609 615.618 li
379.601 615.715 379.601 615.783 379.601 615.859 cv
379.601 615.926 379.601 615.994 379.609 616.092 cv
379.074 616.092 li
378.848 616.567 li
379.699 616.567 li
379.978 617.757 380.995 618.487 382.2 618.487 cv
382.878 618.487 383.518 618.209 383.895 617.907 cv
383.895 617.267 li
383.518 617.719 382.916 618.013 382.238 618.013 cv
381.259 618.013 380.505 617.455 380.234 616.567 cv
382.916 616.567 li
383.142 616.092 li
380.129 616.092 li
380.121 616.009 380.114 615.941 380.114 615.866 cv
380.114 615.791 380.121 615.715 380.129 615.618 cv
383.36 615.618 li
383.586 615.143 li
380.234 615.143 li
380.468 614.329 381.221 613.712 382.162 613.712 cv
382.916 613.712 383.526 614.028 383.895 614.48 cv
384.113 614.021 li
ef
RPTEAG+HelveticaNeue-Light*1 [7.00014 0 0 -7.00014 0 0 ]msf
384.209 618.487 mo
(, Canarias: 60)
[1.69211 2.07532 4.67413 3.37912 3.50516 3.37912 1.95114 1.04108 3.37912 3.11316 1.69211 2.07532 
3.63815 0 ]xsh
428.703 614.021 mo
428.296 613.538 427.543 613.237 426.827 613.237 cv
425.584 613.237 424.568 613.953 424.289 615.143 cv
423.664 615.143 li
423.438 615.618 li
424.198 615.618 li
424.191 615.715 424.191 615.783 424.191 615.859 cv
424.191 615.926 424.191 615.994 424.198 616.092 cv
423.664 616.092 li
423.438 616.567 li
424.289 616.567 li
424.568 617.757 425.584 618.487 426.79 618.487 cv
427.468 618.487 428.108 618.209 428.484 617.907 cv
428.484 617.267 li
428.108 617.719 427.505 618.013 426.827 618.013 cv
425.848 618.013 425.095 617.455 424.824 616.567 cv
427.505 616.567 li
427.731 616.092 li
424.718 616.092 li
424.711 616.009 424.703 615.941 424.703 615.866 cv
424.703 615.791 424.711 615.715 424.718 615.618 cv
427.95 615.618 li
428.176 615.143 li
424.824 615.143 li
425.057 614.329 425.811 613.712 426.752 613.712 cv
427.505 613.712 428.116 614.028 428.484 614.48 cv
428.703 614.021 li
ef
RPTEAG+HelveticaNeue-Light*1 [7.00014 0 0 -7.00014 0 0 ]msf
428.799 618.487 mo
(, Ceuta: 64,80)
[1.69211 2.07532 4.67416 3.37912 3.50516 1.81815 3.37915 1.69211 2.07532 3.63815 3.63815 1.69211 
3.63815 0 ]xsh
474.596 614.021 mo
474.189 613.538 473.436 613.237 472.72 613.237 cv
471.477 613.237 470.46 613.953 470.181 615.143 cv
469.556 615.143 li
469.33 615.618 li
470.091 615.618 li
470.084 615.715 470.084 615.783 470.084 615.859 cv
470.084 615.926 470.084 615.994 470.091 616.092 cv
469.556 616.092 li
469.33 616.567 li
470.181 616.567 li
470.46 617.757 471.477 618.487 472.682 618.487 cv
473.36 618.487 474 618.209 474.377 617.907 cv
474.377 617.267 li
474 617.719 473.398 618.013 472.72 618.013 cv
471.741 618.013 470.988 617.455 470.716 616.567 cv
473.398 616.567 li
473.624 616.092 li
470.611 616.092 li
470.604 616.009 470.596 615.941 470.596 615.866 cv
470.596 615.791 470.604 615.715 470.611 615.618 cv
473.842 615.618 li
474.068 615.143 li
470.716 615.143 li
470.95 614.329 471.703 613.712 472.645 613.712 cv
473.398 613.712 474.008 614.028 474.377 614.48 cv
474.596 614.021 li
ef
RPTEAG+HelveticaNeue-Light*1 [7.00014 0 0 -7.00014 0 0 ]msf
474.691 618.487 mo
(, Melilla: 62,4 0)
[1.69208 2.07532 5.57709 3.37912 1.04105 1.04108 1.04105 1.04105 3.37912 1.69208 2.07529 3.63812 
3.63815 1.69208 3.63812 2.07532 0 ]xsh
522.307 614.021 mo
521.9 613.538 521.146 613.237 520.431 613.237 cv
519.188 613.237 518.171 613.953 517.892 615.143 cv
517.267 615.143 li
517.041 615.618 li
517.802 615.618 li
517.795 615.715 517.795 615.783 517.795 615.859 cv
517.795 615.926 517.795 615.994 517.802 616.092 cv
517.267 616.092 li
517.041 616.567 li
517.892 616.567 li
518.171 617.757 519.188 618.487 520.393 618.487 cv
521.071 618.487 521.711 618.209 522.088 617.907 cv
522.088 617.267 li
521.711 617.719 521.109 618.013 520.431 618.013 cv
519.452 618.013 518.698 617.455 518.427 616.567 cv
521.109 616.567 li
521.335 616.092 li
518.321 616.092 li
518.314 616.009 518.307 615.941 518.307 615.866 cv
518.307 615.791 518.314 615.715 518.321 615.618 cv
521.553 615.618 li
521.779 615.143 li
518.427 615.143 li
518.661 614.329 519.414 613.712 520.355 613.712 cv
521.109 613.712 521.719 614.028 522.088 614.48 cv
522.307 614.021 li
ef
%ADOBeginSubsetFont: HIBBAA+HelveticaNeue-Light AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
RPTEAG+HelveticaNeue-Light dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/hyphen <1C60D8A8C9B7299ABB739836B45CCF84178EE4F9F243B3E8A552832
D857B> |-
/D <1C60D8A8C9B620B78F9E1EA23627969B38E7B2E3ABFE0BBFEF8915EB25C9
188616128E5305946CFA6D49202EF7CD57CA7FED657903D12B45D5E18E3077B8
DDDEAC50985C911FF26614CDE099092C0CF8E99757F51B> |-
systemdict /gcheck known {setglobal} if end {end} if
end
RPTEAG+HelveticaNeue-Light /Encoding get
dup 45 /hyphen put
dup 68 /D put
pop
%ADOEndSubsetFont
/RPTEAG+HelveticaNeue-Light*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen 
/period /slash /zero /one /two /three /four /five 
/six /seven /eight /nine /colon 6{/.notdef}rp /A /B 
/C /D /E /F /G /.notdef /I 2{/.notdef}rp 
/L /M /N /O /P /.notdef /R /S 
/T 12{/.notdef}rp /a /b /c /d /e /f 
/g /h /i /j /.notdef /l /m /n 
/o /p /q /r /s /t /u /v 
/.notdef /x /y /z 12{/.notdef}rp /aacute 6{/.notdef}rp /eacute 
3{/.notdef}rp /iacute 3{/.notdef}rp /ntilde /oacute 4{/.notdef}rp /uacute 2{/.notdef}rp 
/udieresis 5{/.notdef}rp /bullet 27{/.notdef}rp /exclamdown 16{/.notdef}rp /quotedblleft /quotedblright 
44{/.notdef}rp]
RPTEAG+HelveticaNeue-Light nf
RPTEAG+HelveticaNeue-Light*1 [7.00014 0 0 -7.00014 0 0 ]msf
522.402 618.487 mo
(\))sh
71.175 625.187 mo
(En este supuesto, la adquisici\227n posterior de un dispositivo m\227vil a precio promocional comportar\207 la baja autom\207tica en la mod)
[3.86002 3.46802 1.88966 3.34197 3.07601 1.781 3.34196 1.88966 3.07601 3.46801 3.72704 3.46802 
3.34196 3.076 1.78101 3.60099 1.65496 1.88966 1.00392 3.34198 1.88966 3.34196 3.72704 3.72704 
3.468 1.00394 3.07602 1.00391 3.34198 1.00394 3.60098 3.46802 1.88966 3.72704 3.601 3.076 
1.78101 3.34196 1.91399 1.00392 3.601 1.91397 1.88968 3.72702 3.34198 1.88966 3.46802 3.468 
1.88968 3.72704 1.00392 3.076 3.72704 3.601 3.076 1.00394 1.78099 1.00394 2.94997 3.601 
1.88966 5.53998 3.601 2.94997 1.00392 1.00394 1.88966 3.34198 1.88968 3.72702 1.91397 3.34198 
3.34198 1.00391 3.60101 1.88965 3.72705 1.914 3.60098 5.53998 3.60098 3.34198 1.00391 3.60098 
3.46799 3.34198 1.00391 1.88965 3.34198 3.60098 5.53995 3.72705 3.60098 1.91397 1.78098 3.34195 
1.91397 3.34195 1.88968 1.00391 3.34198 1.88965 3.72702 3.34198 1.00391 3.34195 1.88968 3.34195 
3.46802 1.78098 3.60098 5.53998 3.34195 1.78098 1.00394 3.34195 3.34195 1.88968 3.34195 3.46802 
1.88965 1.00391 3.34198 1.88965 5.53998 3.60098 0 ]xsh
425.711 625.187 mo
(alidad B\207sico de Orange, salvo que)
[3.34195 1.00394 1.00391 3.72702 3.34195 3.72705 1.88965 4.37805 3.34195 3.07602 1.00391 3.34195 
3.60098 1.88968 3.72702 3.34195 1.88968 4.896 1.91397 3.34195 3.46799 3.60098 3.34198 1.65494 
1.88965 3.07602 3.34195 1.00391 2.94995 3.60098 1.88965 3.72705 3.46802 0 ]xsh
71.175 631.887 mo
(ORANGE establezca expresamente lo contrario.)
[4.83733 4.31939 4.06037 4.57831 4.83733 3.80135 1.59628 3.2833 3.01733 1.72232 3.28329 3.66837 
.945251 3.28329 2.8913 3.28329 3.28331 1.59628 3.28329 3.01733 3.66835 1.85532 3.28329 3.01733 
3.28329 5.48132 3.28329 3.40933 1.72232 3.28329 1.59628 .945267 3.54231 1.59628 3.28331 3.54231 
3.40935 1.72234 1.8553 3.28331 1.85532 .945251 3.54233 0 ]xsh
%ADOBeginSubsetFont: HIBBAA+HelveticaNeue-Roman AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
RPTEAH+HelveticaNeue-Roman dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/F <1C60D8A8C9B7FD84CD08F29CEBD0F7D55E27F85F482A186E366330702034
295D81E1D480988E3591EE38DEE4E9102A87277E> |-
/Udieresis <1C60D8A8C9B6079F1E219CBB66A3250D347F02FB> |-
systemdict /gcheck known {setglobal} if end {end} if
end
RPTEAH+HelveticaNeue-Roman /Encoding get
dup 70 /F put
dup 134 /Udieresis put
pop
%ADOEndSubsetFont
/RPTEAH+HelveticaNeue-Roman*1 
[32{/.notdef}rp /space 11{/.notdef}rp /comma /hyphen /period 2{/.notdef}rp /one 
/two /three /four /five 11{/.notdef}rp /A /B /C 
/D /E /F /G /.notdef /I 2{/.notdef}rp /L 
/M /N /O /P /.notdef /R /S /T 
/U 11{/.notdef}rp /a /b /c /d /e /f 
/g /.notdef /i 2{/.notdef}rp /l /m /n /o 
/p /.notdef /r /s /t /.notdef /v 3{/.notdef}rp 
/z 11{/.notdef}rp /Udieresis 16{/.notdef}rp /oacute 7{/.notdef}rp /udieresis 50{/.notdef}rp 
/quotedblleft /quotedblright 19{/.notdef}rp /Aacute 24{/.notdef}rp]
RPTEAH+HelveticaNeue-Roman nf
RPTEAH+HelveticaNeue-Roman*1 [7.00014 0 0 -7.00014 0 0 ]msf
71.175 638.588 mo
(c.2. )
[3.36126 1.5482 3.49425 1.5482 0 ]xsh
RPTEAG+HelveticaNeue-Light*1 [7.00014 0 0 -7.00014 0 0 ]msf
82.6258 638.588 mo
(En caso de que el Cliente solicite un cambio de tarifa a otra tarifa postpago  antes de cumplir el CP, no deber\207 abonar cargo a)
[3.75323 3.36121 1.50006 3.23518 3.23518 2.96922 3.4942 1.50006 3.62024 3.23518 1.50006 3.62024 
3.36121 3.23518 1.50006 3.23518 .897125 1.50006 4.53018 .897125 .897141 3.23518 3.36121 1.67421 
3.23518 1.50006 2.96921 3.4942 .897141 .897141 3.23517 .897141 1.67421 3.23517 1.50006 3.36124 
3.36121 1.50006 3.23518 3.23518 5.4332 3.62024 .897125 3.4942 1.50006 3.62024 3.23517 1.50006 
1.67419 3.23517 1.80719 .897125 1.41516 3.2352 1.50006 3.23517 1.50006 3.4942 1.67419 1.80719 
3.23517 1.50006 1.67419 3.23517 1.80719 .897125 1.41516 3.23517 1.50006 3.62024 3.4942 2.96921 
1.67419 3.62024 3.23517 3.4942 3.4942 1.50006 1.50006 3.23517 3.36121 1.67419 3.2352 2.96918 
1.50009 3.62021 3.2352 1.50006 3.23517 3.36121 5.4332 3.62021 .897156 .897125 1.80716 1.50006 
3.2352 .897125 1.50006 4.53018 4.01224 1.54816 1.50006 3.36121 3.4942 1.50006 3.62024 3.23517 
3.62024 3.23517 1.80719 3.23517 1.50006 3.23517 3.62024 3.4942 3.36121 3.23517 1.80719 1.50006 
3.23517 3.23517 1.80719 3.4942 3.4942 1.50006 0 ]xsh
411.245 638.588 mo
(lguno por incumplimiento del compromiso,)
[.897125 3.4942 3.36121 3.36121 3.4942 1.50006 3.62024 3.4942 1.80716 1.50009 .897125 3.36121 
3.23517 3.36121 5.4332 3.62024 .897125 .897125 5.43317 .897125 3.2352 3.36121 1.67419 3.4942 
1.50006 3.62024 3.23517 .897125 1.50006 3.23517 3.4942 5.43317 3.62024 1.80719 3.4942 5.43314 
.897156 2.96918 3.4942 0 ]xsh
71.175 645.288 mo
(en tanto en cuanto, se mantenga en el servicio postpago de ORANGE. En caso de que antes de haber cumplido el CP, el Cliente se )
[3.29868 3.42472 1.67307 1.73771 3.29868 3.42472 1.73771 3.55771 1.67307 3.29868 3.42472 1.67307 
3.29868 3.42472 3.29868 3.42473 1.7377 3.55771 1.61166 1.67307 3.03272 3.29868 1.67307 5.49669 
3.29869 3.42471 1.7377 3.29868 3.42471 3.55771 3.29868 1.67308 3.29868 3.42473 1.67307 3.29868 
.960632 1.67307 3.03271 3.29869 1.8707 2.90668 .960648 3.29868 .960648 3.55771 1.67307 3.68375 
3.55771 3.03273 1.7377 3.68375 3.29869 3.55771 3.55771 1.67307 3.68375 3.29869 1.67307 4.85272 
4.33478 4.07574 4.5937 4.85274 3.81671 1.61166 1.67307 3.81674 3.42471 1.67307 3.29868 3.29871 
3.03271 3.55771 1.67307 3.68375 3.29868 1.6731 3.68372 3.42471 3.29868 1.6731 3.29865 3.42471 
1.7377 3.29868 3.03268 1.6731 3.68375 3.29868 1.67307 3.42471 3.29868 3.68375 3.29865 1.8707 
1.67307 3.29868 3.42471 5.4967 3.68372 .960632 .960632 3.68375 3.55768 1.6731 3.29868 .960602 
1.6731 4.59369 4.07571 1.61166 1.6731 3.29868 .960602 1.6731 4.59369 .960602 .960632 3.29868 
3.42471 1.7377 3.29868 1.67307 3.03271 3.29868 0 ]xsh
430.17 645.288 mo
(diera de baja del servicio postpago)
[3.68375 .960632 3.29868 1.87067 3.29868 1.6731 3.68372 3.29868 1.67307 3.68375 3.29868 .960632 
3.29868 1.67307 3.68375 3.29868 .960632 1.67307 3.03271 3.29868 1.87067 2.90668 .960632 3.29868 
.960602 3.55771 1.67307 3.68375 3.55771 3.03268 1.7377 3.68372 3.29871 3.55768 0 ]xsh
71.175 651.988 mo
(de ORANGE, deber\207 abonar a ORANGE el cargo por incumplimiento del CP que le hubiera correspondido cuando dej\227 de beneficiarse d)
[3.66015 3.27509 1.57996 4.82912 4.31118 4.05215 4.5701 4.82912 3.79313 1.58807 1.57997 3.66014 
3.27509 3.66015 3.27509 1.84709 3.27509 1.57996 3.27509 3.66016 3.53412 3.40112 3.27509 1.84709 
1.57997 3.27509 1.57996 4.82913 4.31117 4.05217 4.57008 4.82912 3.79314 1.57997 3.27509 .937042 
1.57997 3.27507 3.27509 1.84709 3.5341 3.5341 1.57997 3.66014 3.5341 1.84709 1.57997 .937042 
3.40112 3.27507 3.40112 5.4731 3.66014 .937042 .937027 5.4731 .937027 3.27509 3.40112 1.71411 
3.53412 1.57996 3.66016 3.27509 .937012 1.57996 4.57013 4.05212 1.57999 3.66013 3.40112 3.27509 
1.57999 .937042 3.27509 1.57996 3.40112 3.40112 3.66019 .937042 3.27509 1.84711 3.27509 1.57996 
3.27512 3.53412 1.84708 1.84711 3.27512 3.00912 3.66016 3.53412 3.40112 3.66016 .937042 3.66016 
3.53412 1.57999 3.27509 3.40112 3.27509 3.40115 3.66016 3.53412 1.57996 3.66016 3.27509 .937042 
3.53412 1.57999 3.66016 3.27509 1.57996 3.66016 3.27509 3.40115 3.27509 1.45511 .937042 3.27509 
.937042 3.27512 1.84708 3.00916 3.27509 1.57996 0 ]xsh
438.588 651.988 mo
(el descuento asociado a B\207sico)
[3.27509 .937042 1.57999 3.66016 3.27509 3.00912 3.27509 3.40115 3.27509 3.40112 1.71414 3.53412 
1.57996 3.27509 3.00912 3.53412 3.27509 .937073 3.27509 3.66016 3.53412 1.57996 3.27509 1.57996 
4.31119 3.27509 3.00916 .937012 3.27515 0 ]xsh
71.175 658.689 mo
(de ORANGE.)
[3.66843 3.28336 1.59634 4.83739 4.31945 4.06043 4.57837 4.83739 3.80141 0 ]xsh
RPTEAH+HelveticaNeue-Roman*1 [7.00014 0 0 -7.00014 0 0 ]msf
71.175 672.089 mo
(D.- CONDICIONES PARTICULARES DE LA TARIFA PING\206INO)
[4.57825 1.59623 2.37331 1.59623 4.70429 4.97026 4.7043 4.57825 1.46325 4.70428 1.46326 4.97026 
4.70428 3.92723 4.18625 1.59623 4.18626 4.18625 4.44525 3.66832 1.46324 4.7043 4.7043 3.54227 
4.18625 4.44527 3.92723 4.18625 1.59622 4.57825 3.92725 1.59622 3.54228 4.18625 1.59624 3.66832 
4.18625 4.44528 1.46326 3.6683 4.18626 1.59624 4.18625 1.46326 4.7043 4.96332 4.7043 1.46326 
4.7043 0 ]xsh
71.175 678.789 mo
(d.1.)
[3.7423 1.53725 3.48328 0 ]xsh
RPTEAG+HelveticaNeue-Light*1 [7.00014 0 0 -7.00014 0 0 ]msf
81.4738 678.789 mo
( El Cliente del Servicio de Telefon\222a M\227vil Prepago de ORANGE cuyos datos quedan recogidos en el presente documento, contratand)
[1.47807 3.74222 .886139 1.47806 4.51919 .886131 .886139 3.22417 3.35022 1.66321 3.22417 1.47807 
3.60924 3.22418 .886131 1.47806 4.00124 3.22418 1.79619 2.83217 .886124 3.22418 .886139 3.4832 
1.47806 3.60924 3.22418 1.47806 3.4832 3.22418 .886124 3.22418 1.40417 3.48322 3.35022 .886124 
3.22417 1.47807 5.4222 3.48318 2.83218 .886124 .886124 1.47807 4.00124 1.7962 3.22417 3.60924 
3.2242 3.4832 3.48322 1.47806 3.60924 3.2242 1.47806 4.77821 4.26027 4.00125 4.5192 4.77821 
3.74223 1.47806 3.2242 3.35022 2.83217 3.48322 2.95822 1.47806 3.60925 3.22418 1.66321 3.48322 
2.95819 1.47809 3.60925 3.35022 3.22418 3.60925 3.22418 3.35022 1.47803 1.7962 3.22418 3.22418 
3.48315 3.48322 .886108 3.60925 3.48318 2.95822 1.47806 3.22415 3.35022 1.47806 3.22418 .886108 
1.47806 3.60925 1.79617 3.22418 2.95819 3.22418 3.35019 1.66321 3.22418 1.47806 3.60922 3.48318 
3.22418 3.35022 5.42218 3.22415 3.35022 1.66321 3.48318 1.53714 1.47806 3.22418 3.48318 3.35022 
1.66321 1.79617 3.22415 1.66321 3.22418 3.35019 0 ]xsh
431.205 678.789 mo
(o la Tarifa Ping\237ino se compromete)
[3.48318 1.47806 .886139 3.22415 1.47806 3.48322 3.22415 1.7962 .886108 1.40417 3.22418 1.47806 
4.00122 .886139 3.35022 3.48318 3.35022 .886108 3.35022 3.48318 1.47806 2.95822 3.22415 1.47806 
3.22418 3.48318 5.42218 3.60925 1.79617 3.48318 5.42218 3.22418 1.66315 0 ]xsh
71.175 685.489 mo
(a realizar una recarga mensual m\222nima que queda rese\226ada en el Anverso del presente documento \(en adelante, denominada Recarga )
[3.27168 1.57305 1.84368 3.27168 3.27167 .933632 .933624 2.87967 3.27168 1.84367 1.57306 3.39771 
3.39771 3.27167 1.57306 1.84369 3.27167 3.27167 3.27168 1.84367 3.5307 3.27167 1.57306 5.46968 
3.27167 3.39771 3.00571 3.39771 3.27167 .933624 1.57306 5.4697 .933624 3.39771 .933624 5.46967 
3.27167 1.57306 3.65674 3.39771 3.27168 1.57306 3.65674 3.39772 3.27167 3.65674 3.27168 1.57306 
1.84369 3.27167 3.00571 3.27168 3.39772 3.27167 3.65674 3.27168 1.57306 3.27167 3.39772 1.57306 
3.27167 .93364 1.57306 4.04874 3.39772 2.87968 3.27167 1.84369 3.00568 3.5307 1.57306 3.65674 
3.2717 .933624 1.57306 3.65674 1.84369 3.27167 3.00574 3.27167 3.39771 1.71069 3.27167 1.57306 
3.65674 3.5307 3.27167 3.39771 5.46973 3.27167 3.39771 1.71069 3.5307 1.57306 1.32562 3.27167 
3.39774 1.57303 3.2717 3.65674 3.27167 .933624 3.27167 3.39774 1.71069 3.27167 1.58466 1.57306 
3.65674 3.27167 3.39774 3.5307 5.46967 .933655 3.39771 3.27167 3.65674 3.27167 1.57306 4.30777 
3.27167 3.2717 3.27167 1.84369 3.5307 3.27167 0 ]xsh
432.124 685.489 mo
(Autom\207tica\) y autoriza a que dicha)
[4.04877 3.39771 1.71069 3.5307 5.4697 3.27167 1.71069 .933655 3.27167 3.27167 1.32565 1.57303 
2.87967 1.57306 3.27167 3.39771 1.71072 3.5307 1.84366 .933655 2.87967 3.27167 1.57303 3.2717 
1.57303 3.65674 3.39774 3.27167 1.57303 3.65677 .933594 3.27173 3.39771 0 ]xsh
71.175 692.189 mo
(Recarga Autom\207tica sea cargada mensualmente en la cuenta corriente que el Cliente ha facilitado, ello sin perjuicio del resto d)
[4.31657 3.28047 3.28047 3.28047 1.85248 3.5395 3.28047 1.59065 4.05754 3.40652 1.71949 3.5395 
5.47849 3.28046 1.7195 .942429 3.28047 3.28047 1.59066 3.0145 3.28049 3.28046 1.59067 3.28047 
3.28047 1.85248 3.53951 3.28047 3.66554 3.28047 1.59067 5.47849 3.28046 3.40652 3.01451 3.40651 
3.28047 .942429 5.47849 3.28047 3.40651 1.71951 3.28047 1.59065 3.28047 3.40652 1.59065 .942429 
3.28047 1.59065 3.28049 3.40651 3.28047 3.40651 1.71951 3.28047 1.59065 3.28047 3.53951 1.85248 
1.85248 .942429 3.28049 3.40651 1.71948 3.28049 1.59067 3.66553 3.40649 3.28052 1.59064 3.28046 
.942444 1.59064 4.5755 .942444 .942413 3.28049 3.40649 1.71951 3.28046 1.59067 3.40649 3.28046 
1.5907 1.46045 3.28046 3.28046 .942444 .942383 .942444 1.71948 3.28046 3.66553 3.53949 1.59344 
1.59067 3.28046 .942413 .942413 3.53949 1.59067 3.0145 .942413 3.40649 1.5907 3.6655 3.28049 
1.85245 .942413 3.40652 .942413 3.28046 .942413 3.53949 1.59067 3.66553 3.28046 .942413 1.59067 
1.85248 3.28046 3.0145 1.71948 3.53949 1.59067 0 ]xsh
406.038 692.189 mo
(e Recargas Adicionales que el cliente pueda)
[3.28046 1.59067 4.31656 3.28046 3.28046 3.28046 1.85248 3.53949 3.28046 3.0145 1.59067 4.05753 
3.66553 .942413 3.28046 .942444 3.53946 3.40652 3.28046 .942413 3.28046 3.0145 1.59067 3.66553 
3.40649 3.28046 1.59067 3.28049 .942413 1.59067 3.28046 .942413 .942413 3.28046 3.40649 1.71951 
3.28046 1.59067 3.66553 3.40646 3.28052 3.66553 0 ]xsh
71.175 698.889 mo
(realizar a trav\216s de los medios disponibles para el servicio prepago.)
[1.85529 3.28327 3.28328 .945229 .945236 2.89127 3.28328 1.85529 1.59626 3.28327 1.59627 1.72231 
1.85528 3.28328 2.89127 3.28327 3.01732 1.59625 3.66833 3.28328 1.59626 .945229 3.5423 3.01732 
1.59625 5.48129 3.28329 3.66833 .945221 3.54231 3.01732 1.59625 3.66833 .945251 3.0173 3.66833 
3.54231 3.40932 .945236 3.66833 .945236 3.28328 3.01732 1.59625 3.66833 3.28329 1.85529 3.28326 
1.59627 3.28328 .945236 1.59627 3.0173 3.28328 1.85529 2.89128 .945221 3.28328 .945236 3.5423 
1.59627 3.66835 1.85529 3.28328 3.66833 3.28328 3.5423 3.54231 0 ]xsh
RPTEAH+HelveticaNeue-Roman*1 [7.00014 0 0 -7.00014 0 0 ]msf
71.175 705.589 mo
(d.2. )
[3.76941 1.56435 3.51039 1.56435 0 ]xsh
RPTEAG+HelveticaNeue-Light*1 [7.00014 0 0 -7.00014 0 0 ]msf
83.1145 705.589 mo
(En caso de que el Cliente no realice, por cualquier causa, la Recarga Autom\207tica o retrotraiga, una vez abonado, el cargo corre)
[3.76933 3.37732 1.53237 3.25128 3.25129 2.98531 3.51031 1.53237 3.63634 3.25128 1.53237 3.63634 
3.37733 3.25129 1.53236 3.25128 .913239 1.53236 4.5463 .913239 .913254 3.25128 3.37732 1.69031 
3.25128 1.53236 3.37732 3.51031 1.53236 1.82329 3.25128 3.25128 .913239 .913239 3.25128 3.25128 
1.56427 1.53235 3.63635 3.51031 1.82327 1.53238 3.25128 3.37732 3.25128 .913239 3.63635 3.37733 
.913254 3.25128 1.82329 1.53236 3.2513 3.25128 3.37733 2.98532 3.25128 1.56427 1.53236 .913239 
3.2513 1.53236 4.28737 3.2513 3.25128 3.2513 1.82327 3.51031 3.25128 1.53238 4.02835 3.37732 
1.69031 3.51031 5.44931 3.25131 1.69031 .913208 3.25131 3.25128 1.53238 3.51031 1.53235 1.8233 
3.25128 1.69031 1.82327 3.51028 1.69031 1.8233 3.25125 .913239 3.51031 3.25125 1.56424 1.53241 
3.37732 3.37729 3.25131 1.53235 2.85925 3.25128 2.85925 1.53241 3.25128 3.63629 3.51031 3.37732 
3.25128 3.63635 3.51025 1.56427 1.53241 3.25128 .913208 1.53235 3.25128 3.25128 1.8233 3.51025 
3.51031 1.53241 3.25122 3.51031 1.8233 1.8233 0 ]xsh
416.951 705.589 mo
(spondiente a la misma, el Cliente deber\207)
[2.98535 3.63629 3.51031 3.37732 3.63635 .913208 3.25128 3.37732 1.69031 3.25128 1.53235 3.25128 
1.53241 .913208 3.25128 1.53235 5.44928 .913269 2.98529 5.44928 3.25128 1.56427 1.53235 3.25128 
.913208 1.53241 4.54626 .913269 .913208 3.25128 3.37732 1.69031 3.25122 1.53241 3.63635 3.25128 
3.63629 3.25128 1.8233 0 ]xsh
71.175 712.289 mo
(abonar el cargo correspondiente por incumplimiento del CP y ORANGE quedar\207 facultada a suspender la prestaci\227n del Servicio en )
[3.29437 3.67944 3.5534 3.42042 3.29437 1.86639 1.65155 3.29438 .956329 1.65156 3.29437 3.29437 
1.86639 3.5534 3.55339 1.65157 3.29437 3.55339 1.86639 1.86639 3.29437 3.02841 3.67943 3.55341 
3.42041 3.67944 .956329 3.29437 3.42041 1.7334 3.29437 1.65155 3.67944 3.55341 1.86638 1.65157 
.956329 3.42041 3.29437 3.42041 5.49239 3.67943 .956329 .956329 5.4924 .956314 3.29439 3.42041 
1.7334 3.55339 1.65157 3.67944 3.29437 .956329 1.65157 4.58939 4.07144 1.65157 2.90236 1.65157 
4.84842 4.33046 4.07144 4.58939 4.8484 3.81241 1.65158 3.67941 3.42044 3.29437 3.67941 3.29437 
1.86639 3.29437 1.65158 1.47437 3.2944 3.29437 3.42041 .956329 1.7334 3.29437 3.67941 3.29437 
1.65158 3.29437 1.65155 3.02841 3.42041 3.02841 3.67944 3.29437 3.42041 3.67941 3.2944 1.86636 
1.65155 .956329 3.29437 1.65155 3.67944 1.86639 3.29437 3.02841 1.7334 3.29437 3.29437 .956329 
3.55338 3.42044 1.65155 3.67941 3.29437 .956329 1.65158 4.07144 3.29437 1.86636 2.90237 .956329 
3.29437 .956329 3.55341 1.65155 3.29437 3.42041 0 ]xsh
428.018 712.289 mo
(tanto en cuanto el Cliente no abone)
[1.7334 3.29437 3.42041 1.7334 3.55341 1.65155 3.29437 3.42041 1.65155 3.29437 3.42041 3.29437 
3.42044 1.7334 3.55338 1.65155 3.29437 .956329 1.65158 4.58936 .956329 .956329 3.29437 3.42044 
1.7334 3.29437 1.65155 3.42041 3.55341 1.65155 3.29437 3.67938 3.55347 3.42041 0 ]xsh
71.175 718.989 mo
(a ORANGE las cantidades pendientes de pago.  Asimismo, ORANGE podr\207 suspender el servicio en caso de que se de un uso fraudulen)
[3.24088 1.51147 4.79491 4.27697 4.01795 4.53589 4.79491 3.75893 1.51146 .90284 3.24088 2.97491 
1.51146 3.24088 3.24088 3.36691 1.67991 .90284 3.62595 3.24088 3.62595 3.24088 2.97491 1.51147 
3.62595 3.24088 3.36691 3.62595 .902832 3.24088 3.36693 1.67992 3.24088 2.97491 1.51146 3.62595 
3.24088 1.51146 3.62595 3.24088 3.49989 3.49989 1.55386 1.51147 1.51146 4.01794 2.9749 .902832 
5.43889 .902832 2.9749 5.43889 3.49989 1.55386 1.51146 4.79491 4.27698 4.01794 4.53587 4.79491 
3.75893 1.51146 3.62595 3.49988 3.62595 1.8129 3.24084 1.51147 2.97491 3.36691 2.97491 3.62595 
3.24084 3.36694 3.62592 3.24091 1.8129 1.51144 3.24091 .902832 1.51147 2.97491 3.24091 1.81287 
2.84888 .902863 3.24088 .902863 3.49991 1.51147 3.24088 3.36691 1.51147 3.24088 3.24091 2.97491 
3.49991 1.51147 3.62595 3.24088 1.51147 3.62595 3.36694 3.24088 1.51147 2.97491 3.24088 1.51147 
3.62595 3.24091 1.51144 3.36694 3.36691 1.51147 3.36694 2.97491 3.49991 1.51147 1.42087 1.8129 
3.24091 3.36691 3.62595 3.36694 .902832 3.24088 0 ]xsh
433.816 718.989 mo
(to de la Tarifa Ping\237ino, quedando)
[1.6799 3.49991 1.51147 3.62595 3.24088 1.51147 .902832 3.24091 1.51147 3.49991 3.24088 1.8129 
.902832 1.4209 3.24088 1.51147 4.01794 .902863 3.36691 3.49991 3.36694 .902832 3.36694 3.49991 
1.55386 1.51147 3.62595 3.36691 3.24091 3.62595 3.24091 3.36694 3.62592 0 ]xsh
71.175 725.689 mo
(limitada a un n\234mero m\207ximo de dos altas en la Tarifa Ping\237ino por titular.)
[.945229 .945221 5.48129 .945221 1.7223 3.28327 3.66833 3.28326 1.59626 3.28327 1.59625 3.40931 
3.40931 1.59626 3.40931 3.40932 5.48128 3.28328 1.85527 3.5423 1.59625 5.48129 3.28326 3.0173 
.945236 5.48128 3.5423 1.59625 3.66833 3.28328 1.59625 3.66833 3.5423 3.0173 1.59627 3.28326 
.945221 1.72231 3.28328 3.01729 1.59625 3.28326 3.4093 1.59625 .945221 3.28326 1.59625 3.54228 
3.28326 1.85529 .945206 1.46327 3.28326 1.59625 4.06033 .945221 3.4093 3.5423 3.4093 .945221 
3.4093 3.5423 1.59624 3.66833 3.54228 1.85529 1.59624 1.72229 .945221 1.72231 3.4093 .945221 
3.28326 1.85526 0 ]xsh
RPTEAH+HelveticaNeue-Roman*1 [7.00014 0 0 -7.00014 0 0 ]msf
71.175 732.388 mo
(d.3.)
[3.83761 1.63255 3.57858 0 ]xsh
RPTEAG+HelveticaNeue-Light*1 [7.00014 0 0 -7.00014 0 0 ]msf
81.8551 732.388 mo
( Asimismo, a los efectos de lo dispuesto en la Ley Org\207nica Protecci\227n de Datos de Car\207cter Personal, ORANGE informa al Cliente)
[1.77698 4.09656 3.05352 .981445 5.5175 .981445 3.05352 5.5175 3.57851 1.63247 1.77698 3.31949 
1.77698 .981445 3.57851 3.05352 1.77698 3.31949 1.4995 3.31949 3.31949 1.7585 3.57852 3.05353 
1.77698 3.70454 3.31949 1.77698 .981445 3.57851 1.77698 3.70456 .981445 3.05353 3.70454 3.44553 
3.31949 3.05353 1.7585 3.57852 1.77698 3.31949 3.44553 1.77698 .981445 3.31949 1.77698 3.44553 
3.31949 2.92749 1.77698 4.87352 1.89149 3.57851 3.31949 3.44554 .98143 3.31949 3.31949 1.77698 
4.09656 1.89151 3.57851 1.75851 3.31949 3.31949 3.31949 .981445 3.57852 3.4455 1.77698 3.70459 
3.31946 1.77698 4.48151 3.31952 1.75848 3.57855 3.0535 1.77698 3.70456 3.31952 1.77698 4.6145 
3.31949 1.89151 3.31952 3.31949 1.75851 3.31952 1.89148 1.77698 4.09662 3.31946 1.89154 3.05353 
3.57849 3.44556 3.31952 .981445 1.63251 1.77698 4.87354 4.35559 4.09656 4.6145 4.87354 3.83759 
1.77698 .981445 3.44556 1.49945 3.57855 1.89148 5.51752 3.31952 1.77698 3.31952 .981445 1.77698 
4.6145 .981445 .981506 3.31946 3.44556 1.75854 0 ]xsh
439.924 732.388 mo
( que los datos facilitados ser\207n)
[1.77704 3.70453 3.44556 3.31952 1.77698 .981445 3.57849 3.05353 1.77698 3.70459 3.31952 1.75848 
3.57855 3.05353 1.77698 1.49951 3.31952 3.31946 .981506 .981445 .981445 1.75854 3.31946 3.70459 
3.57855 3.05353 1.77698 3.05353 3.31952 1.89148 3.31952 0 ]xsh
71.175 739.089 mo
(incorporados a un fichero de datos de car\207cter personal creado bajo la responsabilidad de Orange y que ser\207n tratados conforme )
[.948433 3.41252 3.28648 3.5455 1.85849 3.67154 3.54551 1.85848 3.28648 3.67154 3.5455 3.02052 
1.61207 3.28648 1.61207 3.41252 3.41251 1.61207 1.46648 .948441 3.28647 3.41252 3.28647 1.85849 
3.5455 1.61206 3.67154 3.28648 1.61206 3.67154 3.28648 1.72549 3.5455 3.02051 1.61206 3.67154 
3.28648 1.61206 3.28648 3.28647 1.85849 3.28648 3.28648 1.72551 3.28648 1.85849 1.61206 3.67154 
3.28648 1.85849 3.02052 3.5455 3.41252 3.28648 .948441 1.61206 3.28648 1.85849 3.28648 3.28648 
3.67154 3.54552 1.61205 3.67155 3.28648 .948441 3.5455 1.61205 .948456 3.28647 1.61206 1.85852 
3.28644 3.02054 3.67154 3.54553 3.41251 3.02051 3.28647 3.67157 .948425 .948456 .948425 3.67154 
3.28647 3.67154 1.61206 3.67151 3.2865 1.61206 4.84048 1.85849 3.28644 3.41254 3.5455 3.28647 
1.61203 2.89447 1.61206 3.67154 3.41251 3.28647 1.61206 3.02051 3.28647 1.85849 3.28647 3.41251 
1.61206 1.72549 1.85846 3.28647 1.72549 3.28647 3.67154 3.5455 3.02051 1.61206 3.28647 3.54547 
3.41251 1.46649 3.54547 1.85849 5.4845 3.28647 0 ]xsh
421.247 739.089 mo
(a lo establecido en la cl\207usula D de las)
[3.2865 1.61203 .948425 3.5455 1.61206 3.28647 3.02051 1.72549 3.28647 3.67154 .948425 3.28647 
3.28647 .948425 3.67154 3.54547 1.61206 3.28647 3.41251 1.61206 .948425 3.28647 1.61206 3.28647 
.948425 3.28647 3.41251 3.02051 3.41251 .948425 3.28647 1.61206 4.44852 1.61206 3.67151 3.28647 
1.61206 .948425 3.2865 0 ]xsh
71.175 745.789 mo
(CCGG del servicio M\227vil Prepago de ORANGE que le son entregadas en este momento. Adicionalmente, ORANGE podr\207 comprobar la solv)
[4.6099 4.6099 4.86893 4.86893 1.75427 3.69996 3.3149 .976845 1.75429 3.04892 3.3149 1.8869 
2.92288 .976852 3.31489 .976845 3.57391 1.75429 5.51291 3.57391 2.92288 .976852 .976852 1.75427 
4.09198 1.8869 3.31488 3.69997 3.3149 3.57391 3.57393 1.75429 3.69995 3.3149 1.75429 4.86893 
4.35098 4.09195 4.60991 4.86893 3.83295 1.75427 3.69997 3.44093 3.3149 1.75427 .976852 3.3149 
1.75429 3.04892 3.57393 3.44093 1.75427 3.3149 3.44093 1.75392 1.88692 3.31488 3.57393 3.3149 
3.69995 3.3149 3.04895 1.75427 3.31488 3.44095 1.75427 3.31491 3.04892 1.75394 3.31488 1.75427 
5.51291 3.57391 5.51291 3.31488 3.44092 1.75391 3.57391 1.62787 1.75427 4.09198 3.69992 .976837 
3.31488 .976837 3.57391 3.44092 3.31488 .976837 5.51291 3.31488 3.44092 1.75391 3.31488 1.62787 
1.75427 4.86893 4.35095 4.09195 4.60989 4.86893 3.83292 1.7543 3.69992 3.57391 3.69995 1.8869 
3.31488 1.75427 3.31488 3.57391 5.51288 3.69995 1.8869 3.57388 3.69995 3.31488 1.8869 1.75427 
.976837 3.31488 1.75427 3.04892 3.57391 .976837 0 ]xsh
455.915 745.789 mo
(encia del Cliente, por s\222 o)
[3.31488 3.44092 3.31488 .976837 3.31488 1.75427 3.69995 3.31488 .976837 1.75427 4.60989 .976837 
.976837 3.31488 3.44095 1.75391 3.31488 1.62787 1.75427 3.69995 3.57388 1.8869 1.75427 3.04895 
.976807 1.75427 0 ]xsh
71.175 752.489 mo
(por quien act\234e por su cuenta e inter\216s, mediante el acceso a informes de entidades financieras y/o ficheros automatizados en l)
[3.68064 3.5546 1.86758 1.65786 3.68064 3.42162 .957535 3.29557 3.42162 1.65787 3.29557 3.29558 
1.7346 3.42162 3.29558 1.65787 3.68063 3.5546 1.86758 1.65787 3.0296 3.42163 1.65785 3.29558 
3.42162 3.29558 3.4216 1.73462 3.29556 1.65787 3.29556 1.65787 .957535 3.42162 1.7346 3.29558 
1.86758 3.29556 3.02962 1.60857 1.65785 5.49361 3.29556 3.68063 .957535 3.29558 3.42162 1.7346 
3.29558 1.65787 3.29556 .957535 1.65787 3.29558 3.29558 3.29558 3.29558 3.0296 3.5546 1.65787 
3.29558 1.65787 .957535 3.42162 1.47557 3.5546 1.86758 5.49359 3.29556 3.0296 1.6579 3.68063 
3.29556 1.6579 3.29556 3.4216 1.73462 .95752 3.68063 3.29556 3.68066 3.29559 3.0296 1.65784 
1.47559 .95752 3.42163 3.29559 3.4216 3.29556 .95752 3.29559 1.86758 3.29556 3.02963 1.65784 
2.90359 1.9935 3.5546 1.65787 1.47556 .95755 3.29556 3.42163 3.29556 1.86758 3.5546 3.0296 
1.65787 3.29556 3.42163 1.73459 3.5546 5.49359 3.29559 1.73459 .95752 2.90359 3.29556 3.68063 
3.5546 3.02963 1.65784 3.29559 3.4216 1.65787 0 ]xsh
414.022 752.489 mo
(os que los datos de car\207cter personal se)
[3.5546 3.0296 1.65787 3.68063 3.42163 3.29556 1.65787 .95752 3.5546 3.0296 1.65787 3.68063 
3.29556 1.73462 3.5546 3.0296 1.65787 3.68063 3.29556 1.65787 3.29556 3.29559 1.86758 3.29556 
3.29559 1.73459 3.29556 1.86758 1.65787 3.68063 3.29556 1.86758 3.02963 3.5546 3.4216 3.29559 
.95752 1.65784 3.02966 0 ]xsh
71.175 759.188 mo
(hayan obtenido de conformidad con las disposiciones vigentes as\222 como verificar la exactitud de los datos aportados por el Clie)
[3.45681 3.33076 2.93877 3.33076 3.45681 1.83376 3.58979 3.71583 1.7698 3.33077 3.4568 .992722 
3.71584 3.58978 1.83376 3.71583 3.33076 1.83376 3.33078 3.58978 3.45682 1.51077 3.58978 1.90279 
5.52879 .992706 3.71585 3.33076 3.71584 1.83376 3.33076 3.5898 3.4568 1.83377 .992722 3.33076 
3.06482 1.83374 3.71585 .992706 3.06482 3.71582 3.5898 3.0648 .992737 3.33076 .992722 3.5898 
3.4568 3.33078 3.0648 1.83376 2.93877 .992737 3.58978 3.33078 3.4568 1.76979 3.33078 3.0648 
1.83376 3.33078 3.0648 .992722 1.83377 3.33076 3.58978 5.52881 3.58978 1.83374 2.93878 3.33075 
1.9028 .992706 1.5108 .992737 3.33075 3.33075 1.9028 1.83377 .992706 3.33078 1.83374 3.33075 
3.06482 3.33078 3.33078 1.76978 .992737 1.76978 3.45682 3.71585 1.83374 3.71582 3.33078 1.83374 
.992737 3.58978 3.06482 1.83374 3.71585 3.33075 1.76981 3.58978 3.06482 1.83374 3.33078 3.71582 
3.58981 1.90277 1.76981 3.33075 3.71585 3.58978 3.06482 1.83374 3.71582 3.58981 1.90277 1.83374 
3.33078 .992737 1.83374 4.62579 .992706 .992737 0 ]xsh
419.94 759.188 mo
(nte. El Cliente autoriza el tratamiento y)
[3.45682 1.76981 3.33078 1.64374 1.83377 3.84882 .992706 1.83377 4.62576 .992737 .992706 3.33078 
3.45682 1.76978 3.33078 1.83374 3.33078 3.45682 1.76981 3.58978 1.90277 .992737 2.93875 3.33078 
1.83374 3.33078 .992737 1.83374 1.76981 1.90277 3.33078 1.76978 3.33078 5.52878 .992737 3.33075 
3.45682 1.76978 3.58984 1.83374 0 ]xsh
71.175 765.888 mo
(mantenimiento de estos datos sobre solvencia financiera con fines estad\222sticos y de evaluaci\227n de la solvencia y valoraci\227n del)
[5.47398 3.27596 3.40201 1.71499 3.27596 3.40201 .93792 5.47398 .937927 3.27596 3.402 1.715 
3.53499 1.58165 3.66103 3.27596 1.58165 3.27596 3.00999 1.715 3.53499 3.00999 1.58167 3.66101 
3.27597 1.715 3.53499 3.00999 1.58167 3.00999 3.53499 3.66101 1.84798 3.27596 1.58167 3.00999 
3.53499 .937927 2.88396 3.27596 3.40201 3.27597 .937897 3.27597 1.58163 1.45596 .937927 3.40201 
3.27596 3.40201 3.27596 .937912 3.27597 1.84796 3.27597 1.58163 3.27597 3.53499 3.40199 1.58167 
1.45596 .937912 3.40201 3.27596 3.00999 1.58167 3.27596 3.00999 1.715 3.27594 3.66104 .937897 
3.01001 1.715 .937897 3.27597 3.535 3.00998 1.58163 2.88397 1.58167 3.66101 3.27597 1.58163 
3.27597 2.88397 3.27597 .937927 3.40204 3.27597 3.27597 .937927 3.535 3.40201 1.58167 3.66101 
3.27597 1.58167 .937927 3.27597 1.58163 3.01001 3.535 .937927 2.88397 3.27597 3.40201 3.276 
.937927 3.27597 1.58163 2.88397 1.58163 2.88397 3.27597 .937927 3.535 1.84799 3.27597 3.27597 
.937927 3.535 3.40201 1.58167 3.66104 3.27597 0 ]xsh
406.13 765.888 mo
( riesgo previo a la activaci\227n de los servicios.)
[1.58163 1.84799 .937927 3.27597 3.01001 3.535 3.535 1.58163 3.66104 1.84799 3.27597 2.88397 
.937927 3.535 1.58163 3.27597 1.58163 .937958 3.27597 1.58163 3.27597 3.27597 1.715 .937958 
2.88394 3.276 3.27597 .937927 3.535 3.40201 1.58163 3.66104 3.27597 1.58167 .937927 3.53497 
3.01001 1.58167 3.01001 3.27597 1.84799 2.88394 .937958 3.27597 .937927 3.53497 3.01001 0 
]xsh
71.175 779.289 mo
(E.- En caso de que adquiera un terminal iPhone, el Cliente conoce y acepta el Acuerdo de Licencia de Apple para iPhone as\222 como)
[3.80762 1.60256 2.24654 1.62766 3.80762 3.41561 1.62766 3.28958 3.28957 3.02361 3.5486 1.62766 
3.67464 3.28958 1.62766 3.67464 3.41562 3.28957 1.62766 3.28957 3.67464 3.67464 3.41562 .951523 
3.28957 1.86159 3.28957 1.62767 3.4156 3.41562 1.62766 1.72861 3.28958 1.86157 5.48758 .951538 
3.41562 3.28958 .951508 1.62767 .951523 4.06665 3.41562 3.54861 3.41562 3.28957 1.60257 1.62767 
3.28958 .951538 1.62767 4.58458 .951538 .951538 3.28958 3.41562 1.72861 3.28958 1.62767 3.28957 
3.54861 3.41562 3.5486 3.28958 3.28958 1.62767 2.89757 1.62767 3.28958 3.28958 3.28958 3.67465 
1.72858 3.28961 1.62766 3.28958 .951538 1.62766 4.06665 3.28958 3.41562 3.28958 1.86157 3.67462 
3.54861 1.62766 3.67462 3.28955 1.62769 3.41559 .951538 3.28955 3.28955 3.41562 3.28958 .951508 
3.28958 1.62766 3.67462 3.28958 1.62766 4.06662 3.67462 3.67465 .951508 3.28958 1.62766 3.67462 
3.28955 1.8616 3.28955 1.62766 .951538 4.06662 3.41562 3.54858 3.41562 3.28955 1.62766 3.28958 
3.02359 .951508 1.62766 3.28958 3.54858 5.48758 0 ]xsh
422.63 779.289 mo
( el resto de Condiciones del Producto)
[1.62766 3.28958 .951508 1.62766 1.86157 3.28958 3.02359 1.72861 3.54858 1.62766 3.67462 3.28958 
1.62766 4.58456 3.54858 3.41562 3.67462 .951538 3.28955 .951538 3.54858 3.41559 3.28958 3.02359 
1.62766 3.67465 3.28955 .951538 1.62766 4.06662 1.86157 3.54858 3.67465 3.41556 3.28961 1.72858 
0 ]xsh
71.175 785.988 mo
(facilitadas por Apple. Si no est\207 de acuerdo con estas condiciones, puede devolver el iPhone conforme a los procedimientos de d)
[1.50818 3.32817 3.32817 .990128 .990128 .990135 1.7672 3.32818 3.71323 3.32817 3.06221 1.82076 
3.71323 3.5872 1.90018 1.82077 4.10524 3.71324 3.71323 .990135 3.32818 1.64114 1.82077 4.10524 
.990128 1.82076 3.45421 3.5872 1.82076 3.32819 3.06219 1.76721 3.32816 1.82077 3.71323 3.32819 
1.82076 3.32817 3.32819 3.45421 3.32817 1.90018 3.71324 3.58719 1.82076 3.32817 3.58719 3.45421 
1.82076 3.32817 3.06219 1.7672 3.32817 3.06219 1.82077 3.32816 3.58719 3.45421 3.71324 .990112 
3.32817 .990128 3.58719 3.45421 3.32816 3.06221 1.64114 1.82077 3.71323 3.45419 3.32819 3.71323 
3.32816 1.82077 3.71323 3.32819 2.93616 3.58716 .990143 2.93616 3.32819 1.90018 1.82077 3.32819 
.990143 1.82077 .990143 4.10522 3.45422 3.58722 3.45422 3.32819 1.82077 3.32816 3.58722 3.45422 
1.50818 3.58719 1.90021 5.52618 3.32819 1.82077 3.32819 1.82077 .990143 3.58719 3.06223 1.82077 
3.71323 1.90021 3.58719 3.32819 3.32819 3.71323 .990143 5.52618 .990143 3.32819 3.45422 1.76721 
3.58719 3.06223 1.82077 3.71323 3.32819 1.82077 0 ]xsh
427.012 785.988 mo
(evoluci\227n de terminales de Orange.)
[3.32819 2.93616 3.58722 .990112 3.45422 3.32819 .990143 3.58719 3.45422 1.82077 3.71326 3.32819 
1.82077 1.76721 3.32816 1.90021 5.52618 .990143 3.45422 3.32816 .990143 3.32819 3.06223 1.82077 
3.71323 3.32819 1.82077 4.8822 1.90021 3.32819 3.45419 3.58722 3.32819 0 ]xsh
.49761 lw
3.8636 ml
70.9453 110.265 mo
288.068 110.265 li
@
.52661 lw
70.975 250.378 mo
314.075 250.378 li
@
.584212 lw
71.0359 586.384 mo
370.296 586.384 li
@
.452709 lw
70.9191 673.016 mo
250.637 673.016 li
@
gsave
371.349 804.984 mo
524.304 804.984 li
524.304 792.895 li
371.349 792.895 li
cp
clp
1 setflat
371.3 805.034 mo
524.155 805.034 li
524.155 793.045 li
371.3 793.045 li
cp
3.0518e-5 3.0518e-5 3.0518e-5 3.0518e-5 cmyk
f
0 lw
10 ml
371.3 805.034 mo
524.155 805.034 li
524.155 793.045 li
371.3 793.045 li
cp
.750179 .679652 .670191 .901488 cmyk
@
grestore
gsave
371.349 804.984 mo
524.304 804.984 li
524.304 792.895 li
371.349 792.895 li
cp
clp
3.0518e-5 .739193 1 .000366217 cmyk
%ADOBeginSubsetFont: ArialMT Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /ArialMT def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 0 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 65 /A put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 116 /t put
dup 243 /oacute put
def
/FontBBox {-665 -325 2000 1006} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
16 dict dup begin
/.notdef <1C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7
C8A936AA182F5809A9> |-
/A <1C60D8A8C9B64EDFED26B9E21A4F64848088903AC9891CF791BDBC4AB29A
CC8B3E8D13924A7DDE35F09AC5F4A8229C87124C732743268600EF8D4582208B
D16D82> |-
/a <1C60D8A8C9B7EF32244AC11AA6BAAA29EE8C78E0E7206F4A2776A2D1EA7D
C8D9A28C62ADE3B609CF5E2EE23C64D0B75055BD249ADFEC7B4224D040D883CA
6747571955349CF8AD17E94E6FE5D0259F4D55623D4DC5C3CB4AC64A7A87DBBA
48B7420D7990F3C261DB9838C5B90BF72B82C8238A1A58FE8E6137AAFE2405FD
710F7ADB95B4F576668A6DB104942C88ED8D01E4E58188F5E32A24B5B964D5CE
C10C08F76C0F472E84A0FB6EB5E37AAEE233DE54C212B0A012D3E20F864B2D53
463E221F81B784B6F7BE81FBFCAE6785C2430454DD81C436E0A516BF8C8307B2
879FF86378629C5EA7E586D83C83550D2E732930F7FE3BAD07B86C81E024D177
B5D88A> |-
/c <1C60D8A8C9B7A73DB9D8FD6AA4FBAF8D65C36EA1D4AADBD389F972C0EDCE
9E7F36285FA93A80D3647871D2CE5AAAA6A6A370DC54E1595FB6AAB3E389C9F7
BBBB85F787D6C418B35B940450E5E243895ECFD2205F51B2D154CFFECF34148C
344C1EF806F9AAF539FB961E3EFAF6353381E833DF7C0542FFF27122A28D3654
8FE63FC8465B1B685766E782F0> |-
/d <1C60D8A8C9B7EF322407C6655A1B3652DB8522EB511BE6B0855A72D96214
58876CAD1FA22A00635F436A34E23EAFC09C394044ECC1389CD99E4AF1C1F6DD
52305C78619784840FC37A805B0805EF290BC9E049CF068290816CB7E74DB612
941355BCE71CBDD11DD0F9CA29531036ED13EFB9CAB613E9F630FBBC9408EF13
CE4683D92968530F64760C3DF85C7C7EA06EBA8BF859> |-
/e <1C60D8A8C9B7EF322472FA01213C7AD90A23B536C2309DD40D370E2449B0
D0FEF85A6BE8067F30686F143E75903EB6FA56935472EF47CE3F33433C2F0C8B
6FA51573AE54B2C516F6F024F8775AD6639544E339FC2A328548BCBFD58B0EEA
03B7DC3AB069F44477958BFBFAAC7196D411DF9BE0B78A86C4BC33EC5D7C3729
5284C077711C162623860AACA404F650F8D516970257> |-
/f <1C60D8A8C9B854D0F47057B2F13303E258FCAEE9E8BBA6E28AE872907C56
63BFD2A0F535ED0EB011F2C2A875E053FAF73E8AA16B1F99510A6812F90D61CF
3F1DA5EF558899A9AE12AAF6AF4568E0F6003B0A2FF6F33293> |-
/i <1C60D8A8C9B88C087228DFC7C7ABCC71B868F57EDB285655227000619B17
1C8A80AB> |-
/l <1C60D8A8C9B88C08722AD20D19A90F9064193C8D82> |-
/m <1C60D8A8C9B6B41CBB5F87BE20C872DF59FABCB36542419CBFA3D5519AD5
BA8076F32ECFD724B055F72CAC37BC47239ACC8B0FB48B8ACFF099B97085BD99
C333951D0338D27FF6AB9B3F3C69320476BA0CD4F9573B79AD358A91B0176AFB
9AEF169308783E9C6287F18E6E658AF5AA6C9688B500806DA169A1B21069D55C
54A2FF607A6A38976171B08665C3ACCAA84DFB970D01180645CE5CBC48DFE37B> |-
/n <1C60D8A8C9B7EF322B3BE19FB964E04D2DB06D4930CA5D8F41D2EF3A285C
0BD536CD2C57668EB9E30311BF9A2872DFB44F2BF2A4683B5D66FA01BB1CCDAD
E9C8A9EE2CB010715D3D6DFF0E843CF77C87A07D1DBD0482675E3CA1DAA2A520
3A8015DD09B7CE> |-
/o <1C60D8A8C9B7EF32334FFE7884F6C3B903D000D9FD76C2EAE8EDCCA90A98
7875625CA0393015EF6761BE1C3B6D9E9DA4BABE1DD313B783BCBF8F620C846C
7F6361946173FB7A4A6BF94EAA0CB4947DD1974AF371F3C211E584576DE9AD79
F9DA988E9E531810E3876F3029BB1D2ED366525F30E48DD7CE3C9B66C5CC099F
518C54BB58C51D6FB6D0C8> |-
/p <1C60D8A8C9B7EF322B3B0CFC8FED720BC90E20B208D27DC4B8F11F10B964
70F8B4F5FABEC7F7010781F5077B417FE44279776F2304ACD6E0EA12F436330D
C4B79C907B9D28468D10FF9256A7D2CA504E4498D719ACD86FCA89B33C61F556
CF1168C3F262A781155D5EBF0C47D71C584AB93037B47B18D39FE408A49672C1
E63F9E8368D19E113FC95C59A9FA4650E46F6399F2FF256844E27568BA34B9> |-
/r <1C60D8A8C9B81F2C3A9694980E415F1DEF5C498473095A24D1BE11285789
4FEA85DB28AD762FB8D2F4CAC5BF8B9C18D8A2DFCF155E0751AF58898A6619AD
D420F549AB7C795751D32E8EE6> |-
/t <1C60D8A8C9B854D0F45CF665C7276F8075B54A4ECD6470F395A458CA2D06
5152075036EEECA213894C1EA0DACFBD370590F4B831924E5BDA5281442349CF
AD2545E0750C3004A129C25B1EAA8DEF5DA8BF1998E80AE266F591E64CB5127F
5C42C88FB43C> |-
/oacute <1C60D8A8C9B7EF32334FFE7884F6C3B903D000D9FD76C2EAE8EDCCA
90A987875625CA0393015EF6761BE1C3B6D9E9DA4BABE1DD313B783BCBF8F620
C846C7F6361946173FB7A4A6BF94EAA0CB4947DD1974AF371F3C211E584576DE
9AD79F9DA988E9E531810E3876F3029BB1D2ED366525F30E48DD7CE3C9B66C5C
C099F518C54BB58C51D6FB6D031A91E7E3745045E1BB61CDDA50CE86B9A8A> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/RPTEAI+ArialMT /ArialMT findfont ct_VMDictPut
/RPTEAI+ArialMT*1 
[65{/.notdef}rp /A 31{/.notdef}rp /a /.notdef /c /d /e 
/f 2{/.notdef}rp /i 2{/.notdef}rp /l /m /n /o 
/p /.notdef /r /.notdef /t 126{/.notdef}rp /oacute 12{/.notdef}rp]
RPTEAI+ArialMT nf
RPTEAI+ArialMT*1 [6 0 0 -6 0 0 ]msf
377.459 799.931 mo
(Aceptado)
[4.00201 3.00003 3.33606 3.33603 1.66806 3.33606 3.33603 0 ]xsh
404.477 799.931 mo
(por)
[3.33615 3.33615 0 ]xsh
414.815 799.931 mo
(el)
[3.33621 0 ]xsh
421.15 799.931 mo
(cliente)
[3.00012 1.33206 1.33203 3.33615 3.33612 1.66812 0 ]xsh
440.159 799.931 mo
(electr\363nica)
[3.33612 1.33203 3.33615 3.00012 1.66812 1.99808 3.33612 3.33612 1.33206 3.00012 0 ]xsh
470.836 799.931 mo
(o)sh
475.84 799.931 mo
(telef\363nicamente)
[1.66812 3.33609 1.33203 3.33609 1.66812 3.33612 3.33609 1.33203 3.00012 3.33609 4.99808 3.33612 
3.33612 1.66809 0 ]xsh
grestore
1 setflat
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/2 /3 ]]
] del_res
/RPTEAH+HelveticaNeue-Roman*1 uf
/RPTEAH+HelveticaNeue-Roman uf
/HIBBAA+HelveticaNeue-Roman uf
/RPTEAF+HelveticaNeue-Medium*1 uf
/RPTEAF+HelveticaNeue-Medium uf
/PBAAAA+HelveticaNeue-Medium uf
/RPTEAI+ArialMT*1 uf
/RPTEAI+ArialMT uf
/ArialMT uf
/RPTEAG+HelveticaNeue-Light*1 uf
/RPTEAG+HelveticaNeue-Light uf
/HIBBAA+HelveticaNeue-Light uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%ADO_BeginApplicationPageTrailerComments
%ADO_EndApplicationPageTrailerComments
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%ADO_BeginApplicationTrailerComments
%%+ procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%ADO_EndApplicationTrailerComments
%%EOF
Adobe_AGM_Core/pscript_showpage_override get exec
grestore
showpage
PageSV restore
%%Trailer
%%DocumentNeededFonts:
%%DocumentSuppliedFonts:
end
%%Pages: 2
%%EOF
%-12345X@PJL RDYMSG DISPLAY = ""
@PJL EOJ
@PJL LPORTROTATE
%-12345X
