update es_queries set query = 'select date_format(b.created_ts, ''%Y-%m-%d'') as bloc_created_date, DATE_FORMAT(b.created_ts,''%H:%i:%s'') as bloc_created_time, date_format(b.updated_ts, ''%Y-%m-%d'') as bloc_updated_date, DATE_FORMAT(b.updated_ts,''%H:%i:%s'') as bloc_updated_time, b.uuid bloc_id, b.name bloc_name, b.refresh_interval bloc_refresh_interval, b.start_date bloc_start_date, b.end_date bloc_end_date, b.visible_to bloc_visible_to, b.margin_top bloc_margin_top, b.margin_bottom bloc_margin_bottom, b.description bloc_description, bd.template_data bloc_template_data, b.rss_feed_ids bloc_rss_feed_ids, b.rss_feed_sort as bloc_rss_feed_sort, bt.id as template_id, bt.name template_name, bt.custom_id template_custom_id, bt.type template_type, bt.description template_description, bt.template_code template_code, bt.css_code template_css_code, bt.js_code template_js_code, lg.langue_id, lg.langue_code, lb.id as library_id, lb.name as library_name, fl.id as file_id, fl.file_name file_name, fl.label file_label, fl.type file_type, btags.tag_id as tag_id from ##PAGES_DB##.language lg join ##PAGES_DB##.blocs b left outer join ##PAGES_DB##.blocs_details bd on lg.langue_id = bd.langue_id and bd.bloc_id = b.id left outer join ##PAGES_DB##.bloc_templates bt on b.template_id = bt.id left outer join ##PAGES_DB##.bloc_templates_libraries btl on btl.bloc_template_id = bt.id left outer join ##PAGES_DB##.libraries lb on lb.id = btl.library_id left outer join ##PAGES_DB##.libraries_files lf on lf.library_id = lb.id left outer join ##PAGES_DB##.files fl on fl.id = lf.file_id left outer join ##PAGES_DB##.blocs_tags btags on btags.bloc_id = b.id where b.site_id = ##site_id## and b.template_id = ##bloc_id##' where name='blocs';

update es_query_levels set j_object_columns = 'id:bloc_id,name:bloc_name,refresh_interval:bloc_refresh_interval,start_date:bloc_start_date,end_date:bloc_end_date,visible_to:bloc_visible_to,margin_top:bloc_margin_top,margin_bottom:bloc_margin_bottom,description:bloc_description,rss_feed_ids:bloc_rss_feed_ids,rss_feed_sort:bloc_rss_feed_sort,created_date:bloc_created_date,created_time:bloc_created_time,updated_date:bloc_updated_date,updated_time:bloc_updated_time' where query_name = 'blocs' and coalesce(parent_level_id,'') = '' and j_object_key = 'bloc_id';


update es_queries set query = 'select pfr.uuid as folder_id, pfr.name as folder_name, l.langue_id, date_format(p.created_ts, ''%Y-%m-%d'') as page_created_date, DATE_FORMAT(p.created_ts,''%H:%i:%s'') as page_created_time, date_format(p.updated_ts, ''%Y-%m-%d'') as page_updated_date, DATE_FORMAT(p.updated_ts,''%H:%i:%s'') as page_updated_time, date_format(p.published_ts, ''%Y-%m-%d'') as page_published_date, DATE_FORMAT(p.published_ts,''%H:%i:%s'') as page_published_time, p.uuid as page_id, p.name, p.type, p.path, p.langue_code, p.variant, p.html_file_path, coalesce(ccnt.published_url,'''') as published_url, p.canonical_url, p.title, p.meta_keywords, p.meta_description, p.dl_page_type, p.dl_sub_level_1, p.dl_sub_level_2, p.package_name, p.class_name, p.layout, p.social_title, p.social_type, p.social_description, p.social_image, p.social_twitter_message, p.social_twitter_hashtags, p.social_email_subject, p.social_email_popin_title, p.social_email_message, p.social_sms_text, p.publish_status, p.row_height, p.item_margin_x, p.item_margin_y, p.container_padding_x, p.container_padding_y, p.dynamic_html, p.layout_data, p.get_html_status, ptags.tag_id tag_id, pmt.meta_name, pmt.meta_content, pb.sort_order bloc_sort_order, date_format(b.created_ts, ''%Y-%m-%d'') as bloc_created_date, DATE_FORMAT(b.created_ts,''%H:%i:%s'') as bloc_created_time, date_format(b.updated_ts, ''%Y-%m-%d'') as bloc_updated_date, DATE_FORMAT(b.updated_ts,''%H:%i:%s'') as bloc_updated_time, b.name bloc_name, b.uuid bloc_id, ptm.uuid as template_id, ptm.name as template_name, ptm.custom_id as template_custom_id, ptm.description as template_description, ptm.template_code as template_code, ptm.is_system as template_is_system, pti.id as item_id, pti.name as item_name, pti.custom_id as item_custom_id, pti.sort_order as item_sort_order, ptib.sort_order as item_bloc_sort_order, ib.uuid as item_bloc_id, ib.name as item_bloc_name, ptid.css_classes as item_detail_css_classes, ptid.css_style item_detail_css_style, pf.form_id as form_id, pf.sort_order page_form_sort_order from ##PAGES_DB##.pages p left outer join ##PAGES_DB##.language l on l.langue_code = p.langue_code left outer join ##PAGES_DB##.folders pfr on pfr.id = p.folder_id left outer join ##PORTAL_DB##.cached_content_view ccnt on ccnt.site_id = p.site_id and ccnt.content_type = ''page'' and ccnt.content_id = p.id and ccnt.lang = l.langue_code left outer join ##PAGES_DB##.pages_tags ptags on ptags.page_id = p.id left outer join ##PAGES_DB##.pages_meta_tags pmt on pmt.page_id = p.id left outer join ##PAGES_DB##.pages_blocs pb on pb.page_id = p.id left outer join ##PAGES_DB##.blocs b on b.id = pb.bloc_id left outer join ##PAGES_DB##.page_templates ptm on ptm.id = p.template_id left outer join ##PAGES_DB##.page_templates_items pti on pti.page_template_id = ptm.id left outer join ##PAGES_DB##.page_templates_items_blocs ptib on ptib.item_id = pti.id and ptib.langue_id = l.langue_id left outer join ##PAGES_DB##.blocs ib on ib.id = ptib.bloc_id left outer join ##PAGES_DB##.page_templates_items_details ptid on ptid.item_id = pti.id and ptid.langue_id = l.langue_id left outer join ##PAGES_DB##.pages_forms pf on pf.page_id = p.id where p.type = ''freemarker'' and p.site_id = ##site_id## and p.id = ##page_id##' where name='pages';

update es_query_levels set j_object_columns = 'id:page_id,name,type,folder_id,folder_name,path,langue_code,variant,html_file_path,published_url,canonical_url,title,meta_keywords,meta_description,dl_page_type,dl_sub_level_1,dl_sub_level_2,package_name,class_name,layout,social_title,social_type,social_description,social_image,social_twitter_message,social_twitter_hashtags,social_email_subject,social_email_popin_title,social_email_message,social_sms_text,publish_status,row_height,item_margin_x,item_margin_y,container_padding_x,container_padding_y,created_date:page_created_date,created_time:page_created_time,updated_date:page_updated_date,updated_time:page_updated_time,published_date:page_published_date,published_time:page_published_time' where query_name = 'pages' and coalesce(parent_level_id,'') = '' and j_object_key = 'page_id';
update es_query_levels set j_object_columns = 'id:bloc_id,name:bloc_name,created_date:bloc_created_date,created_time:bloc_created_time,updated_date:bloc_updated_date,updated_time:bloc_updated_time' where query_name = 'pages' and j_object='blocs' and j_object_key = 'bloc_id';

update es_queries set query = 'select bt.id as bloc_template_id, bt.name as bloc_template_name, bt.custom_id as bloc_template_custom_id, bt.type as bloc_template_type, l.langue_code, l.langue_id, scp.id content_id, scp.uuid content_uuid, scp.name content_name, date_format(scp.created_ts, ''%Y-%m-%d'') as content_created_date, DATE_FORMAT(scp.created_ts,''%H:%i:%s'') as content_created_time, date_format(scp.updated_ts, ''%Y-%m-%d'') as content_updated_date, DATE_FORMAT(scp.updated_ts,''%H:%i:%s'') as content_updated_time, date_format(scp.published_ts, ''%Y-%m-%d'') as content_published_date, DATE_FORMAT(scp.published_ts,''%H:%i:%s'') as content_published_time, scp.publish_status content_publish_status, scdp.fd_content_data_3 content_data,f.name as folder_name, f.uuid as folder_id,fd.path_prefix folder_path_prefix,date_format(pg.created_ts, ''%Y-%m-%d'') as page_created_date, DATE_FORMAT(pg.created_ts,''%H:%i:%s'') as page_created_time, date_format(pg.updated_ts, ''%Y-%m-%d'') as page_updated_date, DATE_FORMAT(pg.updated_ts,''%H:%i:%s'') as page_updated_time, date_format(pg.published_ts, ''%Y-%m-%d'') as page_published_date, DATE_FORMAT(pg.published_ts,''%H:%i:%s'') as page_published_time,pg.canonical_url page_canonical_url,pg.uuid AS page_id,pg.NAME AS page_name,pg.type AS page_type,pg.path AS page_path,pg.publish_status AS page_publish_status,coalesce(ccnt.published_url,'''') as published_url from ##PAGES_DB##.language l inner join ##PAGES_DB##.structured_contents_published scp left outer join ##PAGES_DB##.structured_contents_details_published scdp on scdp.content_id = scp.id and scdp.langue_id = l.langue_id left outer JOIN ##PAGES_DB##.pages pg ON pg.id = scdp.page_id and pg.langue_code = l.langue_code left outer join ##PORTAL_DB##.cached_content_view ccnt on ccnt.content_type = ''page'' and ccnt.content_id = pg.id and ccnt.lang = l.langue_code and ccnt.site_id = pg.site_id inner join ##PAGES_DB##.bloc_templates bt on bt.type <> ''store'' and bt.id = scp.template_id left outer join ##PAGES_DB##.folders f ON scp.folder_id = f.id left outer join ##PAGES_DB##.folders_details fd ON fd.folder_id = f.id AND l.langue_id = fd.langue_id where scp.type = ''page'' and scp.site_id = ##site_id## and case when ##sc_uuid## = ''All'' then 1 else scp.template_id end = case when ##sc_uuid## = ''All'' then 1 else ##sc_uuid## end' where name='structured_page';
update es_query_levels set j_object_columns = 'id:content_uuid,name:content_name,folder_name,folder_id,created_date:content_created_date,created_time:content_created_time,updated_date:content_updated_date,updated_time:content_updated_time,published_date:content_published_date,published_time:content_published_time' where query_name = 'structured_page' and coalesce(parent_level_id,'') = '' and j_object_key = 'content_id';
update es_query_levels set j_object_columns = 'id:page_id,name:page_name,type:page_type,path:page_path,canonical_url:page_canonical_url,published_url,created_date:page_created_date,created_time:page_created_time,updated_date:page_updated_date,updated_time:page_updated_time,published_date:page_published_date,published_time:page_published_time' where query_name = 'structured_page' and j_object='page' and j_object_key = 'page_id';


update es_queries set query = 'select bt.id as bloc_template_id, bt.name as bloc_template_name, bt.custom_id as bloc_template_custom_id, bt.type as bloc_template_type, l.langue_code, l.langue_id, scp.id content_id, scp.uuid content_uuid, scp.name content_name, date_format(scp.created_ts, ''%Y-%m-%d'') as content_created_date, DATE_FORMAT(scp.created_ts,''%H:%i:%s'') as content_created_time, date_format(scp.updated_ts, ''%Y-%m-%d'') as content_updated_date, DATE_FORMAT(scp.updated_ts,''%H:%i:%s'') as content_updated_time, date_format(scp.published_ts, ''%Y-%m-%d'') as content_published_date, DATE_FORMAT(scp.published_ts,''%H:%i:%s'') as content_published_time, scp.publish_status content_publish_status, scdp.fd_content_data_3 content_data,f.name as folder_name, f.uuid as folder_id,fd.path_prefix folder_path_prefix,date_format(pg.created_ts, ''%Y-%m-%d'') as page_created_date, DATE_FORMAT(pg.created_ts,''%H:%i:%s'') as page_created_time, date_format(pg.updated_ts, ''%Y-%m-%d'') as page_updated_date, DATE_FORMAT(pg.updated_ts,''%H:%i:%s'') as page_updated_time, date_format(pg.published_ts, ''%Y-%m-%d'') as page_published_date, DATE_FORMAT(pg.published_ts,''%H:%i:%s'') as page_published_time,pg.canonical_url page_canonical_url,pg.uuid AS page_id,pg.NAME AS page_name,pg.type AS page_type,pg.path AS page_path,pg.publish_status AS page_publish_status,coalesce(ccnt.published_url,'''') as published_url from ##PAGES_DB##.language l inner join ##PAGES_DB##.structured_contents_published scp left outer join ##PAGES_DB##.structured_contents_details_published scdp on scdp.content_id = scp.id and scdp.langue_id = l.langue_id left outer JOIN ##PAGES_DB##.pages pg ON pg.id = scdp.page_id and pg.langue_code = l.langue_code left outer join ##PORTAL_DB##.cached_content_view ccnt on ccnt.content_type = ''page'' and ccnt.content_id = pg.id and ccnt.lang = l.langue_code and ccnt.site_id = pg.site_id inner join ##PAGES_DB##.bloc_templates bt on bt.type = ''store'' and bt.id = scp.template_id left outer join ##PAGES_DB##.folders f ON scp.folder_id = f.id left outer join ##PAGES_DB##.folders_details fd ON fd.folder_id = f.id AND l.langue_id = fd.langue_id where scp.type = ''page'' and scp.site_id = ##site_id## and case when ##sc_uuid## = ''All'' then 1 else scp.template_id end = case when ##sc_uuid## = ''All'' then 1 else ##sc_uuid## end' where name='stores';
update es_query_levels set j_object_columns = 'id:content_uuid,name:content_name,folder_name,folder_id,created_date:content_created_date,created_time:content_created_time,updated_date:content_updated_date,updated_time:content_updated_time,published_date:content_published_date,published_time:content_published_time' where query_name = 'stores' and coalesce(parent_level_id,'') = '' and j_object_key = 'content_id';
update es_query_levels set j_object_columns = 'id:page_id,name:page_name,type:page_type,path:page_path,canonical_url:page_canonical_url,published_url,created_date:page_created_date,created_time:page_created_time,updated_date:page_updated_date,updated_time:page_updated_time,published_date:page_published_date,published_time:page_published_time' where query_name = 'stores' and j_object='page' and j_object_key = 'page_id';

update es_queries set query = 'select scp.uuid as content_id, scp.name as content_name, date_format(scp.created_ts, ''%Y-%m-%d'') as content_created_date, DATE_FORMAT(scp.created_ts,''%H:%i:%s'') as content_created_time, date_format(scp.updated_ts, ''%Y-%m-%d'') as content_updated_date, DATE_FORMAT(scp.updated_ts,''%H:%i:%s'') as content_updated_time, date_format(scp.published_ts, ''%Y-%m-%d'') as content_published_date, DATE_FORMAT(scp.published_ts,''%H:%i:%s'') as content_published_time, bt.id as bloc_template_id, bt.name as bloc_template_name, bt.custom_id as bloc_template_custom_id, bt.type as bloc_template_type, l.langue_code, l.langue_id, scdp.fd_content_data_3 content_data, scdp.id as content_detail_id, f.name as folder_name, f.uuid as folder_id from ##PAGES_DB##.language l inner join ##PAGES_DB##.structured_contents_published scp left outer join ##PAGES_DB##.structured_contents_details_published scdp on scdp.content_id = scp.id and scdp.langue_id = l.langue_id inner join ##PAGES_DB##.bloc_templates bt on bt.id = scp.template_id left outer join ##PAGES_DB##.folders f ON scp.folder_id = f.id where scp.type = ''content'' and scp.site_id = ##site_id## and case when ##sc_uuid## = ''All'' then 1 else scp.template_id end = case when ##sc_uuid## = ''All'' then 1 else ##sc_uuid## end' where name='structured_content';
update es_query_levels set j_object_columns = 'id:content_id,name:content_name,folder_name,folder_id,created_date:content_created_date,created_time:content_created_time,updated_date:content_updated_date,updated_time:content_updated_time,published_date:content_published_date,published_time:content_published_time' where query_name = 'structured_content' and coalesce(parent_level_id,'') = '' and j_object_key = 'content_id';


update es_queries set query = '(select l.langue_id, l.langue_code, pvd.action_button_desktop, pvd.action_button_desktop_url, pvd.action_button_mobile, pvd.action_button_mobile_url, c.catalog_type as catalog_type, coalesce(fl.uuid,c.catalog_uuid) as folder_id, coalesce(fl.name,c.name) as folder_name, date_format(p.created_on, ''%Y-%m-%d'') as product_published_date, DATE_FORMAT(p.created_on,''%H:%i:%s'') as product_published_time, date_format(p2.created_on, ''%Y-%m-%d'') as product_created_date, DATE_FORMAT(p2.created_on,''%H:%i:%s'') as product_created_time, date_format(p2.updated_on, ''%Y-%m-%d'') as product_updated_date, DATE_FORMAT(p2.updated_on,''%H:%i:%s'') as product_updated_time, p.product_type, p.payment_online, p.payment_cash_on_delivery, p.sort_variant, case coalesce(p.sort_variant,'''')  when ''cu'' then ''Custom'' when ''pa'' then ''Price asc'' when ''pd'' then ''Price desc'' when ''cdd'' then ''Created date desc'' when ''cda'' then ''Created date asc'' else coalesce(p.sort_variant,'''') end sort_variant_label, p.allow_ratings, p.allow_comments, p.allow_complaints, p.allow_questions, p.is_new, p.show_basket, p.show_quickbuy, p.order_seq product_order_seq, p.brand_name, p.product_uuid as product_id, p.lang_1_name as product_lang_1_name, p.lang_2_name as product_lang_2_name, p.lang_3_name as product_lang_3_name, p.lang_4_name as product_lang_4_name, p.lang_5_name as product_lang_5_name, pv.id as variant_id, pv.price variant_price, pv.sku variant_sku, pv.stock variant_stock, pv.is_active variant_is_active, pv.is_default variant_is_default, pv.is_show_price variant_is_show_price, pv.sticker variant_sticker , pvd.name as variant_name, pd.summary, pd.main_features, pvr.sort_order variant_res_sort_order, pvr.id as variant_res_id, pvr.type as variant_res_type, pvr.path as variant_res_path, pvr.label as variant_res_label, peb.id as essentials_id, peb.block_text essentials_block_text, peb.file_name essentials_file_name, peb.image_label as essentials_image_label, peb.order_seq essentials_order_seq, pvref.cat_attrib_id, cav.attribute_value, ca.name as attribute_name, cav.small_text attribute_small_text, pt.tag_id, tg.label tag_label, ptabs.name as tab_name, ptabs.id as tab_id, ptabs.content as tab_content, ptabs.order_seq as tab_order_seq, st.display_name_1 sticker_label_lang_1, st.display_name_2 sticker_label_lang_2, st.display_name_3 sticker_label_lang_3, st.display_name_4 sticker_label_lang_4, st.display_name_5 sticker_label_lang_5, pi.id as product_img_id, pi.image_file_name product_img_file_name, pi.image_label product_image_label, pi.sort_order product_img_sort_order, (select concat(''['',group_concat(concat(''{"name":"'',replace(specca.name,''"'',''\"''),''","value":"'',replace(pav.attribute_value,''"'',''\"''),''"}'')),'']'') from ##CATALOG_DB##.product_attribute_values pav inner join ##CATALOG_DB##.catalog_attributes specca on specca.cat_attrib_id = pav.cat_attrib_id where coalesce(pav.attribute_value,'''') <> '''' and pav.product_id = p.id group by p.id) spec_attribs, cw.id as comewith_id, cw.name as comewith_name, cw.lang_1_description as comewith_lang_1_description, cw.lang_2_description as comewith_lang_2_description, cw.lang_3_description as comewith_lang_3_description, cw.lang_4_description as comewith_lang_4_description, cw.lang_5_description as comewith_lang_5_description, cw.visible_to comewith_visible_to, cw.start_date as comewith_start_date, cw.end_date comewith_end_date, cw.comewith as comewith, cw.type as comewith_type, cw.applied_to_type as comewith_applied_to_type, case when cw.applied_to_type = ''product'' then cwproduct.product_uuid else cw.applied_to_value end as comewith_applied_to_value, cw.title as comewith_title, cw.variant_type as comewith_variant_type, cw.frequency as comewith_frequency, cw.order_seq as comewith_order_seq, promo.id as promo_id, promo.name as promo_name, promo.start_date as promo_start_date, promo.end_date as promo_end_date, promo.flash_sale as promo_flash_sale, promo.flash_sale_quantity as promo_flash_sale_quantity, promo.visible_to as promo_visible_to, promo.discount_type as promo_discount_type, promo.discount_value as promo_discount_value, promo.duration as promo_duration, promo.lang_1_description as promo_lang_1_description, promo.lang_2_description as promo_lang_2_description, promo.lang_3_description as promo_lang_3_description, promo.lang_4_description as promo_lang_4_description, promo.lang_5_description as promo_lang_5_description, promo.lang_1_title as promo_lang_1_title, promo.lang_2_title as promo_lang_2_title, promo.lang_3_title as promo_lang_3_title, promo.lang_4_title as promo_lang_4_title, promo.lang_5_title as promo_lang_5_title, promo.frequency as promo_frequency, promo_rules.applied_to_type as promo_applied_to_type, case when promo_rules.applied_to_type = ''product'' then promoproduct.product_uuid else promo_rules.applied_to_value end as promo_applied_to_value, promo.order_seq as promo_order_seq, addfee.id as addfee_id, addfee.additional_fee as addfee_additional_fee, addfee.visible_to as addfee_visible_to, addfee.start_date as addfee_start_date, addfee.end_date as addfee_end_date, addfee_rules.element_type as addfee_element_type, case when addfee_rules.element_type = ''product'' then addfeeproduct.product_uuid else addfee_rules.element_type_value end as addfee_element_type_value, addfee.order_seq as addfee_order_seq, addfee.lang_1_description as addfee_lang_1_description, addfee.lang_2_description as addfee_lang_2_description, addfee.lang_3_description as addfee_lang_3_description, addfee.lang_4_description as addfee_lang_4_description, addfee.lang_5_description as addfee_lang_5_description, ccnt.published_url from ##CATALOG_DB##.language l inner join ##CATALOG_DB##.products p inner join ##PREPROD_CATALOG_DB##.products p2 on p2.id = p.id inner join ##CATALOG_DB##.catalogs c on c.site_id = ##site_id## and c.id = p.catalog_id left outer join ##PORTAL_DB##.cached_content_view ccnt on ccnt.site_id = c.site_id and ccnt.content_type = ''product'' and ccnt.content_id = p.id and ccnt.lang = l.langue_code left outer join ##CATALOG_DB##.products_folders fl on fl.id = p.folder_id left outer join ##CATALOG_DB##.product_variants pv on pv.product_id = p.id left outer join ##CATALOG_DB##.product_descriptions pd on pd.product_id = p.id and l.langue_id = pd.langue_id left outer join ##CATALOG_DB##.product_variant_details pvd on pv.id = pvd.product_variant_id and pvd.langue_id = l.langue_id left outer join ##CATALOG_DB##.product_variant_resources pvr on pvr.product_variant_id = pv.id and pvr.langue_id = l.langue_id left outer join ##CATALOG_DB##.product_essential_blocks peb on peb.product_id = p.id and peb.langue_id = l.langue_id left outer join ##CATALOG_DB##.product_variant_ref pvref on pvref.product_variant_id = pv.id left outer join ##CATALOG_DB##.catalog_attribute_values cav on cav.id = pvref.catalog_attribute_value_id left outer join ##CATALOG_DB##.catalog_attributes ca on ca.cat_attrib_id = pvref.cat_attrib_id left outer join ##CATALOG_DB##.product_tags pt on pt.product_id = p.id left outer join ##CATALOG_DB##.tags tg on tg.id = pt.tag_id left outer join ##CATALOG_DB##.product_tabs ptabs on ptabs.product_id = p.id and ptabs.langue_id = l.langue_id left outer join ##CATALOG_DB##.stickers st on c.site_id = st.site_id and st.sname = pv.sticker left outer join ##CATALOG_DB##.product_images pi on pi.product_id = p.id and pi.langue_id = l.langue_id left outer join ##CATALOG_DB##.comewiths_rules cwr on case when cwr.associated_to_type = ''sku'' then pv.sku = cwr.associated_to_value when cwr.associated_to_type = ''product'' then p.id = cwr.associated_to_value when cwr.associated_to_type = ''product_type'' then p.product_type = cwr.associated_to_value when cwr.associated_to_type = ''catalog'' then c.id = cwr.associated_to_value when cwr.associated_to_type = ''manufacturer'' then p.brand_name = cwr.associated_to_value when cwr.associated_to_type = ''tag'' then cwr.associated_to_value in (select pt2.tag_id from ##CATALOG_DB##.product_tags pt2 where pt2.product_id = p.id) end left outer join ##CATALOG_DB##.comewiths cw on cw.site_id = c.site_id and cw.id = cwr.comewith_id left outer join ##CATALOG_DB##.products cwproduct on cwproduct.id = cw.applied_to_value left outer join ##CATALOG_DB##.promotions_rules promo_rules on case when promo_rules.applied_to_type = ''sku'' then pv.sku = promo_rules.applied_to_value when promo_rules.applied_to_type = ''product'' then p.id = promo_rules.applied_to_value when promo_rules.applied_to_type = ''product_type'' then p.product_type = promo_rules.applied_to_value when promo_rules.applied_to_type = ''catalog'' then c.id = promo_rules.applied_to_value when promo_rules.applied_to_type = ''manufacturer'' then p.brand_name = promo_rules.applied_to_value when promo_rules.applied_to_type = ''tag'' then promo_rules.applied_to_value in (select pt2.tag_id from ##CATALOG_DB##.product_tags pt2 where pt2.product_id = p.id) end left outer join ##CATALOG_DB##.promotions promo on promo.id = promo_rules.promotion_id and promo.site_id = c.site_id left outer join ##CATALOG_DB##.products promoproduct on promoproduct.id = promo_rules.applied_to_value left outer join ##CATALOG_DB##.additionalfee_rules addfee_rules on case when addfee_rules.element_type = ''sku'' then pv.sku = addfee_rules.element_type_value when addfee_rules.element_type = ''product'' then p.id = addfee_rules.element_type_value when addfee_rules.element_type = ''product_type'' then p.product_type = addfee_rules.element_type_value when addfee_rules.element_type = ''catalog'' then c.id = addfee_rules.element_type_value when addfee_rules.element_type = ''manufacturer'' then p.brand_name = addfee_rules.element_type_value when addfee_rules.element_type = ''tag'' then addfee_rules.element_type_value in (select pt3.tag_id from ##CATALOG_DB##.product_tags pt3 where pt3.product_id = p.id) end left outer join ##CATALOG_DB##.additionalfees addfee on addfee.id = addfee_rules.add_fee_id and addfee.site_id = c.site_id left outer join ##CATALOG_DB##.products addfeeproduct on addfeeproduct.id = addfee_rules.element_type_value where c.catalog_type= ##catalog_type## and p.id = ##product_id## order by cw.order_seq,cw.created_on, promo.order_seq,promo.created_on, addfee.order_seq, addfee.created_on)' where name = 'products';
update es_query_levels set j_object_columns = 'product_id,folder_id,folder_name,product_type,payment_online,payment_cash_on_delivery,sort_variant,allow_ratings,allow_comments,allow_complaints,allow_questions,is_new,show_basket,show_quickbuy,product_order_seq,brand_name,sort_variant_label,created_date:product_created_date,created_time:product_created_time,updated_date:product_updated_date,updated_time:product_updated_time,published_date:product_published_date,published_time:product_published_time' where query_name = 'products' and coalesce(parent_level_id,'') = '' and j_object_key = 'product_id';