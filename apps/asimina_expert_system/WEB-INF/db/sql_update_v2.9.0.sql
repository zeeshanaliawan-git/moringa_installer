-- START 03-06-2021 --

update es_queries set query = 'select l.langue_id, l.langue_code, pvd.action_button_desktop, pvd.action_button_desktop_url, pvd.action_button_mobile, pvd.action_button_mobile_url, c.name as catalog_name, c.catalog_type as catalog_type, p.product_type, p.payment_online, p.payment_cash_on_delivery, p.sort_variant, case coalesce(p.sort_variant,\'\')  when \'cu\' then \'Custom\' when \'pa\' then \'Price asc\' when \'pd\' then \'Price desc\' when \'cdd\' then \'Created date desc\' when \'cda\' then \'Created date asc\' else coalesce(p.sort_variant,\'\') end sort_variant_label, p.allow_ratings, p.allow_comments, p.allow_complaints, p.allow_questions, p.is_new, p.show_basket, p.show_quickbuy, p.order_seq product_order_seq, p.brand_name, p.product_uuid as product_id, p.lang_1_name as product_lang_1_name, p.lang_2_name as product_lang_2_name, p.lang_3_name as product_lang_3_name, p.lang_4_name as product_lang_4_name, p.lang_5_name as product_lang_5_name, pv.id as variant_id, pv.price variant_price, pv.sku variant_sku, pv.stock variant_stock, pv.is_active variant_is_active, pv.is_default variant_is_default, pv.is_show_price variant_is_show_price, pv.sticker variant_sticker , pvd.name as variant_name, pd.summary, pd.main_features, pvr.sort_order variant_res_sort_order, pvr.id as variant_res_id, pvr.type as variant_res_type, pvr.path as variant_res_path, pvr.label as variant_res_label, peb.id as essentials_id, peb.block_text essentials_block_text, peb.file_name essentials_file_name, peb.image_label as essentials_image_label, peb.order_seq essentials_order_seq, pvref.cat_attrib_id, cav.attribute_value, ca.name as attribute_name, cav.small_text attribute_small_text, pt.tag_id, tg.label tag_label, ptabs.name as tab_name, ptabs.id as tab_id, ptabs.content as tab_content, ptabs.order_seq as tab_order_seq, st.display_name_1 sticker_label_lang_1, st.display_name_2 sticker_label_lang_2, st.display_name_3 sticker_label_lang_3, st.display_name_4 sticker_label_lang_4, st.display_name_5 sticker_label_lang_5, pi.id as product_img_id, pi.image_file_name product_img_file_name, pi.image_label product_image_label, pi.sort_order product_img_sort_order, (select concat(\'[\',group_concat(concat(\'{\"name\":\"\',replace(specca.name,\'\"\',\'\"\'),\'\",\"value\":\"\',replace(pav.attribute_value,\'\"\',\'\"\'),\'\"}\')),\']\') from ##CATALOG_DB##.product_attribute_values pav inner join ##CATALOG_DB##.catalog_attributes specca on specca.cat_attrib_id = pav.cat_attrib_id where coalesce(pav.attribute_value,\'\') <> \'\' and pav.product_id = p.id group by p.id) spec_attribs from ##CATALOG_DB##.language l inner join ##CATALOG_DB##.products p inner join ##CATALOG_DB##.catalogs c on c.site_id = ##site_id## and c.id = p.catalog_id left outer join ##CATALOG_DB##.product_variants pv on pv.product_id = p.id left outer join ##CATALOG_DB##.product_descriptions pd on pd.product_id = p.id and l.langue_id = pd.langue_id left outer join ##CATALOG_DB##.product_variant_details pvd on pv.id = pvd.product_variant_id and pvd.langue_id = l.langue_id left outer join ##CATALOG_DB##.product_variant_resources pvr on pvr.product_variant_id = pv.id and pvr.langue_id = l.langue_id left outer join ##CATALOG_DB##.product_essential_blocks peb on peb.product_id = p.id and peb.langue_id = l.langue_id left outer join ##CATALOG_DB##.product_variant_ref pvref on pvref.product_variant_id = pv.id left outer join ##CATALOG_DB##.catalog_attribute_values cav on cav.id = pvref.catalog_attribute_value_id left outer join ##CATALOG_DB##.catalog_attributes ca on ca.cat_attrib_id = pvref.cat_attrib_id left outer join ##CATALOG_DB##.product_tags pt on pt.product_id = p.id left outer join ##CATALOG_DB##.tags tg on tg.id = pt.tag_id left outer join ##CATALOG_DB##.product_tabs ptabs on ptabs.product_id = p.id and ptabs.langue_id = l.langue_id left outer join ##CATALOG_DB##.stickers st on c.site_id = st.site_id and st.sname = pv.sticker left outer join ##CATALOG_DB##.product_images pi on pi.product_id = p.id and pi.langue_id = l.langue_id where p.id = ##product_id##' where name = "products";
update es_query_levels set j_object_columns = 'product_id,catalog_name, catalog_type,product_type,payment_online,payment_cash_on_delivery,sort_variant,allow_ratings,allow_comments,allow_complaints,allow_questions,is_new,show_basket,show_quickbuy,product_order_seq,brand_name,sort_variant_label' where j_object = "products"
update es_queries set query = 'select l.langue_id, p.uuid as page_id, p.name, p.type, p.path, p.langue_code, p.variant, p.html_file_path, p.published_html_file_path, p.canonical_url, p.title, p.meta_keywords, p.meta_description, p.dl_page_type, p.dl_sub_level_1, p.dl_sub_level_2, p.package_name, p.class_name, p.layout, p.social_title, p.social_type, p.social_description, p.social_image, p.social_twitter_message, p.social_twitter_hashtags, p.social_email_subject, p.social_email_popin_title, p.social_email_message, p.social_sms_text, p.publish_status, p.row_height, p.item_margin_x, p.item_margin_y, p.container_padding_x, p.container_padding_y, p.dynamic_html, p.layout_data, p.get_html_status, ptags.tag_id tag_id, pmt.meta_name, pmt.meta_content, pb.sort_order bloc_sort_order, b.name bloc_name, b.uuid bloc_id, ptm.uuid as template_id, ptm.name as template_name, ptm.custom_id as template_custom_id, ptm.description as template_description, ptm.template_code as template_code, ptm.is_system as template_is_system, pti.id as item_id, pti.name as item_name, pti.custom_id as item_custom_id, pti.sort_order as item_sort_order, ptib.sort_order as item_bloc_sort_order, ib.uuid as item_bloc_id, ib.name as item_bloc_name, ptid.css_classes as item_detail_css_classes, ptid.css_style item_detail_css_style, pf.form_id as form_id, pf.sort_order page_form_sort_order from ##PAGES_DB##.pages p left outer join ##PAGES_DB##.language l on l.langue_code = p.langue_code left outer join ##PAGES_DB##.pages_tags ptags on ptags.page_id = p.id left outer join ##PAGES_DB##.pages_meta_tags pmt on pmt.page_id = p.id left outer join ##PAGES_DB##.pages_blocs pb on pb.page_id = p.id left outer join ##PAGES_DB##.blocs b on b.id = pb.bloc_id left outer join ##PAGES_DB##.page_templates ptm on ptm.id = p.template_id left outer join ##PAGES_DB##.page_templates_items pti on pti.page_template_id = ptm.id left outer join ##PAGES_DB##.page_templates_items_blocs ptib on ptib.item_id = pti.id and ptib.langue_id = l.langue_id left outer join ##PAGES_DB##.blocs ib on ib.id = ptib.bloc_id left outer join ##PAGES_DB##.page_templates_items_details ptid on ptid.item_id = pti.id and ptid.langue_id = l.langue_id left outer join ##PAGES_DB##.pages_forms pf on pf.page_id = p.id where p.type = \'freemarker\' and p.site_id = ##site_id## and p.id = ##page_id##' where name = "pages";
delete from query_types where query_name = "tags";

-- END 03-06-2021 --


-- START 21-06-2021 --

update es_queries set query = '(select l.langue_id, l.langue_code, pvd.action_button_desktop, pvd.action_button_desktop_url, pvd.action_button_mobile, pvd.action_button_mobile_url, c.catalog_type as catalog_type, c.name as catalog_name, p.product_type, p.payment_online, p.payment_cash_on_delivery, p.sort_variant, case coalesce(p.sort_variant,'''')  when ''cu'' then ''Custom'' when ''pa'' then ''Price asc'' when ''pd'' then ''Price desc'' when ''cdd'' then ''Created date desc'' when ''cda'' then ''Created date asc'' else coalesce(p.sort_variant,'''') end sort_variant_label, p.allow_ratings, p.allow_comments, p.allow_complaints, p.allow_questions, p.is_new, p.show_basket, p.show_quickbuy, p.order_seq product_order_seq, p.brand_name, p.product_uuid as product_id, p.lang_1_name as product_lang_1_name, p.lang_2_name as product_lang_2_name, p.lang_3_name as product_lang_3_name, p.lang_4_name as product_lang_4_name, p.lang_5_name as product_lang_5_name, pv.id as variant_id, pv.price variant_price, pv.sku variant_sku, pv.stock variant_stock, pv.is_active variant_is_active, pv.is_default variant_is_default, pv.is_show_price variant_is_show_price, pv.sticker variant_sticker , pvd.name as variant_name, pd.summary, pd.main_features, pvr.sort_order variant_res_sort_order, pvr.id as variant_res_id, pvr.type as variant_res_type, pvr.path as variant_res_path, pvr.label as variant_res_label, peb.id as essentials_id, peb.block_text essentials_block_text, peb.file_name essentials_file_name, peb.image_label as essentials_image_label, peb.order_seq essentials_order_seq, pvref.cat_attrib_id, cav.attribute_value, ca.name as attribute_name, cav.small_text attribute_small_text, pt.tag_id, tg.label tag_label, ptabs.name as tab_name, ptabs.id as tab_id, ptabs.content as tab_content, ptabs.order_seq as tab_order_seq, st.display_name_1 sticker_label_lang_1, st.display_name_2 sticker_label_lang_2, st.display_name_3 sticker_label_lang_3, st.display_name_4 sticker_label_lang_4, st.display_name_5 sticker_label_lang_5, pi.id as product_img_id, pi.image_file_name product_img_file_name, pi.image_label product_image_label, pi.sort_order product_img_sort_order, (select concat(''['',group_concat(concat(''{"name":"'',replace(specca.name,''"'',''\\\\"''),''","value":"'',replace(pav.attribute_value,''"'',''\\\\"''),''"}'')),'']'') from ##CATALOG_DB##.product_attribute_values pav inner join ##CATALOG_DB##.catalog_attributes specca on specca.cat_attrib_id = pav.cat_attrib_id where coalesce(pav.attribute_value,'''') <> '''' and pav.product_id = p.id group by p.id) spec_attribs, cw.id as comewith_id, cw.name as comewith_name, cw.lang_1_description as comewith_lang_1_description, cw.lang_2_description as comewith_lang_2_description, cw.lang_3_description as comewith_lang_3_description, cw.lang_4_description as comewith_lang_4_description, cw.lang_5_description as comewith_lang_5_description, cw.visible_to comewith_visible_to, cw.start_date as comewith_start_date, cw.end_date comewith_end_date, cw.comewith as comewith, cw.type as comewith_type, cw.applied_to_type as comewith_applied_to_type, case when cw.applied_to_type = ''product'' then cwproduct.product_uuid else cw.applied_to_value end as comewith_applied_to_value, cw.title as comewith_title, cw.variant_type as comewith_variant_type, cw.frequency as comewith_frequency, cw.order_seq as comewith_order_seq, promo.id as promo_id, promo.name as promo_name, promo.start_date as promo_start_date, promo.end_date as promo_end_date, promo.flash_sale as promo_flash_sale, promo.flash_sale_quantity as promo_flash_sale_quantity, promo.visible_to as promo_visible_to, promo.discount_type as promo_discount_type, promo.discount_value as promo_discount_value, promo.duration as promo_duration, promo.lang_1_description as promo_lang_1_description, promo.lang_2_description as promo_lang_2_description, promo.lang_3_description as promo_lang_3_description, promo.lang_4_description as promo_lang_4_description, promo.lang_5_description as promo_lang_5_description, promo.lang_1_title as promo_lang_1_title, promo.lang_2_title as promo_lang_2_title, promo.lang_3_title as promo_lang_3_title, promo.lang_4_title as promo_lang_4_title, promo.lang_5_title as promo_lang_5_title, promo.frequency as promo_frequency, promo_rules.applied_to_type as promo_applied_to_type, case when promo_rules.applied_to_type = ''product'' then promoproduct.product_uuid else promo_rules.applied_to_value end as promo_applied_to_value, promo.order_seq as promo_order_seq, addfee.id as addfee_id, addfee.additional_fee as addfee_additional_fee, addfee.visible_to as addfee_visible_to, addfee.start_date as addfee_start_date, addfee.end_date as addfee_end_date, addfee_rules.element_type as addfee_element_type, case when addfee_rules.element_type = ''product'' then addfeeproduct.product_uuid else addfee_rules.element_type_value end as addfee_element_type_value, addfee.order_seq as addfee_order_seq, addfee.lang_1_description as addfee_lang_1_description, addfee.lang_2_description as addfee_lang_2_description, addfee.lang_3_description as addfee_lang_3_description, addfee.lang_4_description as addfee_lang_4_description, addfee.lang_5_description as addfee_lang_5_description from ##CATALOG_DB##.language l inner join ##CATALOG_DB##.products p inner join ##CATALOG_DB##.catalogs c on c.site_id = ##site_id## and c.id = p.catalog_id left outer join ##CATALOG_DB##.product_variants pv on pv.product_id = p.id left outer join ##CATALOG_DB##.product_descriptions pd on pd.product_id = p.id and l.langue_id = pd.langue_id left outer join ##CATALOG_DB##.product_variant_details pvd on pv.id = pvd.product_variant_id and pvd.langue_id = l.langue_id left outer join ##CATALOG_DB##.product_variant_resources pvr on pvr.product_variant_id = pv.id and pvr.langue_id = l.langue_id left outer join ##CATALOG_DB##.product_essential_blocks peb on peb.product_id = p.id and peb.langue_id = l.langue_id left outer join ##CATALOG_DB##.product_variant_ref pvref on pvref.product_variant_id = pv.id left outer join ##CATALOG_DB##.catalog_attribute_values cav on cav.id = pvref.catalog_attribute_value_id left outer join ##CATALOG_DB##.catalog_attributes ca on ca.cat_attrib_id = pvref.cat_attrib_id left outer join ##CATALOG_DB##.product_tags pt on pt.product_id = p.id left outer join ##CATALOG_DB##.tags tg on tg.id = pt.tag_id left outer join ##CATALOG_DB##.product_tabs ptabs on ptabs.product_id = p.id and ptabs.langue_id = l.langue_id left outer join ##CATALOG_DB##.stickers st on c.site_id = st.site_id and st.sname = pv.sticker left outer join ##CATALOG_DB##.product_images pi on pi.product_id = p.id and pi.langue_id = l.langue_id left outer join ##CATALOG_DB##.comewiths_rules cwr on case when cwr.associated_to_type = ''sku'' then pv.sku = cwr.associated_to_value when cwr.associated_to_type = ''product'' then p.id = cwr.associated_to_value when cwr.associated_to_type = ''product_type'' then p.product_type = cwr.associated_to_value when cwr.associated_to_type = ''catalog'' then c.id = cwr.associated_to_value when cwr.associated_to_type = ''manufacturer'' then p.brand_name = cwr.associated_to_value when cwr.associated_to_type = ''tag'' then cwr.associated_to_value in (select pt2.tag_id from ##CATALOG_DB##.product_tags pt2 where pt2.product_id = p.id) end left outer join ##CATALOG_DB##.comewiths cw on cw.site_id = c.site_id and cw.id = cwr.comewith_id left outer join ##CATALOG_DB##.products cwproduct on cwproduct.id = cw.applied_to_value left outer join ##CATALOG_DB##.promotions_rules promo_rules on case when promo_rules.applied_to_type = ''sku'' then pv.sku = promo_rules.applied_to_value when promo_rules.applied_to_type = ''product'' then p.id = promo_rules.applied_to_value when promo_rules.applied_to_type = ''product_type'' then p.product_type = promo_rules.applied_to_value when promo_rules.applied_to_type = ''catalog'' then c.id = promo_rules.applied_to_value when promo_rules.applied_to_type = ''manufacturer'' then p.brand_name = promo_rules.applied_to_value when promo_rules.applied_to_type = ''tag'' then promo_rules.applied_to_value in (select pt2.tag_id from ##CATALOG_DB##.product_tags pt2 where pt2.product_id = p.id) end left outer join ##CATALOG_DB##.promotions promo on promo.id = promo_rules.promotion_id and promo.site_id = c.site_id left outer join ##CATALOG_DB##.products promoproduct on promoproduct.id = promo_rules.applied_to_value left outer join ##CATALOG_DB##.additionalfee_rules addfee_rules on case when addfee_rules.element_type = ''sku'' then pv.sku = addfee_rules.element_type_value when addfee_rules.element_type = ''product'' then p.id = addfee_rules.element_type_value when addfee_rules.element_type = ''product_type'' then p.product_type = addfee_rules.element_type_value when addfee_rules.element_type = ''catalog'' then c.id = addfee_rules.element_type_value when addfee_rules.element_type = ''manufacturer'' then p.brand_name = addfee_rules.element_type_value when addfee_rules.element_type = ''tag'' then addfee_rules.element_type_value in (select pt3.tag_id from ##CATALOG_DB##.product_tags pt3 where pt3.product_id = p.id) end left outer join ##CATALOG_DB##.additionalfees addfee on addfee.id = addfee_rules.add_fee_id and addfee.site_id = c.site_id left outer join ##CATALOG_DB##.products addfeeproduct on addfeeproduct.id = addfee_rules.element_type_value where p.id = ##product_id## order by cw.order_seq,cw.created_on, promo.order_seq,promo.created_on, addfee.order_seq, addfee.created_on)' where name = 'products';

alter table es_queries add primary key (id);
ALTER TABLE es_queries MODIFY id int(11) NOT NULL AUTO_INCREMENT;

alter table es_query_levels add primary key (id);
ALTER TABLE es_query_levels MODIFY id int(11) NOT NULL AUTO_INCREMENT;


select @iid := id from es_query_levels where query_name ='products' and coalesce(parent_level_id,'') = '';
insert into es_query_levels (query_name, parent_level_id, j_object, j_object_key, j_object_columns) values ('products',@iid,'comewiths','comewith_id','id:comewith_id,name:comewith_name,visible_to:comewith_visible_to,start_date:comewith_start_date,end_date:comewith_end_date,comewith:comewith,type:comewith_type,applied_to_type:comewith_applied_to_type,applied_to_value:comewith_applied_to_value,title:comewith_title,variant_type:comewith_variant_type,frequency:comewith_frequency,order_seq:comewith_order_seq');
select @iid := id from es_query_levels where query_name ='products' and j_object = 'comewiths';
insert into es_query_levels (query_name, parent_level_id, j_object, j_object_key, j_object_columns) values ('products',@iid,'language','langue_id','langue_code,description:comewith_lang_<key>_description');

select @iid := id from es_query_levels where query_name ='products' and coalesce(parent_level_id,'') = '';
insert into es_query_levels (query_name, parent_level_id, j_object, j_object_key, j_object_columns) values ('products',@iid,'promos','promo_id','id:promo_id,name:promo_name,visible_to:promo_visible_to,start_date:promo_start_date,end_date:promo_end_date,flash_sale_quantity:promo_flash_sale_quantity,flash_sale:promo_flash_sale,discount_type:promo_discount_type,discount_value:promo_discount_value,duration:promo_duration,frequency:promo_frequency,applied_to_type:promo_applied_to_type,applied_to_value:promo_applied_to_value,order_seq:promo_order_seq');
select @iid := id from es_query_levels where query_name ='products' and j_object = 'promos';
insert into es_query_levels (query_name, parent_level_id, j_object, j_object_key, j_object_columns) values ('products',@iid,'language','langue_id','langue_code,description:promo_lang_<key>_description,title:promo_lang_<key>_title');

select @iid := id from es_query_levels where query_name ='products' and coalesce(parent_level_id,'') = '';
insert into es_query_levels (query_name, parent_level_id, j_object, j_object_key, j_object_columns) values ('products',@iid,'additional_fees','addfee_id','id:addfee_id,name:addfee_additional_fee,visible_to:addfee_visible_to,start_date:addfee_start_date,end_date:addfee_end_date,applied_to_type:addfee_element_type,applied_to_value:addfee_element_type_value,order_seq:comewith_order_seq');
select @iid := id from es_query_levels where query_name ='products' and j_object = 'additional_fees';
insert into es_query_levels (query_name, parent_level_id, j_object, j_object_key, j_object_columns) values ('products',@iid,'language','langue_id','langue_code,description:addfee_lang_<key>_description');

insert into es_query_col_mapping (query_name,col,mapped_cols) values ('products','comewith_description','comewith_lang_1_description,comewith_lang_2_description,comewith_lang_3_description,comewith_lang_4_description,comewith_lang_5_description');
insert into es_query_col_mapping (query_name,col,mapped_cols) values ('products','promo_description','promo_lang_1_description,promo_lang_2_description,promo_lang_3_description,promo_lang_4_description,promo_lang_5_description');
insert into es_query_col_mapping (query_name,col,mapped_cols) values ('products','promo_title','promo_lang_1_title,promo_lang_2_title,promo_lang_3_title,promo_lang_4_title,promo_lang_5_title');
insert into es_query_col_mapping (query_name,col,mapped_cols) values ('products','additional_fee_description','addfee_lang_1_description,addfee_lang_2_description,addfee_lang_3_description,addfee_lang_4_description,addfee_lang_5_description');


-- END 21-06-2021 --