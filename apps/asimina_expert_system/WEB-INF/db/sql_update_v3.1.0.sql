create table es_queries_v3_1 as select * from es_queries;

update es_queries set query = 'select scp.uuid as content_id, scp.name as content_name, bt.id as bloc_template_id, bt.name as bloc_template_name, bt.custom_id as bloc_template_custom_id, bt.type as bloc_template_type, l.langue_code, l.langue_id, scdp.fd_content_data_2 content_data, scdp.id as content_detail_id, f.name as folder_name, f.uuid as folder_id from ##PAGES_DB##.language l inner join ##PAGES_DB##.structured_contents_published scp left outer join ##PAGES_DB##.structured_contents_details_published scdp on scdp.content_id = scp.id and scdp.langue_id = l.langue_id inner join ##PAGES_DB##.bloc_templates bt on bt.id = scp.template_id left outer join ##PAGES_DB##.folders f ON scp.folder_id = f.id where scp.type = ''content'' and scp.site_id = ##site_id## and case when ##sc_uuid## = ''All'' then 1 else scp.template_id end = case when ##sc_uuid## = ''All'' then 1 else ##sc_uuid## end' where name = 'structured_content'; 

update es_queries set query = 'select bt.id as bloc_template_id, bt.name as bloc_template_name, bt.custom_id as bloc_template_custom_id, bt.type as bloc_template_type, l.langue_code, l.langue_id, scp.id content_id, scp.uuid content_uuid, scp.name content_name, scp.publish_status content_publish_status, scdp.fd_content_data_2 content_data,f.name as folder_name, f.uuid as folder_id,fd.path_prefix folder_path_prefix,pg.canonical_url page_canonical_url,pg.uuid AS page_id,pg.NAME AS page_name,pg.type AS page_type,pg.path AS page_path,pg.publish_status AS page_publish_status,coalesce(ccnt.published_url,'''') as published_url from ##PAGES_DB##.language l inner join ##PAGES_DB##.structured_contents_published scp left outer join ##PAGES_DB##.structured_contents_details_published scdp on scdp.content_id = scp.id and scdp.langue_id = l.langue_id left outer JOIN ##PAGES_DB##.pages pg ON pg.id = scdp.page_id and pg.langue_code = l.langue_code left outer join ##PORTAL_DB##.cached_content_view ccnt on ccnt.content_type = ''page'' and ccnt.content_id = pg.id and ccnt.lang = l.langue_code and ccnt.site_id = pg.site_id inner join ##PAGES_DB##.bloc_templates bt on bt.type <> ''store'' and bt.id = scp.template_id left outer join ##PAGES_DB##.folders f ON scp.folder_id = f.id left outer join ##PAGES_DB##.folders_details fd ON fd.folder_id = f.id AND l.langue_id = fd.langue_id where scp.type = ''page'' and scp.site_id = ##site_id## and case when ##sc_uuid## = ''All'' then 1 else scp.template_id end = case when ##sc_uuid## = ''All'' then 1 else ##sc_uuid## end ' where name = 'structured_page'; 

update es_queries set query = 'select bt.id as bloc_template_id, bt.name as bloc_template_name, bt.custom_id as bloc_template_custom_id, bt.type as bloc_template_type, l.langue_code, l.langue_id, scp.id content_id, scp.uuid content_uuid, scp.name content_name, scp.publish_status content_publish_status, scdp.fd_content_data_2 content_data,f.name as folder_name, f.uuid as folder_id,fd.path_prefix folder_path_prefix,pg.canonical_url page_canonical_url,pg.uuid AS page_id,pg.NAME AS page_name,pg.type AS page_type,pg.path AS page_path,pg.publish_status AS page_publish_status,coalesce(ccnt.published_url,'''') as published_url from ##PAGES_DB##.language l inner join ##PAGES_DB##.structured_contents_published scp left outer join ##PAGES_DB##.structured_contents_details_published scdp on scdp.content_id = scp.id and scdp.langue_id = l.langue_id left outer JOIN ##PAGES_DB##.pages pg ON pg.id = scdp.page_id and pg.langue_code = l.langue_code left outer join ##PORTAL_DB##.cached_content_view ccnt on ccnt.content_type = ''page'' and ccnt.content_id = pg.id and ccnt.lang = l.langue_code and ccnt.site_id = pg.site_id inner join ##PAGES_DB##.bloc_templates bt on bt.type = ''store'' and bt.id = scp.template_id left outer join ##PAGES_DB##.folders f ON scp.folder_id = f.id left outer join ##PAGES_DB##.folders_details fd ON fd.folder_id = f.id AND l.langue_id = fd.langue_id where scp.type = ''page'' and scp.site_id = ##site_id## and case when ##sc_uuid## = ''All'' then 1 else scp.template_id end = case when ##sc_uuid## = ''All'' then 1 else ##sc_uuid## end' where name = 'stores'; 

update es_query_levels set j_object_columns = 'id:bloc_id,name:bloc_name,refresh_interval:bloc_refresh_interval,start_date:bloc_start_date,end_date:bloc_end_date,visible_to:bloc_visible_to,margin_top:bloc_margin_top,margin_bottom:bloc_margin_bottom,description:bloc_description,rss_feed_ids:bloc_rss_feed_ids,rss_feed_sort:bloc_rss_feed_sort' where j_object_key = 'bloc_id' and j_object = 'blocs' and query_name = 'blocs' and coalesce(parent_level_id,'') = '';

update es_queries set distinct_keys_query = null, query = 'select b.uuid bloc_id, b.name bloc_name, b.refresh_interval bloc_refresh_interval, b.start_date bloc_start_date, b.end_date bloc_end_date, b.visible_to bloc_visible_to, b.margin_top bloc_margin_top, b.margin_bottom bloc_margin_bottom, b.description bloc_description, bd.template_data bloc_template_data, b.rss_feed_ids bloc_rss_feed_ids, b.rss_feed_sort as bloc_rss_feed_sort, bt.id as template_id, bt.name template_name, bt.custom_id template_custom_id, bt.type template_type, bt.description template_description, bt.template_code template_code, bt.css_code template_css_code, bt.js_code template_js_code, lg.langue_id, lg.langue_code, lb.id as library_id, lb.name as library_name, fl.id as file_id, fl.file_name file_name, fl.label file_label, fl.type file_type, btags.tag_id as tag_id from ##PAGES_DB##.language lg join ##PAGES_DB##.blocs b left outer join ##PAGES_DB##.blocs_details bd on lg.langue_id = bd.langue_id and bd.bloc_id = b.id left outer join ##PAGES_DB##.bloc_templates bt on b.template_id = bt.id left outer join ##PAGES_DB##.bloc_templates_libraries btl on btl.bloc_template_id = bt.id left outer join ##PAGES_DB##.libraries lb on lb.id = btl.library_id left outer join ##PAGES_DB##.libraries_files lf on lf.library_id = lb.id left outer join ##PAGES_DB##.files fl on fl.id = lf.file_id left outer join ##PAGES_DB##.blocs_tags btags on btags.bloc_id = b.id where b.site_id = ##site_id## and b.template_id = ##bloc_id##' where name = 'blocs';

select @qid := id from es_query_levels where query_name = 'blocs' and coalesce(parent_level_id,'') = '';

insert into es_query_levels (query_name, parent_level_id, j_object, j_object_key, j_object_columns) values ('blocs', @qid, 'language','langue_id','langue_code,template_data:bloc_template_data');

delete from es_query_levels where query_name = 'blocs' and j_object = 'sections';

delete from es_query_levels where query_name = 'blocs' and j_object = 'fields';

delete from es_query_col_mapping where query_name = 'blocs' and col like 'section_%';

delete from es_query_col_mapping where query_name = 'blocs' and col like 'field_%';


update es_queries set query = replace(query,'scdp.fd_content_data_2','scdp.fd_content_data_3') where name = 'structured_page';

update es_queries set query = replace(query,'scdp.fd_content_data_2','scdp.fd_content_data_3') where name = 'stores';

